    std::shared_ptr<dndSim::npc> Doric = std::make_shared<dndSim::npc>(dndSim::character("doric", 5, {12,16,14,16,19,10}, true, {"int","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> EdginDarvis = std::make_shared<dndSim::npc>(dndSim::character("edgindarvis", 5, {14,16,14,14,16,18}, true, {"dex","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> ForgeFitzwilliam = std::make_shared<dndSim::npc>(dndSim::character("forgefitzwilliam", 8, {11,14,13,15,17,20}, false, {"dex","int"}, "dex", 17));
    std::shared_ptr<dndSim::npc> HolgaKilgore = std::make_shared<dndSim::npc>(dndSim::character("holgakilgore", 5, {19,14,16,11,16,13}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> SimonAumar = std::make_shared<dndSim::npc>(dndSim::character("simonaumar", 5, {8,14,13,16,12,17}, true, {"con","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> Sofina = std::make_shared<dndSim::npc>(dndSim::character("sofina", 15, {12,14,18,20,14,8}, true, {"int","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> XenkYendar = std::make_shared<dndSim::npc>(dndSim::character("xenkyendar", 10, {19,11,16,14,16,17}, false, {"str","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Homarid = std::make_shared<dndSim::npc>(dndSim::character("homarid", 1, {13,8,13,9,14,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> KavuPredator = std::make_shared<dndSim::npc>(dndSim::character("kavupredator", 2, {18,12,15,6,14,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SteelLeafKavu = std::make_shared<dndSim::npc>(dndSim::character("steelleafkavu", 4, {20,12,18,6,14,8}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> AgdonLongscarf = std::make_shared<dndSim::npc>(dndSim::character("agdonlongscarf", 2, {11,20,11,11,14,16}, false, {"dex","wis"}, "dex", 19));
    std::shared_ptr<dndSim::npc> Alagarthas = std::make_shared<dndSim::npc>(dndSim::character("alagarthas", 3, {16,11,14,11,11,15}, false, {"con","wis"}, "str", 10));
    std::shared_ptr<dndSim::npc> BavlornaBlightstraw = std::make_shared<dndSim::npc>(dndSim::character("bavlornablightstraw", 7, {22,11,18,16,12,15}, true, {"con","int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> BullywugKnight = std::make_shared<dndSim::npc>(dndSim::character("bullywugknight", 3, {16,12,13,9,11,14}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Elkhorn = std::make_shared<dndSim::npc>(dndSim::character("elkhorn", 2, {9,13,16,9,10,11}, false, {"str","con"}, "dex", 18));
    std::shared_ptr<dndSim::npc> EndelynMoongrave = std::make_shared<dndSim::npc>(dndSim::character("endelynmoongrave", 6, {20,13,20,13,10,17}, true, {"con","int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Envy = std::make_shared<dndSim::npc>(dndSim::character("envy", 5, {20,11,18,2,12,7}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> GiantSwan = std::make_shared<dndSim::npc>(dndSim::character("giantswan", 1, {16,17,13,8,14,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GlassPegasus = std::make_shared<dndSim::npc>(dndSim::character("glasspegasus", 2, {18,15,16,10,15,13}, false, {"dex","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> GlassworkGolem = std::make_shared<dndSim::npc>(dndSim::character("glassworkgolem", 2, {13,10,10,1,10,1}, false, {"dex","con","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> IggwilvtheWitchQueen = std::make_shared<dndSim::npc>(dndSim::character("iggwilvthewitchqueen", 20, {10,18,18,27,12,23}, true, {"int","wis","cha"}, "int", 19));
    std::shared_ptr<dndSim::npc> Jabberwock = std::make_shared<dndSim::npc>(dndSim::character("jabberwock", 13, {20,12,20,4,7,11}, false, {"str","dex","con","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Kelek = std::make_shared<dndSim::npc>(dndSim::character("kelek", 5, {15,10,14,15,13,17}, true, {"con","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> KettlesteamtheKenku = std::make_shared<dndSim::npc>(dndSim::character("kettlesteamthekenku", 1, {10,16,10,11,10,16}, true, {"wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> LivingDoll = std::make_shared<dndSim::npc>(dndSim::character("livingdoll", 2, {3,11,13,10,10,7}, false, {"int","wis","cha"}, "dex", 11));
    std::shared_ptr<dndSim::npc> Mercion = std::make_shared<dndSim::npc>(dndSim::character("mercion", 3, {15,10,9,12,17,17}, true, {"wis","cha"}, "wis", 19));
    std::shared_ptr<dndSim::npc> MisterLight = std::make_shared<dndSim::npc>(dndSim::character("misterlight", 3, {10,16,12,12,13,17}, true, {"dex","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> MisterWitch = std::make_shared<dndSim::npc>(dndSim::character("misterwitch", 3, {14,11,16,16,13,14}, true, {"int","wis"}, "int", 10));
    std::shared_ptr<dndSim::npc> Molliver = std::make_shared<dndSim::npc>(dndSim::character("molliver", 3, {9,17,16,10,9,16}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Raezil = std::make_shared<dndSim::npc>(dndSim::character("raezil", 1, {10,15,10,12,14,16}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> Ringlerun = std::make_shared<dndSim::npc>(dndSim::character("ringlerun", 5, {9,10,9,17,13,11}, true, {"str","dex","con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> SelenelionTwin = std::make_shared<dndSim::npc>(dndSim::character("seleneliontwin", 2, {7,18,13,12,10,17}, false, {"dex","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> SirTalavar = std::make_shared<dndSim::npc>(dndSim::character("sirtalavar", 2, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> SkabathaNightshade = std::make_shared<dndSim::npc>(dndSim::character("skabathanightshade", 8, {18,9,16,12,16,15}, true, {"con","int","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Skylla = std::make_shared<dndSim::npc>(dndSim::character("skylla", 2, {9,11,14,12,15,17}, true, {"wis","cha"}, "cha", 10));
    std::shared_ptr<dndSim::npc> Strongheart = std::make_shared<dndSim::npc>(dndSim::character("strongheart", 4, {15,12,13,12,13,17}, true, {"wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> SwarmofCampestris = std::make_shared<dndSim::npc>(dndSim::character("swarmofcampestris", 1, {3,7,10,4,10,8}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> TinSoldier = std::make_shared<dndSim::npc>(dndSim::character("tinsoldier", 1, {14,11,13,1,3,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> TreantSapling = std::make_shared<dndSim::npc>(dndSim::character("treantsapling", 2, {17,8,15,12,12,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Warduke = std::make_shared<dndSim::npc>(dndSim::character("warduke", 5, {16,11,14,9,11,11}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> Zarak = std::make_shared<dndSim::npc>(dndSim::character("zarak", 2, {13,16,16,11,15,6}, false, {"dex","int"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Zargash = std::make_shared<dndSim::npc>(dndSim::character("zargash", 3, {14,10,14,12,16,15}, true, {"wis","cha"}, "wis", 13));
    std::shared_ptr<dndSim::npc> BabaLysaga = std::make_shared<dndSim::npc>(dndSim::character("babalysaga", 11, {18,10,16,20,17,13}, true, {"wis"}, "int", 15));
    std::shared_ptr<dndSim::npc> BabaLysagasCreepingHut = std::make_shared<dndSim::npc>(dndSim::character("babalysagascreepinghut", 11, {26,7,20,1,3,3}, false, {"con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> EzmereldadAvenir = std::make_shared<dndSim::npc>(dndSim::character("ezmereldadavenir", 8, {14,19,16,16,11,17}, true, {"wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> GuardianPortrait = std::make_shared<dndSim::npc>(dndSim::character("guardianportrait", 1, {1,1,10,14,10,10}, true, {}, "int", 5));
    std::shared_ptr<dndSim::npc> IzekStrazni = std::make_shared<dndSim::npc>(dndSim::character("izekstrazni", 5, {18,15,16,10,9,15}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MadamEva = std::make_shared<dndSim::npc>(dndSim::character("madameva", 10, {8,11,12,17,20,18}, true, {"con"}, "wis", 10));
    std::shared_ptr<dndSim::npc> PhantomWarrior = std::make_shared<dndSim::npc>(dndSim::character("phantomwarrior", 3, {16,11,16,8,10,15}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Rahadin = std::make_shared<dndSim::npc>(dndSim::character("rahadin", 10, {14,22,17,15,16,18}, true, {"con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Rictavio = std::make_shared<dndSim::npc>(dndSim::character("rictavio", 5, {9,12,13,16,18,16}, true, {"con","wis"}, "wis", 12));
    std::shared_ptr<dndSim::npc> StrahdvonZarovich = std::make_shared<dndSim::npc>(dndSim::character("strahdvonzarovich", 15, {18,18,18,20,15,18}, true, {"dex","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> StrahdZombie = std::make_shared<dndSim::npc>(dndSim::character("strahdzombie", 1, {13,6,16,3,6,5}, false, {"wis"}, "str", 8));
    std::shared_ptr<dndSim::npc> StrahdsAnimatedArmor = std::make_shared<dndSim::npc>(dndSim::character("strahdsanimatedarmor", 6, {17,13,16,9,10,9}, false, {}, "str", 21));
    std::shared_ptr<dndSim::npc> TreeBlight = std::make_shared<dndSim::npc>(dndSim::character("treeblight", 7, {23,10,20,6,10,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> VladimirHorngaard = std::make_shared<dndSim::npc>(dndSim::character("vladimirhorngaard", 7, {18,14,18,13,16,18}, false, {"str","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BigWaterSlurpent = std::make_shared<dndSim::npc>(dndSim::character("bigwaterslurpent", 3, {17,16,13,11,10,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> DankwoodHag = std::make_shared<dndSim::npc>(dndSim::character("dankwoodhag", 3, {18,12,16,13,14,14}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> GreatKroomPurpleWorm = std::make_shared<dndSim::npc>(dndSim::character("greatkroompurpleworm", 15, {10,13,12,11,11,12}, false, {}, "dex", 18));
    std::shared_ptr<dndSim::npc> HangryOtyugh = std::make_shared<dndSim::npc>(dndSim::character("hangryotyugh", 5, {16,11,19,6,13,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> HillGiantBlorbo = std::make_shared<dndSim::npc>(dndSim::character("hillgiantblorbo", 4, {21,8,19,5,9,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SaleeththeCouatl = std::make_shared<dndSim::npc>(dndSim::character("saleeththecouatl", 4, {16,20,17,18,20,18}, true, {}, "wis", 19));
    std::shared_ptr<dndSim::npc> AdultSapphireDragon = std::make_shared<dndSim::npc>(dndSim::character("adultsapphiredragon", 15, {23,16,21,18,17,18}, true, {"dex","con","wis","cha"}, "int", 19));
    std::shared_ptr<dndSim::npc> Aeshma = std::make_shared<dndSim::npc>(dndSim::character("aeshma", 2, {10,16,14,14,14,16}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> AfflictionDevillKocrachonr = std::make_shared<dndSim::npc>(dndSim::character("afflictiondevillkocrachonr", 10, {16,19,15,17,12,14}, false, {"dex","int"}, "dex", 20));
    std::shared_ptr<dndSim::npc> Anacreda = std::make_shared<dndSim::npc>(dndSim::character("anacreda", 17, {25,16,22,15,16,19}, false, {"con","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Anagwendol = std::make_shared<dndSim::npc>(dndSim::character("anagwendol", 16, {20,18,20,18,20,22}, false, {"int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> AvatarofBaalzebul = std::make_shared<dndSim::npc>(dndSim::character("avatarofbaalzebul", 18, {21,13,20,17,18,20}, false, {"str","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> AwfulFisher = std::make_shared<dndSim::npc>(dndSim::character("awfulfisher", 18, {23,16,18,5,10,8}, false, {"dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> AyperoboSwarm = std::make_shared<dndSim::npc>(dndSim::character("ayperoboswarm", 12, {3,24,14,8,13,13}, false, {"dex","cha"}, "dex", 20));
    std::shared_ptr<dndSim::npc> Barachiel = std::make_shared<dndSim::npc>(dndSim::character("barachiel", 13, {18,12,18,11,14,20}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> CorruptionDevillPaeliryonr = std::make_shared<dndSim::npc>(dndSim::character("corruptiondevillpaeliryonr", 14, {21,14,22,19,15,14}, true, {"con","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> Devorastus = std::make_shared<dndSim::npc>(dndSim::character("devorastus", 20, {24,14,22,8,6,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> DisplacerFiend = std::make_shared<dndSim::npc>(dndSim::character("displacerfiend", 9, {17,19,14,8,13,10}, false, {"str","dex"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Ekengarik = std::make_shared<dndSim::npc>(dndSim::character("ekengarik", 16, {23,16,21,14,17,21}, true, {"con","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> FiendishFormian = std::make_shared<dndSim::npc>(dndSim::character("fiendishformian", 4, {18,14,17,10,12,11}, false, {"str"}, "str", 15));
    std::shared_ptr<dndSim::npc> Halog = std::make_shared<dndSim::npc>(dndSim::character("halog", 7, {13,14,18,4,8,8}, false, {"dex","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> HellcatlBezekirar = std::make_shared<dndSim::npc>(dndSim::character("hellcatlbezekirar", 10, {21,19,17,10,14,10}, false, {"dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Jenevere = std::make_shared<dndSim::npc>(dndSim::character("jenevere", 17, {18,22,26,18,20,24}, true, {"int","wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> KohTam = std::make_shared<dndSim::npc>(dndSim::character("kohtam", 10, {16,12,15,19,20,15}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> LesserTyrantShadow = std::make_shared<dndSim::npc>(dndSim::character("lessertyrantshadow", 10, {20,18,20,18,16,18}, false, {"int","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> MaelephantNomad = std::make_shared<dndSim::npc>(dndSim::character("maelephantnomad", 14, {22,11,18,14,17,15}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Miasmorne = std::make_shared<dndSim::npc>(dndSim::character("miasmorne", 16, {22,10,21,3,10,10}, false, {"str","con"}, "str", 19));
    std::shared_ptr<dndSim::npc> Oneirovore = std::make_shared<dndSim::npc>(dndSim::character("oneirovore", 11, {16,12,25,12,10,10}, false, {"con","int"}, "str", 19));
    std::shared_ptr<dndSim::npc> PainDevillExcruciarchr = std::make_shared<dndSim::npc>(dndSim::character("paindevillexcruciarchr", 12, {18,15,20,11,10,13}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Ramius = std::make_shared<dndSim::npc>(dndSim::character("ramius", 14, {23,10,21,11,14,18}, true, {"wis","cha"}, "cha", 22));
    std::shared_ptr<dndSim::npc> Rimmon = std::make_shared<dndSim::npc>(dndSim::character("rimmon", 20, {18,17,22,27,25,16}, false, {"con","int","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Sarevok = std::make_shared<dndSim::npc>(dndSim::character("sarevok", 17, {23,10,21,11,18,14}, true, {"con","wis"}, "wis", 21));
    std::shared_ptr<dndSim::npc> Shredwing = std::make_shared<dndSim::npc>(dndSim::character("shredwing", 12, {11,19,19,15,16,11}, false, {"dex","con"}, "dex", 21));
    std::shared_ptr<dndSim::npc> Slayer = std::make_shared<dndSim::npc>(dndSim::character("slayer", 12, {20,19,18,13,14,14}, false, {"dex","int"}, "str", 19));
    std::shared_ptr<dndSim::npc> StyxDragon = std::make_shared<dndSim::npc>(dndSim::character("styxdragon", 20, {27,14,26,19,20,19}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Tiax = std::make_shared<dndSim::npc>(dndSim::character("tiax", 9, {11,16,14,15,19,18}, true, {"wis","cha"}, "wis", 13));
    std::shared_ptr<dndSim::npc> TyrantShadow = std::make_shared<dndSim::npc>(dndSim::character("tyrantshadow", 17, {22,16,20,20,16,20}, false, {"int","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> Vorvolaka = std::make_shared<dndSim::npc>(dndSim::character("vorvolaka", 14, {15,19,21,8,13,16}, false, {"con","wis"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Waeloquay = std::make_shared<dndSim::npc>(dndSim::character("waeloquay", 18, {26,14,18,8,10,12}, false, {"wis","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> WarDevil = std::make_shared<dndSim::npc>(dndSim::character("wardevil", 16, {24,9,23,7,13,9}, false, {"str","con"}, "str", 11));
    std::shared_ptr<dndSim::npc> Zagum = std::make_shared<dndSim::npc>(dndSim::character("zagum", 20, {17,16,18,22,25,27}, false, {"int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Zythan = std::make_shared<dndSim::npc>(dndSim::character("zythan", 13, {10,14,14,20,15,16}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> AbjurerWizard = std::make_shared<dndSim::npc>(dndSim::character("abjurerwizard", 9, {9,14,14,18,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> AdultKruthik = std::make_shared<dndSim::npc>(dndSim::character("adultkruthik", 2, {15,16,15,7,12,8}, false, {}, "dex", 18));
    std::shared_ptr<dndSim::npc> AdultOblex = std::make_shared<dndSim::npc>(dndSim::character("adultoblex", 5, {8,19,16,19,12,15}, true, {"int","cha"}, "int", 14));
    std::shared_ptr<dndSim::npc> AirElementalMyrmidon = std::make_shared<dndSim::npc>(dndSim::character("airelementalmyrmidon", 7, {18,14,14,9,10,10}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Alhoon = std::make_shared<dndSim::npc>(dndSim::character("alhoon", 10, {11,12,16,19,17,17}, true, {"con","int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> Alkilith = std::make_shared<dndSim::npc>(dndSim::character("alkilith", 11, {12,19,22,6,11,7}, false, {"dex","con"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Allip = std::make_shared<dndSim::npc>(dndSim::character("allip", 5, {6,17,10,17,15,16}, false, {"int","wis"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Amnizu = std::make_shared<dndSim::npc>(dndSim::character("amnizu", 18, {11,13,16,20,12,18}, true, {"dex","con","wis","cha"}, "int", 21));
    std::shared_ptr<dndSim::npc> AngrySorrowsworn = std::make_shared<dndSim::npc>(dndSim::character("angrysorrowsworn", 13, {17,10,19,8,13,6}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> AnnisHag = std::make_shared<dndSim::npc>(dndSim::character("annishag", 6, {21,12,14,13,14,15}, true, {"con"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Archdruid = std::make_shared<dndSim::npc>(dndSim::character("archdruid", 12, {14,14,12,12,20,11}, true, {"int","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> Archer = std::make_shared<dndSim::npc>(dndSim::character("archer", 3, {11,18,16,11,13,10}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Armanite = std::make_shared<dndSim::npc>(dndSim::character("armanite", 7, {21,18,21,8,12,13}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Aurochs = std::make_shared<dndSim::npc>(dndSim::character("aurochs", 2, {20,10,19,2,12,5}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> AutumnEladrin = std::make_shared<dndSim::npc>(dndSim::character("autumneladrin", 10, {12,16,16,14,17,18}, true, {}, "cha", 19));
    std::shared_ptr<dndSim::npc> Babau = std::make_shared<dndSim::npc>(dndSim::character("babau", 4, {19,16,16,11,12,13}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Bael = std::make_shared<dndSim::npc>(dndSim::character("bael", 19, {24,17,20,21,24,24}, true, {"dex","con","int","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Balhannoth = std::make_shared<dndSim::npc>(dndSim::character("balhannoth", 11, {17,8,18,6,15,8}, false, {"con"}, "str", 17));
    std::shared_ptr<dndSim::npc> Banderhobb = std::make_shared<dndSim::npc>(dndSim::character("banderhobb", 5, {20,12,20,11,14,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Bard = std::make_shared<dndSim::npc>(dndSim::character("bard", 2, {11,14,12,10,13,14}, true, {"dex","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> Barghest = std::make_shared<dndSim::npc>(dndSim::character("barghest", 4, {19,15,14,13,12,14}, true, {}, "cha", 17));
    std::shared_ptr<dndSim::npc> Berbalang = std::make_shared<dndSim::npc>(dndSim::character("berbalang", 2, {9,16,9,17,11,10}, true, {"dex","int"}, "int", 14));
    std::shared_ptr<dndSim::npc> BheurHag = std::make_shared<dndSim::npc>(dndSim::character("bheurhag", 7, {13,16,14,12,13,16}, true, {"wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> BlackAbishai = std::make_shared<dndSim::npc>(dndSim::character("blackabishai", 7, {14,17,14,13,16,11}, true, {"dex","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> Blackguard = std::make_shared<dndSim::npc>(dndSim::character("blackguard", 8, {18,11,18,11,14,15}, true, {"wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> BlueAbishai = std::make_shared<dndSim::npc>(dndSim::character("blueabishai", 17, {15,14,17,22,23,18}, true, {"int","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> Bodak = std::make_shared<dndSim::npc>(dndSim::character("bodak", 6, {15,16,15,7,12,12}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Boneclaw = std::make_shared<dndSim::npc>(dndSim::character("boneclaw", 12, {19,16,15,13,15,9}, false, {"dex","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Brontosaurus = std::make_shared<dndSim::npc>(dndSim::character("brontosaurus", 5, {21,9,17,2,10,7}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Bulezau = std::make_shared<dndSim::npc>(dndSim::character("bulezau", 3, {15,14,17,8,9,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> CadaverCollector = std::make_shared<dndSim::npc>(dndSim::character("cadavercollector", 14, {21,14,20,5,11,8}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Canoloth = std::make_shared<dndSim::npc>(dndSim::character("canoloth", 8, {18,10,17,5,17,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Catoblepas = std::make_shared<dndSim::npc>(dndSim::character("catoblepas", 5, {19,12,21,3,14,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> CaveFisher = std::make_shared<dndSim::npc>(dndSim::character("cavefisher", 3, {16,13,14,3,10,3}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Champion = std::make_shared<dndSim::npc>(dndSim::character("champion", 9, {20,15,14,10,14,12}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Choker = std::make_shared<dndSim::npc>(dndSim::character("choker", 1, {16,14,13,4,12,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Choldrith = std::make_shared<dndSim::npc>(dndSim::character("choldrith", 3, {12,16,12,11,14,10}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> ClockworkBronzeScout = std::make_shared<dndSim::npc>(dndSim::character("clockworkbronzescout", 1, {10,16,11,3,14,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ClockworkIronCobra = std::make_shared<dndSim::npc>(dndSim::character("clockworkironcobra", 4, {12,16,14,3,10,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ClockworkOakenBolter = std::make_shared<dndSim::npc>(dndSim::character("clockworkoakenbolter", 5, {12,18,15,3,10,1}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> ClockworkStoneDefender = std::make_shared<dndSim::npc>(dndSim::character("clockworkstonedefender", 4, {19,10,17,3,10,1}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> CloudGiantSmilingOne = std::make_shared<dndSim::npc>(dndSim::character("cloudgiantsmilingone", 11, {26,12,22,15,16,17}, true, {"con","int","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> ConjurerWizard = std::make_shared<dndSim::npc>(dndSim::character("conjurerwizard", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> CorpseFlower = std::make_shared<dndSim::npc>(dndSim::character("corpseflower", 8, {14,14,16,7,15,3}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> DarklingElder = std::make_shared<dndSim::npc>(dndSim::character("darklingelder", 2, {13,17,12,10,14,13}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> DeathKiss = std::make_shared<dndSim::npc>(dndSim::character("deathkiss", 10, {18,14,18,10,12,10}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Deathlock = std::make_shared<dndSim::npc>(dndSim::character("deathlock", 4, {11,15,10,14,12,16}, true, {"int","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> DeathlockMastermind = std::make_shared<dndSim::npc>(dndSim::character("deathlockmastermind", 8, {11,16,12,15,12,17}, true, {"int","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> DeathlockWight = std::make_shared<dndSim::npc>(dndSim::character("deathlockwight", 3, {11,14,16,12,14,16}, true, {"wis"}, "cha", 12));
    std::shared_ptr<dndSim::npc> DeepScion = std::make_shared<dndSim::npc>(dndSim::character("deepscion", 3, {18,13,16,10,12,14}, false, {"wis","cha"}, "str", 11));
    std::shared_ptr<dndSim::npc> Deinonychus = std::make_shared<dndSim::npc>(dndSim::character("deinonychus", 1, {15,15,14,4,12,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> DerroSavant = std::make_shared<dndSim::npc>(dndSim::character("derrosavant", 3, {9,14,12,11,5,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Devourer = std::make_shared<dndSim::npc>(dndSim::character("devourer", 13, {20,12,20,13,10,16}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Dhergoloth = std::make_shared<dndSim::npc>(dndSim::character("dhergoloth", 7, {17,10,19,7,10,9}, true, {"str"}, "wis", 15));
    std::shared_ptr<dndSim::npc> DireTroll = std::make_shared<dndSim::npc>(dndSim::character("diretroll", 13, {22,15,21,9,11,5}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> DivinerWizard = std::make_shared<dndSim::npc>(dndSim::character("divinerwizard", 8, {9,14,11,18,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> DolphinDelighter = std::make_shared<dndSim::npc>(dndSim::character("dolphindelighter", 3, {14,13,13,11,12,16}, false, {"wis","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> Draegloth = std::make_shared<dndSim::npc>(dndSim::character("draegloth", 7, {20,15,18,13,11,11}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> DrowArachnomancer = std::make_shared<dndSim::npc>(dndSim::character("drowarachnomancer", 13, {11,17,14,19,14,16}, true, {"con","int","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> DrowFavoredConsort = std::make_shared<dndSim::npc>(dndSim::character("drowfavoredconsort", 18, {15,20,16,18,15,18}, true, {"dex","con","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> DrowHouseCaptain = std::make_shared<dndSim::npc>(dndSim::character("drowhousecaptain", 9, {14,19,15,12,14,13}, true, {"dex","con","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> DrowInquisitor = std::make_shared<dndSim::npc>(dndSim::character("drowinquisitor", 14, {11,15,14,16,21,20}, true, {"con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> DrowMatronMother = std::make_shared<dndSim::npc>(dndSim::character("drowmatronmother", 20, {12,18,16,17,21,22}, true, {"con","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> DrowShadowblade = std::make_shared<dndSim::npc>(dndSim::character("drowshadowblade", 11, {14,21,16,12,14,13}, true, {"dex","con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> DuergarDespot = std::make_shared<dndSim::npc>(dndSim::character("duergardespot", 12, {20,5,19,15,14,13}, true, {"con","wis"}, "int", 21));
    std::shared_ptr<dndSim::npc> DuergarHammerer = std::make_shared<dndSim::npc>(dndSim::character("duergarhammerer", 2, {17,7,12,5,5,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> DuergarKavalrachni = std::make_shared<dndSim::npc>(dndSim::character("duergarkavalrachni", 2, {14,11,14,11,10,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> DuergarMindMaster = std::make_shared<dndSim::npc>(dndSim::character("duergarmindmaster", 2, {11,17,14,15,10,12}, false, {"wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> DuergarScreamer = std::make_shared<dndSim::npc>(dndSim::character("duergarscreamer", 3, {18,7,12,5,5,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> DuergarSoulblade = std::make_shared<dndSim::npc>(dndSim::character("duergarsoulblade", 1, {16,16,10,11,10,12}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> DuergarStoneGuard = std::make_shared<dndSim::npc>(dndSim::character("duergarstoneguard", 2, {18,11,14,11,10,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> DuergarWarlord = std::make_shared<dndSim::npc>(dndSim::character("duergarwarlord", 6, {18,11,17,12,12,14}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> DuergarXarrorn = std::make_shared<dndSim::npc>(dndSim::character("duergarxarrorn", 2, {16,11,14,11,10,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Dybbuk = std::make_shared<dndSim::npc>(dndSim::character("dybbuk", 4, {6,19,16,16,15,14}, true, {}, "int", 14));
    std::shared_ptr<dndSim::npc> EarthElementalMyrmidon = std::make_shared<dndSim::npc>(dndSim::character("earthelementalmyrmidon", 7, {18,10,17,8,10,10}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Eidolon = std::make_shared<dndSim::npc>(dndSim::character("eidolon", 12, {7,8,9,14,19,16}, false, {"wis"}, "dex", 9));
    std::shared_ptr<dndSim::npc> ElderBrain = std::make_shared<dndSim::npc>(dndSim::character("elderbrain", 14, {15,10,20,21,19,24}, true, {"int","wis","cha"}, "cha", 10));
    std::shared_ptr<dndSim::npc> ElderOblex = std::make_shared<dndSim::npc>(dndSim::character("elderoblex", 10, {15,16,21,22,13,18}, true, {"int","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> EnchanterWizard = std::make_shared<dndSim::npc>(dndSim::character("enchanterwizard", 5, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> EvokerWizard = std::make_shared<dndSim::npc>(dndSim::character("evokerwizard", 9, {9,14,12,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> FemaleSteeder = std::make_shared<dndSim::npc>(dndSim::character("femalesteeder", 1, {15,16,14,2,10,3}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> FireElementalMyrmidon = std::make_shared<dndSim::npc>(dndSim::character("fireelementalmyrmidon", 7, {13,18,15,9,10,10}, false, {}, "dex", 18));
    std::shared_ptr<dndSim::npc> FireGiantDreadnought = std::make_shared<dndSim::npc>(dndSim::character("firegiantdreadnought", 14, {27,9,23,8,10,11}, false, {"dex","con","cha"}, "str", 21));
    std::shared_ptr<dndSim::npc> FirenewtWarlockofImix = std::make_shared<dndSim::npc>(dndSim::character("firenewtwarlockofimix", 1, {13,11,12,9,11,14}, true, {}, "cha", 10));
    std::shared_ptr<dndSim::npc> FlailSnail = std::make_shared<dndSim::npc>(dndSim::character("flailsnail", 3, {17,5,20,3,10,5}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Flind = std::make_shared<dndSim::npc>(dndSim::character("flind", 9, {20,14,19,11,13,12}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Froghemoth = std::make_shared<dndSim::npc>(dndSim::character("froghemoth", 10, {23,13,20,2,12,5}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> FrostGiantEverlastingOne = std::make_shared<dndSim::npc>(dndSim::character("frostgianteverlastingone", 12, {25,9,24,9,10,12}, false, {"str","con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> FrostSalamander = std::make_shared<dndSim::npc>(dndSim::character("frostsalamander", 9, {20,12,18,7,11,7}, false, {"con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Gauth = std::make_shared<dndSim::npc>(dndSim::character("gauth", 6, {10,14,16,15,15,13}, false, {"int","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> GiantStrider = std::make_shared<dndSim::npc>(dndSim::character("giantstrider", 1, {18,13,14,4,12,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Giff = std::make_shared<dndSim::npc>(dndSim::character("giff", 3, {18,14,17,11,12,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Girallon = std::make_shared<dndSim::npc>(dndSim::character("girallon", 4, {18,16,16,5,12,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> GithyankiGish = std::make_shared<dndSim::npc>(dndSim::character("githyankigish", 10, {17,15,14,16,15,16}, true, {"con","int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> GithyankiKithrak = std::make_shared<dndSim::npc>(dndSim::character("githyankikithrak", 12, {18,16,17,16,15,17}, true, {"con","int","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> GithyankiSupremeCommander = std::make_shared<dndSim::npc>(dndSim::character("githyankisupremecommander", 14, {19,17,18,16,16,18}, true, {"con","int","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> GithzeraiAnarch = std::make_shared<dndSim::npc>(dndSim::character("githzeraianarch", 16, {16,21,18,18,20,14}, true, {"str","dex","int","wis"}, "wis", 20));
    std::shared_ptr<dndSim::npc> GithzeraiEnlightened = std::make_shared<dndSim::npc>(dndSim::character("githzeraienlightened", 10, {14,19,16,17,19,13}, true, {"str","dex","int","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> GnollFleshGnawer = std::make_shared<dndSim::npc>(dndSim::character("gnollfleshgnawer", 1, {12,14,12,8,10,8}, false, {"dex"}, "dex", 14));
    std::shared_ptr<dndSim::npc> GrayRender = std::make_shared<dndSim::npc>(dndSim::character("grayrender", 12, {19,13,20,3,6,8}, false, {"str","con"}, "str", 19));
    std::shared_ptr<dndSim::npc> GreenAbishai = std::make_shared<dndSim::npc>(dndSim::character("greenabishai", 15, {12,17,16,17,12,19}, true, {"int","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> GrungEliteWarrior = std::make_shared<dndSim::npc>(dndSim::character("grungelitewarrior", 2, {7,16,15,10,11,12}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> GrungWildling = std::make_shared<dndSim::npc>(dndSim::character("grungwildling", 1, {7,16,15,10,15,11}, true, {"dex"}, "wis", 16));
    std::shared_ptr<dndSim::npc> GuardDrake = std::make_shared<dndSim::npc>(dndSim::character("guarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> HellfireEngine = std::make_shared<dndSim::npc>(dndSim::character("hellfireengine", 16, {20,16,24,2,10,1}, false, {"dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> HobgoblinDevastator = std::make_shared<dndSim::npc>(dndSim::character("hobgoblindevastator", 4, {13,12,14,16,13,11}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> HobgoblinIronShadow = std::make_shared<dndSim::npc>(dndSim::character("hobgoblinironshadow", 2, {14,16,15,14,15,11}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> Howler = std::make_shared<dndSim::npc>(dndSim::character("howler", 8, {17,16,15,5,14,6}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> HungrySorrowsworn = std::make_shared<dndSim::npc>(dndSim::character("hungrysorrowsworn", 11, {19,10,17,6,11,6}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Hydroloth = std::make_shared<dndSim::npc>(dndSim::character("hydroloth", 9, {12,21,16,19,10,14}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> IllusionistWizard = std::make_shared<dndSim::npc>(dndSim::character("illusionistwizard", 3, {9,14,13,16,11,12}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Ki_rin = std::make_shared<dndSim::npc>(dndSim::character("ki_rin", 12, {21,16,16,19,20,20}, true, {}, "wis", 20));
    std::shared_ptr<dndSim::npc> KoboldDragonshield = std::make_shared<dndSim::npc>(dndSim::character("kobolddragonshield", 1, {12,15,14,8,9,10}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> KoboldScaleSorcerer = std::make_shared<dndSim::npc>(dndSim::character("koboldscalesorcerer", 1, {7,15,14,10,9,14}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> Korred = std::make_shared<dndSim::npc>(dndSim::character("korred", 7, {23,14,20,10,15,9}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> KrakenPriest = std::make_shared<dndSim::npc>(dndSim::character("krakenpriest", 5, {12,10,16,10,15,14}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> KruthikHiveLord = std::make_shared<dndSim::npc>(dndSim::character("kruthikhivelord", 5, {19,16,17,10,14,10}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> Leucrotta = std::make_shared<dndSim::npc>(dndSim::character("leucrotta", 3, {18,14,15,9,12,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Leviathan = std::make_shared<dndSim::npc>(dndSim::character("leviathan", 20, {27,24,30,2,18,17}, false, {"wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> LonelySorrowsworn = std::make_shared<dndSim::npc>(dndSim::character("lonelysorrowsworn", 9, {16,12,17,6,11,6}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> LostSorrowsworn = std::make_shared<dndSim::npc>(dndSim::character("lostsorrowsworn", 7, {17,12,15,6,7,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> MartialArtsAdept = std::make_shared<dndSim::npc>(dndSim::character("martialartsadept", 3, {11,17,13,11,16,10}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> MasterThief = std::make_shared<dndSim::npc>(dndSim::character("masterthief", 5, {11,18,14,11,11,12}, false, {"dex","int"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Maurezhi = std::make_shared<dndSim::npc>(dndSim::character("maurezhi", 7, {14,17,12,11,12,15}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> MawDemon = std::make_shared<dndSim::npc>(dndSim::character("mawdemon", 1, {14,8,13,5,8,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Meazel = std::make_shared<dndSim::npc>(dndSim::character("meazel", 1, {8,17,9,14,13,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Meenlock = std::make_shared<dndSim::npc>(dndSim::character("meenlock", 2, {7,15,12,11,10,8}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Merregon = std::make_shared<dndSim::npc>(dndSim::character("merregon", 4, {18,14,17,6,12,8}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Merrenoloth = std::make_shared<dndSim::npc>(dndSim::character("merrenoloth", 3, {8,17,10,17,14,11}, true, {"dex","int"}, "int", 13));
    std::shared_ptr<dndSim::npc> Mindwitness = std::make_shared<dndSim::npc>(dndSim::character("mindwitness", 5, {10,14,14,15,15,10}, false, {"int","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Morkoth = std::make_shared<dndSim::npc>(dndSim::character("morkoth", 11, {14,14,14,20,15,13}, true, {"dex","int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> MouthofGrolantor = std::make_shared<dndSim::npc>(dndSim::character("mouthofgrolantor", 6, {21,10,18,5,7,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Nabassu = std::make_shared<dndSim::npc>(dndSim::character("nabassu", 15, {22,14,21,14,15,17}, false, {"str","dex"}, "str", 18));
    std::shared_ptr<dndSim::npc> Nagpa = std::make_shared<dndSim::npc>(dndSim::character("nagpa", 17, {9,15,12,23,18,21}, true, {"int","wis","cha"}, "int", 19));
    std::shared_ptr<dndSim::npc> Narzugon = std::make_shared<dndSim::npc>(dndSim::character("narzugon", 13, {20,10,17,16,14,19}, false, {"dex","con","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> NecromancerWizard = std::make_shared<dndSim::npc>(dndSim::character("necromancerwizard", 9, {9,14,12,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Neogi = std::make_shared<dndSim::npc>(dndSim::character("neogi", 3, {6,16,14,13,12,15}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> NeogiMaster = std::make_shared<dndSim::npc>(dndSim::character("neogimaster", 4, {6,16,14,16,12,18}, true, {"wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> Neothelid = std::make_shared<dndSim::npc>(dndSim::character("neothelid", 13, {27,7,21,3,16,12}, true, {"int","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Nightwalker = std::make_shared<dndSim::npc>(dndSim::character("nightwalker", 20, {22,19,24,6,9,8}, false, {"con"}, "str", 14));
    std::shared_ptr<dndSim::npc> Nilbog = std::make_shared<dndSim::npc>(dndSim::character("nilbog", 1, {8,14,10,10,8,15}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> OgreBatteringRam = std::make_shared<dndSim::npc>(dndSim::character("ogrebatteringram", 4, {19,8,16,5,7,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> OgreBoltLauncher = std::make_shared<dndSim::npc>(dndSim::character("ogreboltlauncher", 2, {19,12,16,5,7,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> OgreChainBrute = std::make_shared<dndSim::npc>(dndSim::character("ogrechainbrute", 3, {19,8,16,5,7,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> OgreHowdah = std::make_shared<dndSim::npc>(dndSim::character("ogrehowdah", 2, {19,8,16,5,7,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Oinoloth = std::make_shared<dndSim::npc>(dndSim::character("oinoloth", 12, {19,17,18,17,16,19}, true, {"con","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Orthon = std::make_shared<dndSim::npc>(dndSim::character("orthon", 10, {22,16,21,15,15,16}, false, {"dex","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Phoenix = std::make_shared<dndSim::npc>(dndSim::character("phoenix", 16, {19,26,25,2,21,18}, false, {"wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Quetzalcoatlus = std::make_shared<dndSim::npc>(dndSim::character("quetzalcoatlus", 2, {15,13,13,2,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Quickling = std::make_shared<dndSim::npc>(dndSim::character("quickling", 1, {4,23,13,10,12,7}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> RedAbishai = std::make_shared<dndSim::npc>(dndSim::character("redabishai", 19, {23,16,19,14,15,19}, false, {"str","con","wis"}, "str", 22));
    std::shared_ptr<dndSim::npc> Redcap = std::make_shared<dndSim::npc>(dndSim::character("redcap", 3, {18,13,18,10,12,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Retriever = std::make_shared<dndSim::npc>(dndSim::character("retriever", 14, {22,16,20,3,11,4}, true, {"dex","con","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> RotTroll = std::make_shared<dndSim::npc>(dndSim::character("rottroll", 9, {18,13,22,5,8,4}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Rutterkin = std::make_shared<dndSim::npc>(dndSim::character("rutterkin", 2, {14,15,17,5,12,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SeaSpawn = std::make_shared<dndSim::npc>(dndSim::character("seaspawn", 1, {15,8,15,6,10,8}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Shadar_kaiGloomWeaver = std::make_shared<dndSim::npc>(dndSim::character("shadar_kaigloomweaver", 9, {11,18,14,15,12,18}, true, {"dex","con"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Shadar_kaiShadowDancer = std::make_shared<dndSim::npc>(dndSim::character("shadar_kaishadowdancer", 7, {12,16,13,11,12,12}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Shadar_kaiSoulMonger = std::make_shared<dndSim::npc>(dndSim::character("shadar_kaisoulmonger", 11, {8,17,14,19,16,13}, true, {"dex","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> ShadowMastiff = std::make_shared<dndSim::npc>(dndSim::character("shadowmastiff", 2, {16,14,13,5,12,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> ShadowMastiffAlpha = std::make_shared<dndSim::npc>(dndSim::character("shadowmastiffalpha", 3, {16,14,13,6,12,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Shoosuva = std::make_shared<dndSim::npc>(dndSim::character("shoosuva", 8, {18,13,17,7,14,9}, false, {"dex","con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Sibriex = std::make_shared<dndSim::npc>(dndSim::character("sibriex", 18, {10,3,23,25,24,25}, true, {"int","cha"}, "int", 19));
    std::shared_ptr<dndSim::npc> SkullLord = std::make_shared<dndSim::npc>(dndSim::character("skulllord", 15, {14,16,17,16,15,21}, true, {}, "cha", 18));
    std::shared_ptr<dndSim::npc> SlitheringTracker = std::make_shared<dndSim::npc>(dndSim::character("slitheringtracker", 3, {16,19,15,10,14,11}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> SpawnofKyuss = std::make_shared<dndSim::npc>(dndSim::character("spawnofkyuss", 5, {16,11,18,5,7,3}, false, {"wis"}, "str", 10));
    std::shared_ptr<dndSim::npc> SpiritTroll = std::make_shared<dndSim::npc>(dndSim::character("spirittroll", 11, {1,17,13,8,9,16}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> SpringEladrin = std::make_shared<dndSim::npc>(dndSim::character("springeladrin", 10, {14,16,16,18,11,18}, true, {}, "int", 19));
    std::shared_ptr<dndSim::npc> StarSpawnHulk = std::make_shared<dndSim::npc>(dndSim::character("starspawnhulk", 10, {20,8,21,7,12,9}, false, {"dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> StarSpawnLarvaMage = std::make_shared<dndSim::npc>(dndSim::character("starspawnlarvamage", 16, {17,12,23,18,12,16}, true, {"dex","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> StarSpawnMangler = std::make_shared<dndSim::npc>(dndSim::character("starspawnmangler", 5, {8,18,12,11,12,7}, false, {"dex","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> StarSpawnSeer = std::make_shared<dndSim::npc>(dndSim::character("starspawnseer", 13, {14,12,18,22,19,16}, false, {"dex","int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> SteelPredator = std::make_shared<dndSim::npc>(dndSim::character("steelpredator", 16, {24,17,22,4,14,6}, true, {}, "wis", 20));
    std::shared_ptr<dndSim::npc> Stegosaurus = std::make_shared<dndSim::npc>(dndSim::character("stegosaurus", 4, {20,9,17,2,11,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> StoneCursed = std::make_shared<dndSim::npc>(dndSim::character("stonecursed", 1, {16,5,14,5,8,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> StoneGiantDreamwalker = std::make_shared<dndSim::npc>(dndSim::character("stonegiantdreamwalker", 10, {23,14,21,10,8,12}, false, {"dex","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> StormGiantQuintessent = std::make_shared<dndSim::npc>(dndSim::character("stormgiantquintessent", 16, {29,14,20,17,20,19}, false, {"str","con","wis","cha"}, "str", 12));
    std::shared_ptr<dndSim::npc> SummerEladrin = std::make_shared<dndSim::npc>(dndSim::character("summereladrin", 10, {19,21,16,14,12,18}, false, {}, "dex", 19));
    std::shared_ptr<dndSim::npc> SwarmofCraniumRats = std::make_shared<dndSim::npc>(dndSim::character("swarmofcraniumrats", 5, {9,14,10,15,11,14}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> Swashbuckler = std::make_shared<dndSim::npc>(dndSim::character("swashbuckler", 3, {12,18,12,14,11,15}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> SwordWraithCommander = std::make_shared<dndSim::npc>(dndSim::character("swordwraithcommander", 8, {18,14,18,11,12,14}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SwordWraithWarrior = std::make_shared<dndSim::npc>(dndSim::character("swordwraithwarrior", 3, {18,12,17,6,9,10}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Tanarukk = std::make_shared<dndSim::npc>(dndSim::character("tanarukk", 5, {18,13,20,9,9,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ThornyVegepygmy = std::make_shared<dndSim::npc>(dndSim::character("thornyvegepygmy", 1, {13,12,13,2,10,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Titivilus = std::make_shared<dndSim::npc>(dndSim::character("titivilus", 16, {19,22,17,24,22,26}, true, {"dex","con","wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> Tlincalli = std::make_shared<dndSim::npc>(dndSim::character("tlincalli", 5, {16,13,16,8,12,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> TortleDruid = std::make_shared<dndSim::npc>(dndSim::character("tortledruid", 2, {14,10,12,11,15,12}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> TransmuterWizard = std::make_shared<dndSim::npc>(dndSim::character("transmuterwizard", 5, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Trapper = std::make_shared<dndSim::npc>(dndSim::character("trapper", 3, {17,10,17,2,13,4}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Ulitharid = std::make_shared<dndSim::npc>(dndSim::character("ulitharid", 9, {15,12,15,21,19,21}, true, {"int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> VampiricMist = std::make_shared<dndSim::npc>(dndSim::character("vampiricmist", 3, {6,16,16,6,12,7}, false, {"wis"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Vargouille = std::make_shared<dndSim::npc>(dndSim::character("vargouille", 1, {6,14,14,4,7,2}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> VegepygmyChief = std::make_shared<dndSim::npc>(dndSim::character("vegepygmychief", 2, {14,14,14,7,12,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> VenomTroll = std::make_shared<dndSim::npc>(dndSim::character("venomtroll", 7, {18,13,20,7,9,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> WarPriest = std::make_shared<dndSim::npc>(dndSim::character("warpriest", 9, {16,10,14,11,17,13}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> WarlockoftheArchfey = std::make_shared<dndSim::npc>(dndSim::character("warlockofthearchfey", 4, {9,16,11,11,12,18}, true, {"wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> WarlockoftheFiend = std::make_shared<dndSim::npc>(dndSim::character("warlockofthefiend", 7, {10,16,15,12,12,18}, true, {"wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> WarlockoftheGreatOldOne = std::make_shared<dndSim::npc>(dndSim::character("warlockofthegreatoldone", 6, {9,16,15,12,12,18}, true, {"wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> Warlord = std::make_shared<dndSim::npc>(dndSim::character("warlord", 12, {20,16,18,12,12,18}, false, {"str","dex","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Wastrilith = std::make_shared<dndSim::npc>(dndSim::character("wastrilith", 13, {19,18,21,19,12,14}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> WaterElementalMyrmidon = std::make_shared<dndSim::npc>(dndSim::character("waterelementalmyrmidon", 7, {18,14,15,8,10,10}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> WhiteAbishai = std::make_shared<dndSim::npc>(dndSim::character("whiteabishai", 6, {16,11,18,11,12,13}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> WinterEladrin = std::make_shared<dndSim::npc>(dndSim::character("wintereladrin", 10, {11,16,16,18,17,13}, true, {}, "int", 19));
    std::shared_ptr<dndSim::npc> WoodWoad = std::make_shared<dndSim::npc>(dndSim::character("woodwoad", 5, {18,12,16,10,13,8}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> XvartWarlockofRaxivort = std::make_shared<dndSim::npc>(dndSim::character("xvartwarlockofraxivort", 1, {8,14,12,8,11,12}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Yagnoloth = std::make_shared<dndSim::npc>(dndSim::character("yagnoloth", 11, {19,14,21,16,15,18}, true, {"dex","int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> YethHound = std::make_shared<dndSim::npc>(dndSim::character("yethhound", 4, {18,17,16,5,12,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Yuan_tiAnathema = std::make_shared<dndSim::npc>(dndSim::character("yuan_tianathema", 12, {23,13,19,19,17,20}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Yuan_tiBroodguard = std::make_shared<dndSim::npc>(dndSim::character("yuan_tibroodguard", 2, {15,14,14,6,11,4}, false, {"str","dex","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Yuan_tiMindWhisperer = std::make_shared<dndSim::npc>(dndSim::character("yuan_timindwhisperer", 4, {16,14,13,14,14,16}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Yuan_tiNightmareSpeaker = std::make_shared<dndSim::npc>(dndSim::character("yuan_tinightmarespeaker", 4, {16,14,13,14,12,16}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Yuan_tiPitMaster = std::make_shared<dndSim::npc>(dndSim::character("yuan_tipitmaster", 5, {16,14,13,14,12,16}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> GiantZombieConstrictorSnake = std::make_shared<dndSim::npc>(dndSim::character("giantzombieconstrictorsnake", 8, {19,16,14,1,15,4}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> HamishHewland = std::make_shared<dndSim::npc>(dndSim::character("hamishhewland", 5, {23,11,15,10,14,10}, false, {"str","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> KyrillaAccursedGorgon = std::make_shared<dndSim::npc>(dndSim::character("kyrillaaccursedgorgon", 10, {11,16,16,14,14,15}, false, {"wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> SkeletalHorror = std::make_shared<dndSim::npc>(dndSim::character("skeletalhorror", 6, {16,14,15,6,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Exul = std::make_shared<dndSim::npc>(dndSim::character("exul", 11, {22,12,24,16,15,16}, true, {"int","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Malivar = std::make_shared<dndSim::npc>(dndSim::character("malivar", 6, {9,14,11,17,12,17}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> AsteroidSpider = std::make_shared<dndSim::npc>(dndSim::character("asteroidspider", 15, {26,10,18,17,13,12}, false, {"con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> ClockworkHorror = std::make_shared<dndSim::npc>(dndSim::character("clockworkhorror", 2, {14,14,18,13,14,10}, false, {"str","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> EldritchLich = std::make_shared<dndSim::npc>(dndSim::character("eldritchlich", 15, {11,18,16,19,14,12}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> Fractine = std::make_shared<dndSim::npc>(dndSim::character("fractine", 9, {1,13,16,18,18,11}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> NightmareBeast = std::make_shared<dndSim::npc>(dndSim::character("nightmarebeast", 16, {26,10,21,9,12,15}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> PuppeteerParasite = std::make_shared<dndSim::npc>(dndSim::character("puppeteerparasite", 3, {2,15,18,16,10,3}, false, {"dex","con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> StarLancer = std::make_shared<dndSim::npc>(dndSim::character("starlancer", 2, {18,15,15,10,13,8}, false, {"dex","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Yggdrasti = std::make_shared<dndSim::npc>(dndSim::character("yggdrasti", 7, {20,10,15,3,10,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Dirt_Under_Nails = std::make_shared<dndSim::npc>(dndSim::character("dirt_under_nails", 7, {10,14,15,12,12,18}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> Rotter = std::make_shared<dndSim::npc>(dndSim::character("rotter", 5, {18,12,16,10,13,8}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> AlbinoDwarfSpiritWarrior = std::make_shared<dndSim::npc>(dndSim::character("albinodwarfspiritwarrior", 1, {13,13,17,12,14,11}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> AldanilLobsterfolkr = std::make_shared<dndSim::npc>(dndSim::character("aldanillobsterfolkr", 1, {13,8,12,10,14,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> AnkylosaurusZombie = std::make_shared<dndSim::npc>(dndSim::character("ankylosauruszombie", 3, {19,9,15,2,6,3}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ArtusCimber = std::make_shared<dndSim::npc>(dndSim::character("artuscimber", 7, {10,15,13,17,16,18}, false, {"dex","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Asharra = std::make_shared<dndSim::npc>(dndSim::character("asharra", 2, {10,14,10,14,17,11}, true, {}, "wis", 12));
    std::shared_ptr<dndSim::npc> AssassinVine = std::make_shared<dndSim::npc>(dndSim::character("assassinvine", 3, {18,10,16,1,10,1}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Atropal = std::make_shared<dndSim::npc>(dndSim::character("atropal", 13, {19,5,22,25,19,24}, false, {"con","wis"}, "str", 7));
    std::shared_ptr<dndSim::npc> BagofNails = std::make_shared<dndSim::npc>(dndSim::character("bagofnails", 8, {11,16,14,13,11,10}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ClayGladiator = std::make_shared<dndSim::npc>(dndSim::character("claygladiator", 5, {18,15,16,10,12,15}, false, {"str","dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> Dragonbait = std::make_shared<dndSim::npc>(dndSim::character("dragonbait", 5, {15,13,17,14,16,18}, false, {"wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Eblis = std::make_shared<dndSim::npc>(dndSim::character("eblis", 1, {11,16,12,12,14,11}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> GiantFour_ArmedGargoyle = std::make_shared<dndSim::npc>(dndSim::character("giantfour_armedgargoyle", 10, {19,11,20,6,11,9}, false, {"wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> GiantSnappingTurtle = std::make_shared<dndSim::npc>(dndSim::character("giantsnappingturtle", 3, {19,10,14,2,12,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> GirallonZombie = std::make_shared<dndSim::npc>(dndSim::character("girallonzombie", 3, {18,12,16,3,7,5}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> HewHackinstone = std::make_shared<dndSim::npc>(dndSim::character("hewhackinstone", 2, {16,12,17,9,11,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Kamadan = std::make_shared<dndSim::npc>(dndSim::character("kamadan", 4, {16,16,14,3,14,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> KingofFeathers = std::make_shared<dndSim::npc>(dndSim::character("kingoffeathers", 8, {25,10,19,2,12,9}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> LiaraPortyr = std::make_shared<dndSim::npc>(dndSim::character("liaraportyr", 4, {16,12,15,14,14,16}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Mantrap = std::make_shared<dndSim::npc>(dndSim::character("mantrap", 1, {15,14,12,1,10,2}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Pterafolk = std::make_shared<dndSim::npc>(dndSim::character("pterafolk", 1, {15,13,12,9,10,11}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> RasNsi = std::make_shared<dndSim::npc>(dndSim::character("rasnsi", 7, {17,16,17,18,18,21}, true, {"con","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> SpikedTombGuardian = std::make_shared<dndSim::npc>(dndSim::character("spikedtombguardian", 6, {19,9,18,6,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> StoneJuggernaut = std::make_shared<dndSim::npc>(dndSim::character("stonejuggernaut", 12, {16,12,15,14,14,16}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Su_monster = std::make_shared<dndSim::npc>(dndSim::character("su_monster", 1, {14,15,12,9,13,9}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> TabaxiHunter = std::make_shared<dndSim::npc>(dndSim::character("tabaxihunter", 1, {10,17,11,13,14,15}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> TombDwarf = std::make_shared<dndSim::npc>(dndSim::character("tombdwarf", 3, {15,14,16,10,13,15}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> TombGuardian = std::make_shared<dndSim::npc>(dndSim::character("tombguardian", 5, {19,9,18,6,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> TyrannosaurusZombie = std::make_shared<dndSim::npc>(dndSim::character("tyrannosauruszombie", 8, {25,6,19,1,3,5}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Withers = std::make_shared<dndSim::npc>(dndSim::character("withers", 4, {15,14,16,16,13,15}, true, {}, "int", 14));
    std::shared_ptr<dndSim::npc> Xandala = std::make_shared<dndSim::npc>(dndSim::character("xandala", 7, {10,11,14,18,16,18}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> YellowMuskCreeper = std::make_shared<dndSim::npc>(dndSim::character("yellowmuskcreeper", 2, {12,3,12,1,10,3}, false, {}, "str", 6));
    std::shared_ptr<dndSim::npc> Zindar = std::make_shared<dndSim::npc>(dndSim::character("zindar", 8, {14,10,14,16,15,18}, true, {"con","wis"}, "cha", 13));
    std::shared_ptr<dndSim::npc> DreamEater = std::make_shared<dndSim::npc>(dndSim::character("dreameater", 7, {15,20,13,12,16,21}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> ForestMaster = std::make_shared<dndSim::npc>(dndSim::character("forestmaster", 8, {18,14,15,13,19,17}, true, {"int","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Foresworn = std::make_shared<dndSim::npc>(dndSim::character("foresworn", 6, {20,14,17,12,18,10}, true, {"str","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> IrdaSeeker = std::make_shared<dndSim::npc>(dndSim::character("irdaseeker", 1, {10,15,12,11,14,16}, false, {"dex","cha"}, "dex", 12));
    std::shared_ptr<dndSim::npc> IrdaVeilKeeper = std::make_shared<dndSim::npc>(dndSim::character("irdaveilkeeper", 4, {9,16,13,14,17,19}, true, {"int","wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> NevermindGnomeInventor = std::make_shared<dndSim::npc>(dndSim::character("nevermindgnomeinventor", 2, {8,17,13,18,11,14}, false, {"dex","int"}, "dex", 14));
    std::shared_ptr<dndSim::npc> NevermindGnomeMastermind = std::make_shared<dndSim::npc>(dndSim::character("nevermindgnomemastermind", 5, {9,18,14,20,11,15}, false, {"dex","con","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ThanoiHunter = std::make_shared<dndSim::npc>(dndSim::character("thanoihunter", 1, {18,14,15,12,16,11}, false, {"str","con"}, "str", 14));
    std::shared_ptr<dndSim::npc> TraagDraconian = std::make_shared<dndSim::npc>(dndSim::character("traagdraconian", 5, {21,10,17,6,8,9}, false, {"str","con"}, "str", 14));
    std::shared_ptr<dndSim::npc> Verminaard = std::make_shared<dndSim::npc>(dndSim::character("verminaard", 17, {22,13,15,16,18,17}, true, {"wis","cha"}, "wis", 20));
    std::shared_ptr<dndSim::npc> Aboleth = std::make_shared<dndSim::npc>(dndSim::character("aboleth", 10, {21,9,15,18,15,18}, false, {"con","int","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> AbominableYeti = std::make_shared<dndSim::npc>(dndSim::character("abominableyeti", 9, {24,10,22,9,13,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> AdultBlackDragon = std::make_shared<dndSim::npc>(dndSim::character("adultblackdragon", 14, {23,14,21,14,13,17}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultBlueDracolich = std::make_shared<dndSim::npc>(dndSim::character("adultbluedracolich", 17, {25,10,23,16,15,19}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultBlueDragon = std::make_shared<dndSim::npc>(dndSim::character("adultbluedragon", 16, {25,10,23,16,15,19}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultBrassDragon = std::make_shared<dndSim::npc>(dndSim::character("adultbrassdragon", 13, {23,10,21,14,13,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> AdultBronzeDragon = std::make_shared<dndSim::npc>(dndSim::character("adultbronzedragon", 15, {25,10,23,16,15,19}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultCopperDragon = std::make_shared<dndSim::npc>(dndSim::character("adultcopperdragon", 14, {23,12,21,18,15,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> AdultGoldDragon = std::make_shared<dndSim::npc>(dndSim::character("adultgolddragon", 17, {27,14,25,16,15,24}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultGreenDragon = std::make_shared<dndSim::npc>(dndSim::character("adultgreendragon", 15, {23,12,21,18,15,17}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultRedDragon = std::make_shared<dndSim::npc>(dndSim::character("adultreddragon", 17, {27,10,25,16,13,21}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultSilverDragon = std::make_shared<dndSim::npc>(dndSim::character("adultsilverdragon", 16, {27,10,25,16,13,21}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultWhiteDragon = std::make_shared<dndSim::npc>(dndSim::character("adultwhitedragon", 13, {22,10,22,8,12,12}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> AirElemental = std::make_shared<dndSim::npc>(dndSim::character("airelemental", 5, {14,20,14,6,10,6}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Allosaurus = std::make_shared<dndSim::npc>(dndSim::character("allosaurus", 2, {19,13,17,2,12,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> AncientBrassDragon = std::make_shared<dndSim::npc>(dndSim::character("ancientbrassdragon", 20, {27,10,25,16,15,19}, false, {"dex","con","wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> AncientWhiteDragon = std::make_shared<dndSim::npc>(dndSim::character("ancientwhitedragon", 20, {26,10,26,10,13,14}, false, {"dex","con","wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> Androsphinx = std::make_shared<dndSim::npc>(dndSim::character("androsphinx", 17, {22,10,20,16,18,23}, true, {"dex","con","int","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> AnimatedArmor = std::make_shared<dndSim::npc>(dndSim::character("animatedarmor", 1, {14,11,13,1,3,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Ankheg = std::make_shared<dndSim::npc>(dndSim::character("ankheg", 2, {17,11,13,1,13,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Ankylosaurus = std::make_shared<dndSim::npc>(dndSim::character("ankylosaurus", 3, {19,11,15,2,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Arcanaloth = std::make_shared<dndSim::npc>(dndSim::character("arcanaloth", 12, {17,12,14,20,16,17}, true, {"dex","int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Archmage = std::make_shared<dndSim::npc>(dndSim::character("archmage", 12, {10,14,12,20,15,16}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Assassin = std::make_shared<dndSim::npc>(dndSim::character("assassin", 8, {11,16,14,13,11,10}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> AwakenedTree = std::make_shared<dndSim::npc>(dndSim::character("awakenedtree", 2, {19,6,15,10,10,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Azer = std::make_shared<dndSim::npc>(dndSim::character("azer", 2, {17,12,15,12,13,10}, false, {"con"}, "str", 17));
    std::shared_ptr<dndSim::npc> Balor = std::make_shared<dndSim::npc>(dndSim::character("balor", 19, {26,15,22,20,16,22}, false, {"str","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> BanditCaptain = std::make_shared<dndSim::npc>(dndSim::character("banditcaptain", 2, {15,16,14,14,11,14}, false, {"str","dex","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Banshee = std::make_shared<dndSim::npc>(dndSim::character("banshee", 4, {1,14,10,12,11,17}, false, {"wis","cha"}, "dex", 12));
    std::shared_ptr<dndSim::npc> BarbedDevil = std::make_shared<dndSim::npc>(dndSim::character("barbeddevil", 5, {16,17,18,12,14,14}, false, {"str","con","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Barlgura = std::make_shared<dndSim::npc>(dndSim::character("barlgura", 5, {18,15,16,7,14,9}, true, {"dex","con"}, "wis", 15));
    std::shared_ptr<dndSim::npc> Basilisk = std::make_shared<dndSim::npc>(dndSim::character("basilisk", 3, {16,8,15,2,8,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> BeardedDevil = std::make_shared<dndSim::npc>(dndSim::character("beardeddevil", 3, {16,15,15,9,11,11}, false, {"str","con","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> Behir = std::make_shared<dndSim::npc>(dndSim::character("behir", 11, {23,16,18,7,14,12}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Beholder = std::make_shared<dndSim::npc>(dndSim::character("beholder", 13, {10,14,18,17,15,17}, false, {"int","wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> BeholderZombie = std::make_shared<dndSim::npc>(dndSim::character("beholderzombie", 5, {10,8,16,3,8,5}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Berserker = std::make_shared<dndSim::npc>(dndSim::character("berserker", 2, {16,12,17,9,11,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> BlackDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("blackdragonwyrmling", 2, {15,14,13,10,11,13}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BlackPudding = std::make_shared<dndSim::npc>(dndSim::character("blackpudding", 4, {16,5,16,1,6,1}, false, {}, "str", 7));
    std::shared_ptr<dndSim::npc> BlueDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("bluedragonwyrmling", 3, {17,10,15,12,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BlueSlaad = std::make_shared<dndSim::npc>(dndSim::character("blueslaad", 7, {20,15,18,7,7,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> BoneDevil = std::make_shared<dndSim::npc>(dndSim::character("bonedevil", 9, {18,16,18,13,14,16}, false, {"int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> BoneNagalGuardianr = std::make_shared<dndSim::npc>(dndSim::character("bonenagalguardianr", 4, {15,16,12,15,15,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> BoneNagalSpiritr = std::make_shared<dndSim::npc>(dndSim::character("bonenagalspiritr", 4, {15,16,12,15,15,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> BrassDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("brassdragonwyrmling", 1, {15,10,13,10,11,13}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> BronzeDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("bronzedragonwyrmling", 2, {17,10,15,12,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BrownBear = std::make_shared<dndSim::npc>(dndSim::character("brownbear", 1, {19,10,16,2,13,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Bugbear = std::make_shared<dndSim::npc>(dndSim::character("bugbear", 1, {15,14,13,8,11,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> BugbearChief = std::make_shared<dndSim::npc>(dndSim::character("bugbearchief", 3, {17,14,14,11,12,11}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Bulette = std::make_shared<dndSim::npc>(dndSim::character("bulette", 5, {19,11,21,2,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Cambion = std::make_shared<dndSim::npc>(dndSim::character("cambion", 5, {18,18,16,14,12,16}, true, {"str","con","int","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> CarrionCrawler = std::make_shared<dndSim::npc>(dndSim::character("carrioncrawler", 2, {14,13,16,1,12,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> CaveBear = std::make_shared<dndSim::npc>(dndSim::character("cavebear", 2, {20,10,16,2,13,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Centaur = std::make_shared<dndSim::npc>(dndSim::character("centaur", 2, {18,14,14,9,13,11}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> ChainDevil = std::make_shared<dndSim::npc>(dndSim::character("chaindevil", 8, {18,15,18,11,12,14}, false, {"con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Chasme = std::make_shared<dndSim::npc>(dndSim::character("chasme", 6, {15,15,12,11,14,10}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Chimera = std::make_shared<dndSim::npc>(dndSim::character("chimera", 6, {19,11,19,3,14,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Chuul = std::make_shared<dndSim::npc>(dndSim::character("chuul", 4, {19,10,16,5,11,5}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> ClayGolem = std::make_shared<dndSim::npc>(dndSim::character("claygolem", 9, {20,9,18,3,8,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Cloaker = std::make_shared<dndSim::npc>(dndSim::character("cloaker", 8, {17,15,12,13,12,14}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> CloudGiant = std::make_shared<dndSim::npc>(dndSim::character("cloudgiant", 9, {27,10,22,12,16,16}, true, {"con","wis","cha"}, "wis", 14));
    std::shared_ptr<dndSim::npc> CopperDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("copperdragonwyrmling", 1, {15,12,13,14,11,13}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Couatl = std::make_shared<dndSim::npc>(dndSim::character("couatl", 4, {16,20,17,18,20,18}, true, {"con","wis","cha"}, "wis", 19));
    std::shared_ptr<dndSim::npc> CultFanatic = std::make_shared<dndSim::npc>(dndSim::character("cultfanatic", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Cyclops = std::make_shared<dndSim::npc>(dndSim::character("cyclops", 6, {22,11,20,8,6,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Dao = std::make_shared<dndSim::npc>(dndSim::character("dao", 11, {23,12,24,12,13,14}, true, {"int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> DeathDog = std::make_shared<dndSim::npc>(dndSim::character("deathdog", 1, {15,14,14,3,13,6}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> DeathKnight = std::make_shared<dndSim::npc>(dndSim::character("deathknight", 17, {20,11,20,12,16,18}, true, {"dex","wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> DeathSlaad = std::make_shared<dndSim::npc>(dndSim::character("deathslaad", 10, {20,15,19,15,10,16}, true, {}, "cha", 18));
    std::shared_ptr<dndSim::npc> DeathTyrant = std::make_shared<dndSim::npc>(dndSim::character("deathtyrant", 14, {10,14,14,19,15,19}, false, {"str","con","int","wis","cha"}, "dex", 19));
    std::shared_ptr<dndSim::npc> Demilich = std::make_shared<dndSim::npc>(dndSim::character("demilich", 18, {1,20,10,20,17,20}, false, {"con","int","wis","cha"}, "dex", 20));
    std::shared_ptr<dndSim::npc> Deva = std::make_shared<dndSim::npc>(dndSim::character("deva", 10, {18,18,18,17,20,20}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> DireWolf = std::make_shared<dndSim::npc>(dndSim::character("direwolf", 1, {17,15,15,3,12,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> DisplacerBeast = std::make_shared<dndSim::npc>(dndSim::character("displacerbeast", 3, {18,15,16,6,12,8}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Djinni = std::make_shared<dndSim::npc>(dndSim::character("djinni", 11, {21,15,22,15,16,20}, true, {"dex","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Doppelganger = std::make_shared<dndSim::npc>(dndSim::character("doppelganger", 3, {11,18,14,11,12,14}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> DragonTurtle = std::make_shared<dndSim::npc>(dndSim::character("dragonturtle", 17, {25,10,20,10,12,12}, false, {"dex","con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> Drider = std::make_shared<dndSim::npc>(dndSim::character("drider", 6, {16,16,18,13,14,12}, true, {}, "wis", 19));
    std::shared_ptr<dndSim::npc> DrowEliteWarrior = std::make_shared<dndSim::npc>(dndSim::character("drowelitewarrior", 5, {13,18,14,11,13,12}, true, {"dex","con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> DrowMage = std::make_shared<dndSim::npc>(dndSim::character("drowmage", 7, {9,14,10,17,13,12}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> DrowPriestessofLolth = std::make_shared<dndSim::npc>(dndSim::character("drowpriestessoflolth", 8, {10,14,12,13,17,18}, true, {"con","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Druid = std::make_shared<dndSim::npc>(dndSim::character("druid", 2, {10,12,13,12,15,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> Dryad = std::make_shared<dndSim::npc>(dndSim::character("dryad", 1, {10,12,11,14,15,18}, true, {}, "cha", 11));
    std::shared_ptr<dndSim::npc> Duergar = std::make_shared<dndSim::npc>(dndSim::character("duergar", 1, {14,11,14,11,10,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> EarthElemental = std::make_shared<dndSim::npc>(dndSim::character("earthelemental", 5, {20,8,20,5,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Efreeti = std::make_shared<dndSim::npc>(dndSim::character("efreeti", 11, {22,12,24,16,15,16}, true, {"int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Elephant = std::make_shared<dndSim::npc>(dndSim::character("elephant", 4, {22,9,17,3,11,6}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Erinyes = std::make_shared<dndSim::npc>(dndSim::character("erinyes", 12, {18,16,18,14,14,18}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Ettercap = std::make_shared<dndSim::npc>(dndSim::character("ettercap", 2, {14,15,13,7,12,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Ettin = std::make_shared<dndSim::npc>(dndSim::character("ettin", 4, {21,8,17,6,10,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> FaerieDragonlBluer = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlbluer", 2, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlGreenr = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlgreenr", 2, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlIndigor = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlindigor", 2, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlOranger = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonloranger", 1, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlRedr = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlredr", 1, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlVioletr = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlvioletr", 2, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FaerieDragonlYellowr = std::make_shared<dndSim::npc>(dndSim::character("faeriedragonlyellowr", 1, {3,20,13,14,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> FireElemental = std::make_shared<dndSim::npc>(dndSim::character("fireelemental", 5, {10,17,16,6,10,7}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> FireGiant = std::make_shared<dndSim::npc>(dndSim::character("firegiant", 9, {25,9,23,10,14,13}, false, {"dex","con","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> FireSnake = std::make_shared<dndSim::npc>(dndSim::character("firesnake", 1, {12,14,11,7,10,8}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Flameskull = std::make_shared<dndSim::npc>(dndSim::character("flameskull", 4, {1,17,14,16,10,11}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> FleshGolem = std::make_shared<dndSim::npc>(dndSim::character("fleshgolem", 5, {19,9,18,6,10,5}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> Fomorian = std::make_shared<dndSim::npc>(dndSim::character("fomorian", 8, {23,10,20,9,14,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> FrostGiant = std::make_shared<dndSim::npc>(dndSim::character("frostgiant", 8, {23,9,21,9,10,12}, false, {"con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> GalebDuhr = std::make_shared<dndSim::npc>(dndSim::character("galebduhr", 6, {20,14,20,11,12,11}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Gargoyle = std::make_shared<dndSim::npc>(dndSim::character("gargoyle", 2, {15,11,16,6,11,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GelatinousCube = std::make_shared<dndSim::npc>(dndSim::character("gelatinouscube", 2, {14,3,20,1,6,1}, false, {}, "str", 6));
    std::shared_ptr<dndSim::npc> Ghast = std::make_shared<dndSim::npc>(dndSim::character("ghast", 2, {16,17,10,11,10,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Ghost = std::make_shared<dndSim::npc>(dndSim::character("ghost", 4, {7,13,10,10,12,17}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> Ghoul = std::make_shared<dndSim::npc>(dndSim::character("ghoul", 1, {13,15,10,7,10,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> GiantApe = std::make_shared<dndSim::npc>(dndSim::character("giantape", 7, {23,14,18,7,12,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiantBoar = std::make_shared<dndSim::npc>(dndSim::character("giantboar", 2, {17,10,16,2,7,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiantConstrictorSnake = std::make_shared<dndSim::npc>(dndSim::character("giantconstrictorsnake", 2, {19,14,12,1,10,3}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiantCrocodile = std::make_shared<dndSim::npc>(dndSim::character("giantcrocodile", 5, {21,9,17,2,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantEagle = std::make_shared<dndSim::npc>(dndSim::character("gianteagle", 1, {16,17,13,8,14,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GiantElk = std::make_shared<dndSim::npc>(dndSim::character("giantelk", 2, {19,16,14,7,14,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantHyena = std::make_shared<dndSim::npc>(dndSim::character("gianthyena", 1, {16,14,14,2,12,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiantOctopus = std::make_shared<dndSim::npc>(dndSim::character("giantoctopus", 1, {17,13,13,4,10,4}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> GiantScorpion = std::make_shared<dndSim::npc>(dndSim::character("giantscorpion", 3, {15,13,15,1,9,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GiantShark = std::make_shared<dndSim::npc>(dndSim::character("giantshark", 5, {23,11,21,1,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> GiantSpider = std::make_shared<dndSim::npc>(dndSim::character("giantspider", 1, {14,16,12,2,11,4}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> GiantToad = std::make_shared<dndSim::npc>(dndSim::character("gianttoad", 1, {15,13,13,2,10,3}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> GiantVulture = std::make_shared<dndSim::npc>(dndSim::character("giantvulture", 1, {15,10,15,6,12,7}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> GibberingMouther = std::make_shared<dndSim::npc>(dndSim::character("gibberingmouther", 2, {10,8,16,3,10,6}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> GithyankiKnight = std::make_shared<dndSim::npc>(dndSim::character("githyankiknight", 8, {16,14,15,14,14,15}, true, {"con","int","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> GithyankiWarrior = std::make_shared<dndSim::npc>(dndSim::character("githyankiwarrior", 3, {15,14,12,13,13,10}, true, {"con","int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> GithzeraiMonk = std::make_shared<dndSim::npc>(dndSim::character("githzeraimonk", 2, {12,15,12,13,14,10}, true, {"str","dex","int","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> GithzeraiZerth = std::make_shared<dndSim::npc>(dndSim::character("githzeraizerth", 6, {13,18,15,16,17,12}, true, {"str","dex","int","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Glabrezu = std::make_shared<dndSim::npc>(dndSim::character("glabrezu", 9, {20,15,21,19,17,16}, true, {"str","con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Gladiator = std::make_shared<dndSim::npc>(dndSim::character("gladiator", 5, {18,15,16,10,12,15}, false, {"str","dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> GnollFangofYeenoghu = std::make_shared<dndSim::npc>(dndSim::character("gnollfangofyeenoghu", 4, {17,15,15,10,11,13}, false, {"con","wis","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> GnollPackLord = std::make_shared<dndSim::npc>(dndSim::character("gnollpacklord", 2, {16,14,13,8,11,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GoblinBoss = std::make_shared<dndSim::npc>(dndSim::character("goblinboss", 1, {10,14,10,10,8,10}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> GoldDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("golddragonwyrmling", 3, {19,14,17,14,11,16}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Gorgon = std::make_shared<dndSim::npc>(dndSim::character("gorgon", 5, {20,11,18,2,12,7}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> Goristro = std::make_shared<dndSim::npc>(dndSim::character("goristro", 17, {25,11,25,6,13,14}, false, {"str","dex","con","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> GraySlaad = std::make_shared<dndSim::npc>(dndSim::character("grayslaad", 9, {17,17,16,13,8,14}, true, {}, "cha", 18));
    std::shared_ptr<dndSim::npc> GreenDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("greendragonwyrmling", 2, {15,12,13,14,11,13}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> GreenHag = std::make_shared<dndSim::npc>(dndSim::character("greenhag", 3, {18,12,16,13,14,14}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> GreenSlaad = std::make_shared<dndSim::npc>(dndSim::character("greenslaad", 8, {18,15,16,11,8,12}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Grell = std::make_shared<dndSim::npc>(dndSim::character("grell", 3, {15,14,13,12,11,9}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Grick = std::make_shared<dndSim::npc>(dndSim::character("grick", 2, {14,14,11,3,14,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GrickAlpha = std::make_shared<dndSim::npc>(dndSim::character("grickalpha", 7, {18,16,15,4,14,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Griffon = std::make_shared<dndSim::npc>(dndSim::character("griffon", 2, {18,15,16,2,13,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GuardianNaga = std::make_shared<dndSim::npc>(dndSim::character("guardiannaga", 10, {19,18,16,16,19,18}, true, {"dex","con","int","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Gynosphinx = std::make_shared<dndSim::npc>(dndSim::character("gynosphinx", 11, {18,15,16,18,18,18}, true, {}, "int", 17));
    std::shared_ptr<dndSim::npc> Half_OgrelOgrillonr = std::make_shared<dndSim::npc>(dndSim::character("half_ogrelogrillonr", 1, {17,10,14,7,9,10}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Half_RedDragonVeteran = std::make_shared<dndSim::npc>(dndSim::character("half_reddragonveteran", 5, {16,13,14,10,11,10}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Harpy = std::make_shared<dndSim::npc>(dndSim::character("harpy", 1, {12,13,12,7,10,13}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> HellHound = std::make_shared<dndSim::npc>(dndSim::character("hellhound", 3, {17,12,14,6,13,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> HelmedHorror = std::make_shared<dndSim::npc>(dndSim::character("helmedhorror", 4, {18,13,16,10,10,10}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> Hezrou = std::make_shared<dndSim::npc>(dndSim::character("hezrou", 8, {19,17,20,5,12,13}, false, {"str","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> HillGiant = std::make_shared<dndSim::npc>(dndSim::character("hillgiant", 5, {21,8,19,5,9,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Hippogriff = std::make_shared<dndSim::npc>(dndSim::character("hippogriff", 1, {17,13,13,2,12,8}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> HobgoblinCaptain = std::make_shared<dndSim::npc>(dndSim::character("hobgoblincaptain", 3, {15,14,14,12,10,13}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> HobgoblinWarlord = std::make_shared<dndSim::npc>(dndSim::character("hobgoblinwarlord", 6, {16,14,16,14,11,15}, false, {"int","wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> HookHorror = std::make_shared<dndSim::npc>(dndSim::character("hookhorror", 3, {18,10,15,6,12,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> HornedDevil = std::make_shared<dndSim::npc>(dndSim::character("horneddevil", 11, {22,17,21,12,16,17}, false, {"str","dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> HunterShark = std::make_shared<dndSim::npc>(dndSim::character("huntershark", 2, {18,13,15,1,10,4}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Hydra = std::make_shared<dndSim::npc>(dndSim::character("hydra", 8, {20,12,20,2,10,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> IceDevil = std::make_shared<dndSim::npc>(dndSim::character("icedevil", 14, {21,14,18,18,15,18}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Imp = std::make_shared<dndSim::npc>(dndSim::character("imp", 1, {6,17,13,11,12,14}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Incubus = std::make_shared<dndSim::npc>(dndSim::character("incubus", 4, {8,17,13,15,12,20}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> IntellectDevourer = std::make_shared<dndSim::npc>(dndSim::character("intellectdevourer", 2, {6,14,13,12,11,10}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> InvisibleStalker = std::make_shared<dndSim::npc>(dndSim::character("invisiblestalker", 6, {16,19,14,10,15,11}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> IronGolem = std::make_shared<dndSim::npc>(dndSim::character("irongolem", 16, {24,9,20,3,11,1}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> KillerWhale = std::make_shared<dndSim::npc>(dndSim::character("killerwhale", 3, {19,10,13,3,12,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Knight = std::make_shared<dndSim::npc>(dndSim::character("knight", 3, {16,11,14,11,11,15}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Kuo_toaArchpriest = std::make_shared<dndSim::npc>(dndSim::character("kuo_toaarchpriest", 6, {16,14,16,13,16,14}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Kuo_toaMonitor = std::make_shared<dndSim::npc>(dndSim::character("kuo_toamonitor", 3, {14,10,14,12,14,11}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Kuo_toaWhip = std::make_shared<dndSim::npc>(dndSim::character("kuo_toawhip", 1, {14,10,14,12,14,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> Lamia = std::make_shared<dndSim::npc>(dndSim::character("lamia", 4, {16,13,15,14,15,16}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Lion = std::make_shared<dndSim::npc>(dndSim::character("lion", 1, {17,15,13,3,12,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> LizardKing = std::make_shared<dndSim::npc>(dndSim::character("lizardking", 4, {17,12,15,11,11,15}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> LizardQueen = std::make_shared<dndSim::npc>(dndSim::character("lizardqueen", 4, {17,12,15,11,11,15}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> LizardfolkShaman = std::make_shared<dndSim::npc>(dndSim::character("lizardfolkshaman", 2, {15,10,13,10,15,8}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Mage = std::make_shared<dndSim::npc>(dndSim::character("mage", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Mammoth = std::make_shared<dndSim::npc>(dndSim::character("mammoth", 6, {24,9,21,3,11,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Manticore = std::make_shared<dndSim::npc>(dndSim::character("manticore", 3, {17,16,17,7,12,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Marid = std::make_shared<dndSim::npc>(dndSim::character("marid", 11, {22,12,26,18,17,18}, true, {"dex","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Marilith = std::make_shared<dndSim::npc>(dndSim::character("marilith", 16, {18,20,20,18,16,20}, false, {"str","con","wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Medusa = std::make_shared<dndSim::npc>(dndSim::character("medusa", 6, {10,15,16,12,13,15}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Merrow = std::make_shared<dndSim::npc>(dndSim::character("merrow", 2, {18,10,15,8,10,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Mezzoloth = std::make_shared<dndSim::npc>(dndSim::character("mezzoloth", 5, {18,11,16,7,10,11}, true, {}, "cha", 18));
    std::shared_ptr<dndSim::npc> Mimic = std::make_shared<dndSim::npc>(dndSim::character("mimic", 2, {17,12,15,5,13,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> MindFlayer = std::make_shared<dndSim::npc>(dndSim::character("mindflayer", 7, {11,12,12,19,17,17}, true, {"int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> MindFlayerArcanist = std::make_shared<dndSim::npc>(dndSim::character("mindflayerarcanist", 8, {11,12,12,19,17,17}, true, {"int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> Minotaur = std::make_shared<dndSim::npc>(dndSim::character("minotaur", 3, {18,11,16,6,16,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MinotaurSkeleton = std::make_shared<dndSim::npc>(dndSim::character("minotaurskeleton", 2, {18,11,15,6,8,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Mummy = std::make_shared<dndSim::npc>(dndSim::character("mummy", 3, {16,8,15,6,10,12}, false, {"wis"}, "str", 11));
    std::shared_ptr<dndSim::npc> MummyLord = std::make_shared<dndSim::npc>(dndSim::character("mummylord", 15, {18,10,17,11,18,16}, true, {"con","int","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> MyconidSovereign = std::make_shared<dndSim::npc>(dndSim::character("myconidsovereign", 2, {12,10,14,13,15,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Nalfeshnee = std::make_shared<dndSim::npc>(dndSim::character("nalfeshnee", 13, {21,10,22,19,12,15}, false, {"con","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> NightHag = std::make_shared<dndSim::npc>(dndSim::character("nighthag", 5, {18,15,16,16,14,16}, true, {}, "int", 17));
    std::shared_ptr<dndSim::npc> Nightmare = std::make_shared<dndSim::npc>(dndSim::character("nightmare", 3, {18,15,16,10,13,15}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Nothic = std::make_shared<dndSim::npc>(dndSim::character("nothic", 2, {14,16,16,13,10,8}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Nycaloth = std::make_shared<dndSim::npc>(dndSim::character("nycaloth", 9, {20,11,19,12,10,15}, true, {}, "cha", 18));
    std::shared_ptr<dndSim::npc> OchreJelly = std::make_shared<dndSim::npc>(dndSim::character("ochrejelly", 2, {15,6,14,2,6,1}, false, {}, "str", 8));
    std::shared_ptr<dndSim::npc> Ogre = std::make_shared<dndSim::npc>(dndSim::character("ogre", 2, {19,8,16,5,7,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> OgreZombie = std::make_shared<dndSim::npc>(dndSim::character("ogrezombie", 2, {19,6,18,3,6,5}, false, {"wis"}, "str", 8));
    std::shared_ptr<dndSim::npc> Oni = std::make_shared<dndSim::npc>(dndSim::character("oni", 7, {19,11,16,14,12,15}, true, {"dex","con","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> OrcEyeofGruumsh = std::make_shared<dndSim::npc>(dndSim::character("orceyeofgruumsh", 2, {16,12,17,9,13,12}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> OrcWarChief = std::make_shared<dndSim::npc>(dndSim::character("orcwarchief", 4, {18,12,18,11,11,16}, false, {"str","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Orog = std::make_shared<dndSim::npc>(dndSim::character("orog", 2, {18,12,18,12,11,12}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Otyugh = std::make_shared<dndSim::npc>(dndSim::character("otyugh", 5, {16,11,19,6,13,6}, false, {"con"}, "str", 14));
    std::shared_ptr<dndSim::npc> Owlbear = std::make_shared<dndSim::npc>(dndSim::character("owlbear", 3, {20,12,17,3,12,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Pegasus = std::make_shared<dndSim::npc>(dndSim::character("pegasus", 2, {18,15,16,10,15,13}, false, {"dex","wis","cha"}, "str", 12));
    std::shared_ptr<dndSim::npc> Pentadrone = std::make_shared<dndSim::npc>(dndSim::character("pentadrone", 2, {15,14,12,10,10,13}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Peryton = std::make_shared<dndSim::npc>(dndSim::character("peryton", 2, {16,12,13,9,12,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> PhaseSpider = std::make_shared<dndSim::npc>(dndSim::character("phasespider", 3, {15,15,12,6,10,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> PitFiend = std::make_shared<dndSim::npc>(dndSim::character("pitfiend", 20, {26,14,24,22,18,24}, true, {"dex","con","wis"}, "cha", 19));
    std::shared_ptr<dndSim::npc> Planetar = std::make_shared<dndSim::npc>(dndSim::character("planetar", 16, {24,20,24,19,22,25}, true, {"con","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> Plesiosaurus = std::make_shared<dndSim::npc>(dndSim::character("plesiosaurus", 2, {18,15,16,2,12,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> PolarBear = std::make_shared<dndSim::npc>(dndSim::character("polarbear", 2, {20,10,16,2,13,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Poltergeist = std::make_shared<dndSim::npc>(dndSim::character("poltergeist", 2, {1,14,11,10,10,11}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> Priest = std::make_shared<dndSim::npc>(dndSim::character("priest", 2, {10,10,12,13,16,13}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> PurpleWorm = std::make_shared<dndSim::npc>(dndSim::character("purpleworm", 15, {28,7,22,1,8,4}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Quadrone = std::make_shared<dndSim::npc>(dndSim::character("quadrone", 1, {12,14,12,10,10,11}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Quaggoth = std::make_shared<dndSim::npc>(dndSim::character("quaggoth", 2, {17,12,16,6,12,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> QuaggothSporeServant = std::make_shared<dndSim::npc>(dndSim::character("quaggothsporeservant", 1, {17,12,16,2,6,1}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> QuaggothThonot = std::make_shared<dndSim::npc>(dndSim::character("quaggoththonot", 3, {17,12,16,6,12,7}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Quasit = std::make_shared<dndSim::npc>(dndSim::character("quasit", 1, {5,17,10,7,10,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Rakshasa = std::make_shared<dndSim::npc>(dndSim::character("rakshasa", 13, {14,17,18,13,16,20}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> RedDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("reddragonwyrmling", 4, {19,10,17,12,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> RedSlaad = std::make_shared<dndSim::npc>(dndSim::character("redslaad", 5, {16,12,16,6,6,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Remorhaz = std::make_shared<dndSim::npc>(dndSim::character("remorhaz", 11, {24,13,21,4,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Revenant = std::make_shared<dndSim::npc>(dndSim::character("revenant", 5, {18,14,18,13,16,18}, false, {"str","con","wis","cha"}, "str", 13));
    std::shared_ptr<dndSim::npc> Rhinoceros = std::make_shared<dndSim::npc>(dndSim::character("rhinoceros", 2, {21,8,15,2,12,6}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Roc = std::make_shared<dndSim::npc>(dndSim::character("roc", 11, {28,10,20,3,10,9}, false, {"dex","con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Roper = std::make_shared<dndSim::npc>(dndSim::character("roper", 5, {18,8,17,7,16,6}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> RugofSmothering = std::make_shared<dndSim::npc>(dndSim::character("rugofsmothering", 2, {17,14,10,1,3,1}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Saber_ToothedTiger = std::make_shared<dndSim::npc>(dndSim::character("saber_toothedtiger", 2, {18,14,15,3,12,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> SahuaginBaron = std::make_shared<dndSim::npc>(dndSim::character("sahuaginbaron", 5, {19,15,16,14,13,17}, false, {"dex","con","int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> SahuaginPriestess = std::make_shared<dndSim::npc>(dndSim::character("sahuaginpriestess", 2, {13,11,12,12,14,13}, true, {}, "wis", 12));
    std::shared_ptr<dndSim::npc> Salamander = std::make_shared<dndSim::npc>(dndSim::character("salamander", 5, {18,14,15,11,10,12}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Scarecrow = std::make_shared<dndSim::npc>(dndSim::character("scarecrow", 1, {11,13,11,10,10,13}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> SeaHag = std::make_shared<dndSim::npc>(dndSim::character("seahag", 2, {16,13,16,12,12,13}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ShadowDemon = std::make_shared<dndSim::npc>(dndSim::character("shadowdemon", 4, {1,17,12,14,13,14}, false, {"dex","cha"}, "dex", 13));
    std::shared_ptr<dndSim::npc> ShamblingMound = std::make_shared<dndSim::npc>(dndSim::character("shamblingmound", 5, {18,8,16,5,10,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> ShieldGuardian = std::make_shared<dndSim::npc>(dndSim::character("shieldguardian", 7, {18,8,18,7,10,3}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SilverDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("silverdragonwyrmling", 2, {19,10,17,12,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Spectator = std::make_shared<dndSim::npc>(dndSim::character("spectator", 3, {8,14,14,13,14,11}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Specter = std::make_shared<dndSim::npc>(dndSim::character("specter", 1, {1,14,11,10,10,11}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SpinedDevil = std::make_shared<dndSim::npc>(dndSim::character("spineddevil", 2, {10,15,12,11,14,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SpiritNaga = std::make_shared<dndSim::npc>(dndSim::character("spiritnaga", 8, {18,17,14,16,15,16}, true, {"dex","con","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> Spy = std::make_shared<dndSim::npc>(dndSim::character("spy", 1, {10,15,10,12,14,16}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> StoneGiant = std::make_shared<dndSim::npc>(dndSim::character("stonegiant", 7, {23,15,20,10,12,9}, false, {"dex","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> StoneGolem = std::make_shared<dndSim::npc>(dndSim::character("stonegolem", 10, {22,9,20,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> StormGiant = std::make_shared<dndSim::npc>(dndSim::character("stormgiant", 13, {29,14,20,16,18,18}, true, {"str","con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Succubus = std::make_shared<dndSim::npc>(dndSim::character("succubus", 4, {8,17,13,15,12,20}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SwarmofPoisonousSnakes = std::make_shared<dndSim::npc>(dndSim::character("swarmofpoisonoussnakes", 2, {8,18,11,1,10,3}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> SwarmofQuippers = std::make_shared<dndSim::npc>(dndSim::character("swarmofquippers", 1, {13,16,9,1,7,2}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Thri_kreen = std::make_shared<dndSim::npc>(dndSim::character("thri_kreen", 1, {12,15,13,8,12,7}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Tiger = std::make_shared<dndSim::npc>(dndSim::character("tiger", 1, {17,15,14,3,12,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Treant = std::make_shared<dndSim::npc>(dndSim::character("treant", 9, {23,8,21,12,16,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Triceratops = std::make_shared<dndSim::npc>(dndSim::character("triceratops", 5, {22,9,17,2,11,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Troll = std::make_shared<dndSim::npc>(dndSim::character("troll", 5, {18,13,20,7,9,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> TyrannosaurusRex = std::make_shared<dndSim::npc>(dndSim::character("tyrannosaurusrex", 8, {25,10,19,2,12,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Ultroloth = std::make_shared<dndSim::npc>(dndSim::character("ultroloth", 13, {16,16,18,18,15,19}, true, {}, "cha", 19));
    std::shared_ptr<dndSim::npc> UmberHulk = std::make_shared<dndSim::npc>(dndSim::character("umberhulk", 5, {20,13,16,9,10,10}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Unicorn = std::make_shared<dndSim::npc>(dndSim::character("unicorn", 5, {18,14,15,11,17,16}, true, {}, "wis", 12));
    std::shared_ptr<dndSim::npc> Vampire = std::make_shared<dndSim::npc>(dndSim::character("vampire", 13, {18,18,18,17,15,18}, false, {"dex","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> VampireSpawn = std::make_shared<dndSim::npc>(dndSim::character("vampirespawn", 5, {16,16,16,11,10,12}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> VampireSpellcaster = std::make_shared<dndSim::npc>(dndSim::character("vampirespellcaster", 15, {18,18,18,17,15,18}, true, {"dex","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> VampireWarrior = std::make_shared<dndSim::npc>(dndSim::character("vampirewarrior", 15, {18,18,18,17,15,18}, false, {"dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Veteran = std::make_shared<dndSim::npc>(dndSim::character("veteran", 3, {16,13,14,10,11,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Vrock = std::make_shared<dndSim::npc>(dndSim::character("vrock", 6, {17,15,18,8,13,8}, false, {"dex","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> WaterElemental = std::make_shared<dndSim::npc>(dndSim::character("waterelemental", 5, {18,14,18,5,10,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> WaterWeird = std::make_shared<dndSim::npc>(dndSim::character("waterweird", 3, {17,16,13,11,10,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Werebear = std::make_shared<dndSim::npc>(dndSim::character("werebear", 5, {19,10,17,11,12,12}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> Wereboar = std::make_shared<dndSim::npc>(dndSim::character("wereboar", 4, {17,10,15,10,11,8}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> Wererat = std::make_shared<dndSim::npc>(dndSim::character("wererat", 2, {10,15,12,11,10,8}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> Weretiger = std::make_shared<dndSim::npc>(dndSim::character("weretiger", 4, {17,15,16,10,13,11}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Werewolf = std::make_shared<dndSim::npc>(dndSim::character("werewolf", 3, {15,13,14,10,11,10}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> WhiteDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("whitedragonwyrmling", 2, {14,10,14,5,10,11}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Wight = std::make_shared<dndSim::npc>(dndSim::character("wight", 3, {15,14,16,10,13,15}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Will_o_Wisp = std::make_shared<dndSim::npc>(dndSim::character("will_o_wisp", 2, {1,28,10,13,14,11}, false, {}, "dex", 19));
    std::shared_ptr<dndSim::npc> WinterWolf = std::make_shared<dndSim::npc>(dndSim::character("winterwolf", 3, {18,13,14,7,12,8}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Wraith = std::make_shared<dndSim::npc>(dndSim::character("wraith", 5, {6,16,16,12,14,15}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Wyvern = std::make_shared<dndSim::npc>(dndSim::character("wyvern", 6, {19,10,16,5,12,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Xorn = std::make_shared<dndSim::npc>(dndSim::character("xorn", 5, {17,10,22,11,10,11}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> Yeti = std::make_shared<dndSim::npc>(dndSim::character("yeti", 3, {18,13,16,8,12,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Yochlol = std::make_shared<dndSim::npc>(dndSim::character("yochlol", 10, {15,14,18,13,15,15}, true, {"dex","int","wis","cha"}, "wis", 15));
    std::shared_ptr<dndSim::npc> YoungBlackDragon = std::make_shared<dndSim::npc>(dndSim::character("youngblackdragon", 7, {19,14,17,12,11,15}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungBlueDragon = std::make_shared<dndSim::npc>(dndSim::character("youngbluedragon", 9, {21,10,19,14,13,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungBrassDragon = std::make_shared<dndSim::npc>(dndSim::character("youngbrassdragon", 6, {19,10,17,12,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> YoungBronzeDragon = std::make_shared<dndSim::npc>(dndSim::character("youngbronzedragon", 8, {21,10,19,14,13,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungCopperDragon = std::make_shared<dndSim::npc>(dndSim::character("youngcopperdragon", 7, {19,12,17,16,13,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> YoungGoldDragon = std::make_shared<dndSim::npc>(dndSim::character("younggolddragon", 10, {23,14,21,16,13,20}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungGreenDragon = std::make_shared<dndSim::npc>(dndSim::character("younggreendragon", 8, {19,12,17,16,13,15}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungRedDragon = std::make_shared<dndSim::npc>(dndSim::character("youngreddragon", 10, {23,10,21,14,11,19}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungRedShadowDragon = std::make_shared<dndSim::npc>(dndSim::character("youngredshadowdragon", 13, {23,10,21,14,11,19}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungRemorhaz = std::make_shared<dndSim::npc>(dndSim::character("youngremorhaz", 5, {18,13,17,3,10,4}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> YoungSilverDragon = std::make_shared<dndSim::npc>(dndSim::character("youngsilverdragon", 9, {23,10,21,14,11,19}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungWhiteDragon = std::make_shared<dndSim::npc>(dndSim::character("youngwhitedragon", 6, {18,10,18,6,11,12}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Yuan_tiAbomination = std::make_shared<dndSim::npc>(dndSim::character("yuan_tiabomination", 7, {19,16,17,17,15,18}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> Yuan_tiMalisonlType1r = std::make_shared<dndSim::npc>(dndSim::character("yuan_timalisonltype1r", 3, {16,14,13,14,12,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Yuan_tiMalisonlType2r = std::make_shared<dndSim::npc>(dndSim::character("yuan_timalisonltype2r", 3, {16,14,13,14,12,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Yuan_tiMalisonlType3r = std::make_shared<dndSim::npc>(dndSim::character("yuan_timalisonltype3r", 3, {16,14,13,14,12,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Yuan_tiPureblood = std::make_shared<dndSim::npc>(dndSim::character("yuan_tipureblood", 1, {11,12,11,13,12,14}, true, {}, "cha", 11));
    std::shared_ptr<dndSim::npc> AwakenedZurkhwood = std::make_shared<dndSim::npc>(dndSim::character("awakenedzurkhwood", 2, {19,6,15,10,10,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> ChamberlainofZuggtmoy = std::make_shared<dndSim::npc>(dndSim::character("chamberlainofzuggtmoy", 2, {17,7,14,11,8,12}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> ChuulSporeServant = std::make_shared<dndSim::npc>(dndSim::character("chuulsporeservant", 4, {19,10,16,2,6,1}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> DeepkingHorgarSteelshadowV = std::make_shared<dndSim::npc>(dndSim::character("deepkinghorgarsteelshadowv", 3, {19,11,14,11,11,15}, false, {"con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> Droki = std::make_shared<dndSim::npc>(dndSim::character("droki", 2, {11,16,13,10,5,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> DuergarDarkhaft = std::make_shared<dndSim::npc>(dndSim::character("duergardarkhaft", 2, {14,11,14,11,10,9}, true, {}, "int", 16));
    std::shared_ptr<dndSim::npc> DuergarKeeperoftheFlame = std::make_shared<dndSim::npc>(dndSim::character("duergarkeeperoftheflame", 2, {14,11,14,11,10,9}, true, {}, "int", 16));
    std::shared_ptr<dndSim::npc> Grisha = std::make_shared<dndSim::npc>(dndSim::character("grisha", 2, {14,12,12,11,14,16}, true, {"wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> HookHorrorSporeServant = std::make_shared<dndSim::npc>(dndSim::character("hookhorrorsporeservant", 3, {18,10,15,2,6,1}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> LordsAllianceSpy = std::make_shared<dndSim::npc>(dndSim::character("lordsalliancespy", 1, {10,15,10,12,14,16}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Narrak = std::make_shared<dndSim::npc>(dndSim::character("narrak", 2, {9,14,13,14,5,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> ThePuddingKing = std::make_shared<dndSim::npc>(dndSim::character("thepuddingking", 4, {10,16,14,12,8,17}, true, {"con","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> TroglodyteChampionofLaogzed = std::make_shared<dndSim::npc>(dndSim::character("troglodytechampionoflaogzed", 3, {18,12,18,8,12,12}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> VampiricIxitxachitl = std::make_shared<dndSim::npc>(dndSim::character("vampiricixitxachitl", 2, {14,18,13,12,13,7}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> VampiricIxitxachitlCleric = std::make_shared<dndSim::npc>(dndSim::character("vampiricixitxachitlcleric", 2, {14,18,13,12,13,7}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> VeteranoftheGauntlet = std::make_shared<dndSim::npc>(dndSim::character("veteranofthegauntlet", 3, {16,13,14,10,11,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Yestabrod = std::make_shared<dndSim::npc>(dndSim::character("yestabrod", 4, {12,10,14,13,15,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CharmayneDaymore = std::make_shared<dndSim::npc>(dndSim::character("charmaynedaymore", 10, {8,14,15,20,14,16}, true, {"int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> ClockworkDefender = std::make_shared<dndSim::npc>(dndSim::character("clockworkdefender", 1, {16,15,18,3,14,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> MarkosDelphi = std::make_shared<dndSim::npc>(dndSim::character("markosdelphi", 3, {8,15,12,17,13,16}, true, {"wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> Prisoner13 = std::make_shared<dndSim::npc>(dndSim::character("prisoner13", 5, {15,17,18,16,14,16}, false, {"con","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> SythianSkalderang = std::make_shared<dndSim::npc>(dndSim::character("sythianskalderang", 7, {10,15,13,14,11,16}, true, {"dex","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> TixieTockworth = std::make_shared<dndSim::npc>(dndSim::character("tixietockworth", 7, {16,13,18,17,9,10}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> MrGreystone = std::make_shared<dndSim::npc>(dndSim::character("mrgreystone", 5, {18,15,16,10,12,15}, false, {"str","dex","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> GreaterShadowHorror = std::make_shared<dndSim::npc>(dndSim::character("greatershadowhorror", 12, {14,16,14,2,17,18}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> MorwenaVeilmist = std::make_shared<dndSim::npc>(dndSim::character("morwenaveilmist", 5, {9,14,13,17,12,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Usagt = std::make_shared<dndSim::npc>(dndSim::character("usagt", 5, {10,15,16,15,20,12}, true, {"int","wis","cha"}, "wis", 12));
    std::shared_ptr<dndSim::npc> Achaierai = std::make_shared<dndSim::npc>(dndSim::character("achaierai", 5, {18,14,14,10,12,14}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> AribethdeTylmarande = std::make_shared<dndSim::npc>(dndSim::character("aribethdetylmarande", 10, {16,14,16,10,13,16}, true, {}, "cha", 17));
    std::shared_ptr<dndSim::npc> Bebilith = std::make_shared<dndSim::npc>(dndSim::character("bebilith", 12, {16,22,18,11,13,8}, true, {"con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> BhaalSlayer = std::make_shared<dndSim::npc>(dndSim::character("bhaalslayer", 20, {24,22,20,14,16,14}, false, {"str","dex"}, "str", 19));
    std::shared_ptr<dndSim::npc> BodhiIrenicus = std::make_shared<dndSim::npc>(dndSim::character("bodhiirenicus", 15, {18,20,18,16,15,18}, false, {"dex","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> BorivikWindheim = std::make_shared<dndSim::npc>(dndSim::character("borivikwindheim", 10, {11,20,14,11,16,11}, true, {"dex","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> CorneliusWatson = std::make_shared<dndSim::npc>(dndSim::character("corneliuswatson", 12, {10,14,12,20,15,16}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Dagryn = std::make_shared<dndSim::npc>(dndSim::character("dagryn", 4, {12,8,14,14,13,17}, true, {}, "cha", 19));
    std::shared_ptr<dndSim::npc> Darien = std::make_shared<dndSim::npc>(dndSim::character("darien", 9, {20,14,16,10,11,18}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> DeepSpider = std::make_shared<dndSim::npc>(dndSim::character("deepspider", 7, {20,14,16,6,12,4}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> DemodandFarastu = std::make_shared<dndSim::npc>(dndSim::character("demodandfarastu", 7, {19,13,14,8,12,16}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> DemodandKelubar = std::make_shared<dndSim::npc>(dndSim::character("demodandkelubar", 11, {20,13,17,14,15,18}, true, {"str","con","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> DemodandShator = std::make_shared<dndSim::npc>(dndSim::character("demodandshator", 15, {24,13,20,14,16,20}, true, {"str","con","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> DreadDoppelganger = std::make_shared<dndSim::npc>(dndSim::character("dreaddoppelganger", 5, {11,20,14,17,14,15}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> EdwinOdesseiron = std::make_shared<dndSim::npc>(dndSim::character("edwinodesseiron", 15, {10,16,14,20,15,16}, true, {"int","wis"}, "int", 15));
    std::shared_ptr<dndSim::npc> EoAshmajiir = std::make_shared<dndSim::npc>(dndSim::character("eoashmajiir", 11, {10,16,10,12,14,20}, true, {"con","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Faldorn = std::make_shared<dndSim::npc>(dndSim::character("faldorn", 13, {12,12,14,12,20,15}, true, {"int","wis"}, "wis", 11));
    std::shared_ptr<dndSim::npc> FlimpShagglecran = std::make_shared<dndSim::npc>(dndSim::character("flimpshagglecran", 9, {14,10,14,18,12,11}, true, {"con","int"}, "int", 21));
    std::shared_ptr<dndSim::npc> Hamadryad = std::make_shared<dndSim::npc>(dndSim::character("hamadryad", 2, {10,16,14,14,10,15}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Imoen = std::make_shared<dndSim::npc>(dndSim::character("imoen", 8, {11,18,14,14,10,14}, false, {"dex","int"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Jaheira = std::make_shared<dndSim::npc>(dndSim::character("jaheira", 13, {14,12,16,12,20,15}, true, {"con","wis"}, "wis", 11));
    std::shared_ptr<dndSim::npc> Kagain = std::make_shared<dndSim::npc>(dndSim::character("kagain", 11, {18,13,20,10,11,10}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Kivan = std::make_shared<dndSim::npc>(dndSim::character("kivan", 7, {16,18,12,11,14,11}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Lothar = std::make_shared<dndSim::npc>(dndSim::character("lothar", 9, {18,16,16,11,10,10}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> MinscandBoo = std::make_shared<dndSim::npc>(dndSim::character("minscandboo", 10, {20,12,18,10,10,10}, false, {"str","con"}, "str", 13));
    std::shared_ptr<dndSim::npc> MontaronandtheLaughingSkull = std::make_shared<dndSim::npc>(dndSim::character("montaronandthelaughingskull", 11, {12,20,16,13,11,10}, false, {"dex","int"}, "dex", 17));
    std::shared_ptr<dndSim::npc> NaesInuus = std::make_shared<dndSim::npc>(dndSim::character("naesinuus", 13, {14,14,16,13,20,14}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Nauk = std::make_shared<dndSim::npc>(dndSim::character("nauk", 9, {20,12,18,10,12,14}, false, {"str","dex","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> PelyiousAvhoste = std::make_shared<dndSim::npc>(dndSim::character("pelyiousavhoste", 9, {18,14,14,17,11,13}, true, {"str","dex"}, "int", 12));
    std::shared_ptr<dndSim::npc> Phaerimm = std::make_shared<dndSim::npc>(dndSim::character("phaerimm", 15, {20,13,16,19,20,23}, true, {"int","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> SaemonHavarian = std::make_shared<dndSim::npc>(dndSim::character("saemonhavarian", 10, {19,18,14,18,11,14}, true, {"str","dex","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> Sirene = std::make_shared<dndSim::npc>(dndSim::character("sirene", 3, {12,18,11,12,10,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> SkeletonLord = std::make_shared<dndSim::npc>(dndSim::character("skeletonlord", 9, {20,14,18,18,12,12}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SkeletonWarrior = std::make_shared<dndSim::npc>(dndSim::character("skeletonwarrior", 5, {16,14,16,16,12,12}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SuldilBaldoriel = std::make_shared<dndSim::npc>(dndSim::character("suldilbaldoriel", 10, {10,14,12,12,14,20}, true, {"con","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> SwordSpider = std::make_shared<dndSim::npc>(dndSim::character("swordspider", 3, {16,16,14,6,12,4}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> TasloiSniper = std::make_shared<dndSim::npc>(dndSim::character("tasloisniper", 1, {8,18,8,12,10,12}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> TiberiusInuus = std::make_shared<dndSim::npc>(dndSim::character("tiberiusinuus", 9, {18,12,18,11,11,16}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Valygar = std::make_shared<dndSim::npc>(dndSim::character("valygar", 9, {14,18,16,10,11,10}, false, {"str","dex"}, "dex", 17));
    std::shared_ptr<dndSim::npc> VellinFarstride = std::make_shared<dndSim::npc>(dndSim::character("vellinfarstride", 9, {11,20,16,11,14,11}, false, {"dex","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> ViconiaDeVir = std::make_shared<dndSim::npc>(dndSim::character("viconiadevir", 13, {25,14,10,14,20,14}, true, {"con","wis"}, "wis", 21));
    std::shared_ptr<dndSim::npc> Viktor = std::make_shared<dndSim::npc>(dndSim::character("viktor", 9, {18,12,18,11,11,16}, true, {"con","wis"}, "cha", 20));
    std::shared_ptr<dndSim::npc> Wolfwere = std::make_shared<dndSim::npc>(dndSim::character("wolfwere", 4, {18,14,12,10,8,15}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> WolfwereAlpha = std::make_shared<dndSim::npc>(dndSim::character("wolfwerealpha", 6, {20,14,14,10,8,16}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> XanMoonblade = std::make_shared<dndSim::npc>(dndSim::character("xanmoonblade", 8, {10,16,11,17,12,11}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> XzartheChaosClone = std::make_shared<dndSim::npc>(dndSim::character("xzarthechaosclone", 11, {12,16,12,20,10,12}, true, {"int","wis"}, "int", 15));
    std::shared_ptr<dndSim::npc> AncientCorpseWalker = std::make_shared<dndSim::npc>(dndSim::character("ancientcorpsewalker", 10, {19,15,19,10,12,9}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> AvariceSeraph = std::make_shared<dndSim::npc>(dndSim::character("avariceseraph", 14, {20,20,20,14,17,20}, true, {"con","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> AwakenedChappedBrute = std::make_shared<dndSim::npc>(dndSim::character("awakenedchappedbrute", 7, {20,10,20,5,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Bloodbonded = std::make_shared<dndSim::npc>(dndSim::character("bloodbonded", 4, {12,15,13,15,7,18}, false, {"con","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> BoneTrader = std::make_shared<dndSim::npc>(dndSim::character("bonetrader", 1, {10,14,11,14,15,18}, false, {"con"}, "dex", 12));
    std::shared_ptr<dndSim::npc> CandlelightDaemon = std::make_shared<dndSim::npc>(dndSim::character("candlelightdaemon", 11, {16,17,18,12,14,17}, true, {}, "cha", 17));
    std::shared_ptr<dndSim::npc> ChappedBrute = std::make_shared<dndSim::npc>(dndSim::character("chappedbrute", 4, {18,12,20,7,10,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> ChappedBruteAbomination = std::make_shared<dndSim::npc>(dndSim::character("chappedbruteabomination", 9, {23,10,20,3,10,5}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> CorpseWalker = std::make_shared<dndSim::npc>(dndSim::character("corpsewalker", 6, {16,13,17,6,10,6}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Dawndrinker = std::make_shared<dndSim::npc>(dndSim::character("dawndrinker", 5, {18,14,19,3,11,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Doomcaller = std::make_shared<dndSim::npc>(dndSim::character("doomcaller", 15, {8,17,17,14,12,21}, true, {"con","int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> DowncastApostate = std::make_shared<dndSim::npc>(dndSim::character("downcastapostate", 11, {15,14,17,13,12,18}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> DowncastMercenary = std::make_shared<dndSim::npc>(dndSim::character("downcastmercenary", 5, {17,15,16,12,13,14}, false, {"wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> EldritchHerald = std::make_shared<dndSim::npc>(dndSim::character("eldritchherald", 5, {14,11,15,10,17,12}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> EldritchPriest = std::make_shared<dndSim::npc>(dndSim::character("eldritchpriest", 2, {12,11,13,10,15,10}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> ElfVampirelAncientr = std::make_shared<dndSim::npc>(dndSim::character("elfvampirelancientr", 19, {20,20,20,15,16,16}, false, {"dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> EmpyreanBrazenBull = std::make_shared<dndSim::npc>(dndSim::character("empyreanbrazenbull", 10, {26,10,25,14,17,21}, false, {"str","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Fzeg = std::make_shared<dndSim::npc>(dndSim::character("fzeg", 16, {18,18,18,17,15,18}, false, {"dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Fzeglaich = std::make_shared<dndSim::npc>(dndSim::character("fzeglaich", 7, {16,16,16,11,11,12}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> GluttonySeraph = std::make_shared<dndSim::npc>(dndSim::character("gluttonyseraph", 14, {21,12,20,13,15,16}, true, {"con","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> GnollBrute = std::make_shared<dndSim::npc>(dndSim::character("gnollbrute", 2, {16,12,15,6,13,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> HarvesterofLies = std::make_shared<dndSim::npc>(dndSim::character("harvesteroflies", 9, {13,20,14,11,16,15}, true, {"dex","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> HorrorFlitHunter = std::make_shared<dndSim::npc>(dndSim::character("horrorflithunter", 2, {11,18,12,3,10,4}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> HourglassWidow = std::make_shared<dndSim::npc>(dndSim::character("hourglasswidow", 20, {16,19,18,19,17,22}, true, {"str","con","int","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Hraptnon = std::make_shared<dndSim::npc>(dndSim::character("hraptnon", 18, {21,17,22,12,17,12}, false, {"str","dex","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> InfernalTormentor = std::make_shared<dndSim::npc>(dndSim::character("infernaltormentor", 6, {18,12,16,12,13,15}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Ithjar = std::make_shared<dndSim::npc>(dndSim::character("ithjar", 5, {18,20,17,3,10,5}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Lenchtahg = std::make_shared<dndSim::npc>(dndSim::character("lenchtahg", 5, {18,11,18,10,11,13}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> LesserAvariceSeraph = std::make_shared<dndSim::npc>(dndSim::character("lesseravariceseraph", 7, {16,18,17,13,15,16}, true, {"con","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> LesserGluttonySeraph = std::make_shared<dndSim::npc>(dndSim::character("lessergluttonyseraph", 7, {18,14,19,12,14,15}, true, {"con","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> LichTroll = std::make_shared<dndSim::npc>(dndSim::character("lichtroll", 14, {18,14,18,15,13,12}, true, {"con","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> Lindwyrm = std::make_shared<dndSim::npc>(dndSim::character("lindwyrm", 14, {23,15,21,8,14,12}, false, {"str","dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Lupilisk = std::make_shared<dndSim::npc>(dndSim::character("lupilisk", 3, {16,17,14,5,13,7}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> LupiliskElder = std::make_shared<dndSim::npc>(dndSim::character("lupiliskelder", 6, {18,16,15,6,14,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> LupiliskWhelp = std::make_shared<dndSim::npc>(dndSim::character("lupiliskwhelp", 1, {13,14,12,3,11,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> MalikirianImp = std::make_shared<dndSim::npc>(dndSim::character("malikirianimp", 1, {7,13,10,11,12,14}, true, {"wis","cha"}, "cha", 11));
    std::shared_ptr<dndSim::npc> Mjork = std::make_shared<dndSim::npc>(dndSim::character("mjork", 3, {15,12,16,6,10,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MjorkAsher = std::make_shared<dndSim::npc>(dndSim::character("mjorkasher", 6, {15,15,16,7,13,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MjorkBurner = std::make_shared<dndSim::npc>(dndSim::character("mjorkburner", 6, {15,15,18,7,12,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MjorkCharger = std::make_shared<dndSim::npc>(dndSim::character("mjorkcharger", 7, {18,11,18,6,10,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> MjorkSootlingSwarm = std::make_shared<dndSim::npc>(dndSim::character("mjorksootlingswarm", 2, {9,15,12,4,10,3}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> OblivionBrute = std::make_shared<dndSim::npc>(dndSim::character("oblivionbrute", 5, {16,14,15,10,10,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> OblivionJuggernaut = std::make_shared<dndSim::npc>(dndSim::character("oblivionjuggernaut", 8, {18,14,15,10,10,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> OblivionLeaper = std::make_shared<dndSim::npc>(dndSim::character("oblivionleaper", 1, {10,16,11,10,10,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> OblivionWhistler = std::make_shared<dndSim::npc>(dndSim::character("oblivionwhistler", 2, {12,16,13,10,10,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> OozingVulture = std::make_shared<dndSim::npc>(dndSim::character("oozingvulture", 2, {16,13,12,5,14,8}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> OrdealTree = std::make_shared<dndSim::npc>(dndSim::character("ordealtree", 12, {24,7,21,12,16,12}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> PanjaianIlharan = std::make_shared<dndSim::npc>(dndSim::character("panjaianilharan", 3, {10,16,13,12,15,13}, true, {"dex"}, "wis", 15));
    std::shared_ptr<dndSim::npc> PsychicFragmentSwarm = std::make_shared<dndSim::npc>(dndSim::character("psychicfragmentswarm", 3, {3,16,13,7,14,12}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ScreamThief = std::make_shared<dndSim::npc>(dndSim::character("screamthief", 3, {6,15,14,10,12,12}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SeaDrake = std::make_shared<dndSim::npc>(dndSim::character("seadrake", 2, {15,16,14,7,14,8}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> ShadowsteelGhast = std::make_shared<dndSim::npc>(dndSim::character("shadowsteelghast", 7, {16,14,17,14,13,8}, true, {"int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> ShadowsteelGhoul = std::make_shared<dndSim::npc>(dndSim::character("shadowsteelghoul", 4, {16,12,14,9,10,6}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> ShatterCorpse = std::make_shared<dndSim::npc>(dndSim::character("shattercorpse", 1, {13,6,16,3,6,5}, false, {"wis"}, "str", 10));
    std::shared_ptr<dndSim::npc> SkeletonCannoneer = std::make_shared<dndSim::npc>(dndSim::character("skeletoncannoneer", 2, {12,16,15,8,13,5}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> SkeletonCommander = std::make_shared<dndSim::npc>(dndSim::character("skeletoncommander", 3, {16,10,15,11,12,14}, false, {"wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Skinweaver = std::make_shared<dndSim::npc>(dndSim::character("skinweaver", 3, {12,14,16,14,13,18}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> SkyDrake = std::make_shared<dndSim::npc>(dndSim::character("skydrake", 4, {18,11,17,8,14,11}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> SlothGalloper = std::make_shared<dndSim::npc>(dndSim::character("slothgalloper", 1, {17,13,12,4,12,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Snapjaw = std::make_shared<dndSim::npc>(dndSim::character("snapjaw", 5, {21,9,17,10,10,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SpythronarSwarm = std::make_shared<dndSim::npc>(dndSim::character("spythronarswarm", 2, {5,17,10,3,11,3}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SpythronarWeb = std::make_shared<dndSim::npc>(dndSim::character("spythronarweb", 2, {17,16,13,3,8,1}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> StormbornIthjar = std::make_shared<dndSim::npc>(dndSim::character("stormbornithjar", 9, {21,20,19,3,12,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> VenomousGnoll = std::make_shared<dndSim::npc>(dndSim::character("venomousgnoll", 1, {12,14,13,6,13,7}, false, {"con"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Vitebriate = std::make_shared<dndSim::npc>(dndSim::character("vitebriate", 2, {11,14,16,12,12,16}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> WerebearAscetic = std::make_shared<dndSim::npc>(dndSim::character("werebearascetic", 12, {16,14,17,10,16,11}, true, {"wis"}, "wis", 12));
    std::shared_ptr<dndSim::npc> WerewolfRavager = std::make_shared<dndSim::npc>(dndSim::character("werewolfravager", 7, {17,16,14,9,15,10}, false, {"str","dex"}, "str", 13));
    std::shared_ptr<dndSim::npc> Xakalonus = std::make_shared<dndSim::npc>(dndSim::character("xakalonus", 8, {18,15,17,9,12,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> YoungBlightscaleDragon = std::make_shared<dndSim::npc>(dndSim::character("youngblightscaledragon", 8, {19,12,19,12,11,8}, false, {"dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> ZombieTroll = std::make_shared<dndSim::npc>(dndSim::character("zombietroll", 4, {19,6,18,3,6,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> BillyBeaver = std::make_shared<dndSim::npc>(dndSim::character("billybeaver", 3, {20,12,17,3,12,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> BustertheBear = std::make_shared<dndSim::npc>(dndSim::character("busterthebear", 1, {15,14,13,8,11,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> LaylatheLizard = std::make_shared<dndSim::npc>(dndSim::character("laylathelizard", 1, {13,15,10,7,10,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> ThomasTToad = std::make_shared<dndSim::npc>(dndSim::character("thomasttoad", 2, {19,8,16,5,7,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> AmrikVanthampur = std::make_shared<dndSim::npc>(dndSim::character("amrikvanthampur", 3, {12,18,12,14,14,15}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> ArkhantheCruel = std::make_shared<dndSim::npc>(dndSim::character("arkhanthecruel", 16, {20,12,18,10,10,18}, true, {"wis","cha"}, "cha", 23));
    std::shared_ptr<dndSim::npc> BlackGauntletofBane = std::make_shared<dndSim::npc>(dndSim::character("blackgauntletofbane", 6, {18,11,18,12,15,18}, true, {"wis"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Crokektoeck = std::make_shared<dndSim::npc>(dndSim::character("crokektoeck", 14, {28,10,24,6,10,13}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> DeathsHeadofBhaal = std::make_shared<dndSim::npc>(dndSim::character("deathsheadofbhaal", 5, {20,20,20,14,13,16}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> DukeThalamraVanthampur = std::make_shared<dndSim::npc>(dndSim::character("dukethalamravanthampur", 4, {17,10,15,13,16,18}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> FiendishFleshGolem = std::make_shared<dndSim::npc>(dndSim::character("fiendishfleshgolem", 8, {20,9,20,7,10,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GideonLightward = std::make_shared<dndSim::npc>(dndSim::character("gideonlightward", 6, {18,13,18,10,18,13}, false, {"dex","con","wis"}, "str", 11));
    std::shared_ptr<dndSim::npc> Hellwasp = std::make_shared<dndSim::npc>(dndSim::character("hellwasp", 5, {18,15,12,10,10,7}, false, {"dex","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> Hollyphant = std::make_shared<dndSim::npc>(dndSim::character("hollyphant", 5, {10,11,12,16,19,16}, true, {"dex","con","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> IronConsul = std::make_shared<dndSim::npc>(dndSim::character("ironconsul", 2, {17,11,16,12,15,16}, false, {"wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Krull = std::make_shared<dndSim::npc>(dndSim::character("krull", 6, {20,14,15,12,20,12}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> MahaditheRakshasa = std::make_shared<dndSim::npc>(dndSim::character("mahaditherakshasa", 14, {14,18,18,14,18,20}, true, {"wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> MasterofSouls = std::make_shared<dndSim::npc>(dndSim::character("masterofsouls", 4, {10,14,17,19,14,13}, true, {"wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> MortlockVanthampur = std::make_shared<dndSim::npc>(dndSim::character("mortlockvanthampur", 3, {18,14,17,10,12,13}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Nine_FingersKeene = std::make_shared<dndSim::npc>(dndSim::character("nine_fingerskeene", 5, {12,18,14,13,17,14}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ReaperofBhaal = std::make_shared<dndSim::npc>(dndSim::character("reaperofbhaal", 2, {11,20,13,15,12,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> RilsaRael = std::make_shared<dndSim::npc>(dndSim::character("rilsarael", 3, {14,18,14,10,11,15}, false, {"dex","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> SkullLasherofMyrkul = std::make_shared<dndSim::npc>(dndSim::character("skulllasherofmyrkul", 1, {10,14,15,16,13,10}, true, {"wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> SmilertheDefiler = std::make_shared<dndSim::npc>(dndSim::character("smilerthedefiler", 7, {14,20,16,18,11,18}, true, {}, "int", 18));
    std::shared_ptr<dndSim::npc> TorogarSteelfist = std::make_shared<dndSim::npc>(dndSim::character("torogarsteelfist", 11, {25,17,20,8,9,16}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> UlderRavengard = std::make_shared<dndSim::npc>(dndSim::character("ulderravengard", 5, {17,14,16,11,10,17}, false, {"con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> Pech = std::make_shared<dndSim::npc>(dndSim::character("pech", 4, {19,11,18,11,14,10}, true, {"con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> AnimatedCoffin = std::make_shared<dndSim::npc>(dndSim::character("animatedcoffin", 3, {16,12,15,3,11,3}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> FactolSkall = std::make_shared<dndSim::npc>(dndSim::character("factolskall", 17, {11,16,16,20,14,16}, true, {"con","int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> HeraldsofDustExorcist = std::make_shared<dndSim::npc>(dndSim::character("heraldsofdustexorcist", 6, {8,16,16,17,14,11}, true, {"int","wis","cha"}, "int", 13));
    std::shared_ptr<dndSim::npc> AnimatedDeleriumSludge = std::make_shared<dndSim::npc>(dndSim::character("animateddeleriumsludge", 5, {18,14,18,5,10,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> BigLinda = std::make_shared<dndSim::npc>(dndSim::character("biglinda", 9, {25,10,19,2,12,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Cavalier = std::make_shared<dndSim::npc>(dndSim::character("cavalier", 5, {18,10,16,10,12,15}, true, {"wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> Chaplain = std::make_shared<dndSim::npc>(dndSim::character("chaplain", 6, {13,10,14,11,17,13}, true, {"wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> CrimsonCountess = std::make_shared<dndSim::npc>(dndSim::character("crimsoncountess", 8, {10,21,15,13,14,19}, false, {"con","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> EldrickRuneweaver = std::make_shared<dndSim::npc>(dndSim::character("eldrickruneweaver", 17, {8,10,16,22,19,15}, true, {"str","dex","con","int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> EntropicFlame = std::make_shared<dndSim::npc>(dndSim::character("entropicflame", 5, {10,17,13,5,10,5}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> EoghanGhostweaver = std::make_shared<dndSim::npc>(dndSim::character("eoghanghostweaver", 12, {10,14,12,15,20,16}, true, {"int","wis"}, "wis", 12));
    std::shared_ptr<dndSim::npc> Executioner = std::make_shared<dndSim::npc>(dndSim::character("executioner", 20, {29,11,25,10,11,10}, false, {"str","con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> Gravekeeper = std::make_shared<dndSim::npc>(dndSim::character("gravekeeper", 13, {18,7,21,19,17,21}, false, {"con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> HazeHulk = std::make_shared<dndSim::npc>(dndSim::character("hazehulk", 4, {21,10,18,7,10,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> HedgeMage = std::make_shared<dndSim::npc>(dndSim::character("hedgemage", 1, {10,14,13,15,11,11}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> HypnoticEldritchBlossom = std::make_shared<dndSim::npc>(dndSim::character("hypnoticeldritchblossom", 1, {3,1,10,1,3,5}, false, {}, "str", 5));
    std::shared_ptr<dndSim::npc> Knight_CaptainTheodoreMarshal = std::make_shared<dndSim::npc>(dndSim::character("knight_captaintheodoremarshal", 15, {20,10,18,13,15,19}, true, {"wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> LivingDeepHaze = std::make_shared<dndSim::npc>(dndSim::character("livingdeephaze", 5, {14,20,14,5,10,5}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> LordCommanderEliasDrexel = std::make_shared<dndSim::npc>(dndSim::character("lordcommandereliasdrexel", 15, {18,15,18,15,16,11}, true, {"str","dex","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> LordoftheFeast = std::make_shared<dndSim::npc>(dndSim::character("lordofthefeast", 15, {18,18,18,11,18,13}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> LucretiaMathias = std::make_shared<dndSim::npc>(dndSim::character("lucretiamathias", 15, {8,10,10,19,24,19}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> OscarYoren = std::make_shared<dndSim::npc>(dndSim::character("oscaryoren", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> PaleMan = std::make_shared<dndSim::npc>(dndSim::character("paleman", 13, {10,15,17,20,15,12}, true, {"con","int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> ProteanAbomination = std::make_shared<dndSim::npc>(dndSim::character("proteanabomination", 6, {21,8,18,5,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> QueenofThieves = std::make_shared<dndSim::npc>(dndSim::character("queenofthieves", 15, {10,20,13,20,16,19}, true, {"dex","int"}, "int", 23));
    std::shared_ptr<dndSim::npc> RatPrince = std::make_shared<dndSim::npc>(dndSim::character("ratprince", 3, {12,19,13,9,15,9}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SaintGresha = std::make_shared<dndSim::npc>(dndSim::character("saintgresha", 6, {6,16,16,12,14,15}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Scoundrel = std::make_shared<dndSim::npc>(dndSim::character("scoundrel", 3, {10,17,12,14,10,15}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> UrbanRanger = std::make_shared<dndSim::npc>(dndSim::character("urbanranger", 3, {12,17,14,11,15,11}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> WalkingDeleriumGeode = std::make_shared<dndSim::npc>(dndSim::character("walkingdeleriumgeode", 5, {20,8,20,5,10,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> WarlockoftheRatGod = std::make_shared<dndSim::npc>(dndSim::character("warlockoftheratgod", 2, {7,14,13,13,11,15}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> MercenaryEnvoy = std::make_shared<dndSim::npc>(dndSim::character("mercenaryenvoy", 1, {15,15,15,10,12,9}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> TyreusIllusionist = std::make_shared<dndSim::npc>(dndSim::character("tyreusillusionist", 13, {10,16,14,20,15,16}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> ArchonoftheTriumvirate = std::make_shared<dndSim::npc>(dndSim::character("archonofthetriumvirate", 14, {20,15,19,15,21,18}, true, {"con","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> ArclightPhoenix = std::make_shared<dndSim::npc>(dndSim::character("arclightphoenix", 12, {15,22,17,5,12,7}, false, {"dex"}, "dex", 16));
    std::shared_ptr<dndSim::npc> BattleforceAngel = std::make_shared<dndSim::npc>(dndSim::character("battleforceangel", 5, {16,12,13,11,17,18}, false, {"wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Biomancer = std::make_shared<dndSim::npc>(dndSim::character("biomancer", 10, {10,15,14,20,14,15}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> BlistercoilWeird = std::make_shared<dndSim::npc>(dndSim::character("blistercoilweird", 4, {16,16,15,5,10,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> BloodDrinkerVampire = std::make_shared<dndSim::npc>(dndSim::character("blooddrinkervampire", 8, {16,18,17,16,13,19}, false, {"dex","con","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> BloodWitch = std::make_shared<dndSim::npc>(dndSim::character("bloodwitch", 7, {16,14,15,13,9,19}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> BloodfrayGiant = std::make_shared<dndSim::npc>(dndSim::character("bloodfraygiant", 6, {23,9,20,7,8,9}, false, {"str","con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Borborygmos = std::make_shared<dndSim::npc>(dndSim::character("borborygmos", 18, {24,11,24,8,17,16}, false, {"str","con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Category1Krasis = std::make_shared<dndSim::npc>(dndSim::character("category1krasis", 1, {16,15,14,2,13,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Category2Krasis = std::make_shared<dndSim::npc>(dndSim::character("category2krasis", 6, {18,14,16,2,13,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Category3Krasis = std::make_shared<dndSim::npc>(dndSim::character("category3krasis", 16, {23,12,21,2,13,8}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> ConclaveDryad = std::make_shared<dndSim::npc>(dndSim::character("conclavedryad", 9, {12,19,14,19,20,21}, true, {"int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> CosmotronicBlastseeker = std::make_shared<dndSim::npc>(dndSim::character("cosmotronicblastseeker", 4, {14,15,16,18,9,12}, true, {"dex","con"}, "int", 15));
    std::shared_ptr<dndSim::npc> CounterfluxBlastseeker = std::make_shared<dndSim::npc>(dndSim::character("counterfluxblastseeker", 2, {13,16,15,18,11,14}, true, {"con","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> DeathpactAngel = std::make_shared<dndSim::npc>(dndSim::character("deathpactangel", 14, {16,18,14,19,20,23}, true, {"int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> DevkarinLich = std::make_shared<dndSim::npc>(dndSim::character("devkarinlich", 14, {11,16,14,19,16,15}, true, {"con","int","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> DruidoftheOldWays = std::make_shared<dndSim::npc>(dndSim::character("druidoftheoldways", 7, {11,15,16,10,20,14}, true, {"dex","con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> Felidar = std::make_shared<dndSim::npc>(dndSim::character("felidar", 5, {19,16,17,10,17,14}, false, {"dex","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Firefist = std::make_shared<dndSim::npc>(dndSim::character("firefist", 7, {16,10,14,11,17,13}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> FiremaneAngel = std::make_shared<dndSim::npc>(dndSim::character("firemaneangel", 12, {22,15,17,12,14,23}, true, {"str","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> FluxBlastseeker = std::make_shared<dndSim::npc>(dndSim::character("fluxblastseeker", 5, {10,15,12,20,9,14}, true, {"dex","int"}, "int", 12));
    std::shared_ptr<dndSim::npc> Fluxcharger = std::make_shared<dndSim::npc>(dndSim::character("fluxcharger", 7, {15,18,15,6,10,7}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> FlyingHorror = std::make_shared<dndSim::npc>(dndSim::character("flyinghorror", 3, {9,20,12,2,15,16}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> GalvanicBlastseeker = std::make_shared<dndSim::npc>(dndSim::character("galvanicblastseeker", 5, {10,17,14,19,10,13}, true, {"dex"}, "int", 13));
    std::shared_ptr<dndSim::npc> GalvaniceWeird = std::make_shared<dndSim::npc>(dndSim::character("galvaniceweird", 1, {14,10,17,3,10,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Gloamwing = std::make_shared<dndSim::npc>(dndSim::character("gloamwing", 8, {20,16,17,2,11,6}, false, {"str","dex"}, "str", 16));
    std::shared_ptr<dndSim::npc> GolgariShaman = std::make_shared<dndSim::npc>(dndSim::character("golgarishaman", 5, {11,15,12,12,17,16}, true, {"con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> GuardianGiant = std::make_shared<dndSim::npc>(dndSim::character("guardiangiant", 8, {24,17,22,10,18,12}, false, {"dex","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> Horncaller = std::make_shared<dndSim::npc>(dndSim::character("horncaller", 1, {13,12,14,10,14,13}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> HybridBrute = std::make_shared<dndSim::npc>(dndSim::character("hybridbrute", 2, {18,11,15,8,11,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> HybridFlier = std::make_shared<dndSim::npc>(dndSim::character("hybridflier", 2, {12,16,14,11,10,11}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> HybridPoisoner = std::make_shared<dndSim::npc>(dndSim::character("hybridpoisoner", 1, {12,19,14,12,13,12}, false, {"dex","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> HybridShocker = std::make_shared<dndSim::npc>(dndSim::character("hybridshocker", 1, {13,14,14,10,12,9}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> IndenturedSpirit = std::make_shared<dndSim::npc>(dndSim::character("indenturedspirit", 1, {7,13,10,10,12,11}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> KraulDeathPriest = std::make_shared<dndSim::npc>(dndSim::character("krauldeathpriest", 4, {16,12,14,12,15,10}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Lawmage = std::make_shared<dndSim::npc>(dndSim::character("lawmage", 6, {13,12,14,17,14,13}, true, {"int","wis"}, "int", 15));
    std::shared_ptr<dndSim::npc> Lazav = std::make_shared<dndSim::npc>(dndSim::character("lazav", 17, {16,24,18,22,20,22}, true, {"dex","int","wis","cha"}, "int", 18));
    std::shared_ptr<dndSim::npc> MasterofCruelties = std::make_shared<dndSim::npc>(dndSim::character("masterofcruelties", 9, {18,17,16,19,16,21}, true, {"con","int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> MindDrinkerVampire = std::make_shared<dndSim::npc>(dndSim::character("minddrinkervampire", 4, {16,18,12,19,13,14}, true, {"dex","int","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> MindMage = std::make_shared<dndSim::npc>(dndSim::character("mindmage", 5, {10,14,10,20,15,16}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> NightveilSpecter = std::make_shared<dndSim::npc>(dndSim::character("nightveilspecter", 10, {18,19,16,6,17,11}, false, {"dex","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> NivixCyclops = std::make_shared<dndSim::npc>(dndSim::character("nivixcyclops", 8, {24,9,22,7,10,9}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> ObzedatGhost = std::make_shared<dndSim::npc>(dndSim::character("obzedatghost", 8, {10,10,13,18,20,17}, true, {"int","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> OrzhovGiant = std::make_shared<dndSim::npc>(dndSim::character("orzhovgiant", 6, {23,13,21,12,13,8}, false, {"dex","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> PrecognitiveMage = std::make_shared<dndSim::npc>(dndSim::character("precognitivemage", 3, {9,13,10,18,13,11}, true, {"int","wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> RakdosLampooner = std::make_shared<dndSim::npc>(dndSim::character("rakdoslampooner", 2, {11,12,13,12,9,18}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> RakdosPerformerBladeJuggler = std::make_shared<dndSim::npc>(dndSim::character("rakdosperformerbladejuggler", 1, {13,17,12,10,8,15}, false, {"dex","cha"}, "dex", 13));
    std::shared_ptr<dndSim::npc> RakdosPerformerFireEater = std::make_shared<dndSim::npc>(dndSim::character("rakdosperformerfireeater", 1, {13,17,12,10,8,15}, false, {"dex","cha"}, "dex", 13));
    std::shared_ptr<dndSim::npc> RakdosPerformerHigh_WireAcrobat = std::make_shared<dndSim::npc>(dndSim::character("rakdosperformerhigh_wireacrobat", 1, {13,17,12,10,8,15}, false, {"dex","cha"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Reckoner = std::make_shared<dndSim::npc>(dndSim::character("reckoner", 4, {16,12,15,15,12,10}, true, {}, "int", 18));
    std::shared_ptr<dndSim::npc> ShadowHorror = std::make_shared<dndSim::npc>(dndSim::character("shadowhorror", 9, {12,16,14,2,17,18}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SireofInsanity = std::make_shared<dndSim::npc>(dndSim::character("sireofinsanity", 12, {23,6,19,14,19,22}, true, {"con","int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> SkitteringHorror = std::make_shared<dndSim::npc>(dndSim::character("skitteringhorror", 15, {22,16,17,2,14,18}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SkyjekRoc = std::make_shared<dndSim::npc>(dndSim::character("skyjekroc", 2, {20,13,14,3,10,8}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Skyswimmer = std::make_shared<dndSim::npc>(dndSim::character("skyswimmer", 13, {23,15,16,7,12,6}, false, {"con"}, "str", 18));
    std::shared_ptr<dndSim::npc> SunderShaman = std::make_shared<dndSim::npc>(dndSim::character("sundershaman", 10, {23,15,21,10,12,9}, false, {"dex","con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> ThoughtSpy = std::make_shared<dndSim::npc>(dndSim::character("thoughtspy", 1, {11,14,10,16,13,14}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> Trostani = std::make_shared<dndSim::npc>(dndSim::character("trostani", 18, {19,14,20,16,30,25}, true, {"con","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> UndercityMedusa = std::make_shared<dndSim::npc>(dndSim::character("undercitymedusa", 6, {16,18,16,17,12,15}, true, {}, "int", 16));
    std::shared_ptr<dndSim::npc> Wurm = std::make_shared<dndSim::npc>(dndSim::character("wurm", 14, {24,10,22,3,12,4}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Zegana = std::make_shared<dndSim::npc>(dndSim::character("zegana", 16, {11,14,14,20,18,16}, true, {"int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> AbominableBeauty = std::make_shared<dndSim::npc>(dndSim::character("abominablebeauty", 11, {17,18,18,17,16,26}, false, {"dex","con","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> AccursedDefiler = std::make_shared<dndSim::npc>(dndSim::character("accurseddefiler", 4, {19,14,17,6,15,14}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> AdultCaveDragon = std::make_shared<dndSim::npc>(dndSim::character("adultcavedragon", 19, {27,12,25,12,14,16}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> AdultFlameDragon = std::make_shared<dndSim::npc>(dndSim::character("adultflamedragon", 16, {19,14,23,17,14,20}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultMithralDragon = std::make_shared<dndSim::npc>(dndSim::character("adultmithraldragon", 18, {12,22,21,18,19,18}, false, {"dex","con","wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> AdultSeaDragon = std::make_shared<dndSim::npc>(dndSim::character("adultseadragon", 18, {25,10,23,17,15,19}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultVoidDragon = std::make_shared<dndSim::npc>(dndSim::character("adultvoiddragon", 16, {24,10,25,16,13,21}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AdultWindDragon = std::make_shared<dndSim::npc>(dndSim::character("adultwinddragon", 16, {24,16,22,16,15,18}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Al_AeshmaGenie = std::make_shared<dndSim::npc>(dndSim::character("al_aeshmagenie", 9, {21,15,22,15,16,20}, true, {"dex","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Ala = std::make_shared<dndSim::npc>(dndSim::character("ala", 8, {20,16,18,10,16,8}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> AlehouseDrake = std::make_shared<dndSim::npc>(dndSim::character("alehousedrake", 1, {7,16,15,11,12,16}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Algorith = std::make_shared<dndSim::npc>(dndSim::character("algorith", 10, {21,14,19,13,16,18}, true, {"dex","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Amphiptere = std::make_shared<dndSim::npc>(dndSim::character("amphiptere", 3, {11,18,17,2,16,6}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> AncientTitan = std::make_shared<dndSim::npc>(dndSim::character("ancienttitan", 12, {27,13,22,16,16,20}, false, {"con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Angatra = std::make_shared<dndSim::npc>(dndSim::character("angatra", 6, {14,20,18,8,12,15}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> AnglerWorm = std::make_shared<dndSim::npc>(dndSim::character("anglerworm", 4, {14,5,16,3,14,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Annelidast = std::make_shared<dndSim::npc>(dndSim::character("annelidast", 12, {26,10,20,1,10,4}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Anubian = std::make_shared<dndSim::npc>(dndSim::character("anubian", 2, {12,16,12,10,12,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ApauPerapeDemon = std::make_shared<dndSim::npc>(dndSim::character("apauperapedemon", 6, {21,18,19,10,12,15}, false, {"dex","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> ArborealGrappler = std::make_shared<dndSim::npc>(dndSim::character("arborealgrappler", 4, {16,16,16,6,10,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ArcaneGuardian = std::make_shared<dndSim::npc>(dndSim::character("arcaneguardian", 8, {6,18,18,11,16,18}, true, {"dex","wis"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Arch_DevilIaAffrat = std::make_shared<dndSim::npc>(dndSim::character("arch_deviliaaffrat", 15, {3,21,16,20,18,23}, false, {"dex","con","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Aridni = std::make_shared<dndSim::npc>(dndSim::character("aridni", 5, {9,21,14,12,11,16}, true, {"dex"}, "cha", 15));
    std::shared_ptr<dndSim::npc> Arx = std::make_shared<dndSim::npc>(dndSim::character("arx", 9, {20,8,19,11,15,8}, false, {"str"}, "str", 17));
    std::shared_ptr<dndSim::npc> Asanbosam = std::make_shared<dndSim::npc>(dndSim::character("asanbosam", 5, {18,13,17,11,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> AshDrake = std::make_shared<dndSim::npc>(dndSim::character("ashdrake", 4, {14,15,16,9,15,10}, false, {"dex"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Ashwalker = std::make_shared<dndSim::npc>(dndSim::character("ashwalker", 1, {13,15,10,7,10,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> AutomataDevil = std::make_shared<dndSim::npc>(dndSim::character("automatadevil", 10, {24,17,20,11,14,19}, false, {"str","dex","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BabaYagasHorsemen = std::make_shared<dndSim::npc>(dndSim::character("babayagashorsemen", 11, {22,11,21,16,18,18}, true, {"dex","wis"}, "wis", 20));
    std::shared_ptr<dndSim::npc> Bagiennik = std::make_shared<dndSim::npc>(dndSim::character("bagiennik", 3, {16,18,16,9,16,11}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> BanditLord = std::make_shared<dndSim::npc>(dndSim::character("banditlord", 4, {16,15,14,14,11,14}, false, {"str","dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> BastetTempleCat = std::make_shared<dndSim::npc>(dndSim::character("bastettemplecat", 1, {8,19,12,12,16,18}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> BearKing = std::make_shared<dndSim::npc>(dndSim::character("bearking", 12, {21,10,20,12,18,16}, false, {"str","dex","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Bearfolk = std::make_shared<dndSim::npc>(dndSim::character("bearfolk", 3, {19,14,16,8,12,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> BeheadedVengefulSpirit = std::make_shared<dndSim::npc>(dndSim::character("beheadedvengefulspirit", 4, {7,13,11,10,10,19}, false, {"wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Behtu = std::make_shared<dndSim::npc>(dndSim::character("behtu", 2, {17,16,16,12,11,7}, false, {"dex"}, "str", 14));
    std::shared_ptr<dndSim::npc> Beli = std::make_shared<dndSim::npc>(dndSim::character("beli", 2, {11,16,12,8,11,14}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Bereginyas = std::make_shared<dndSim::npc>(dndSim::character("bereginyas", 4, {14,19,14,13,12,11}, false, {"dex"}, "dex", 14));
    std::shared_ptr<dndSim::npc> BerstucDemon = std::make_shared<dndSim::npc>(dndSim::character("berstucdemon", 11, {22,10,20,12,14,19}, false, {"str","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> BlackKnightCommander = std::make_shared<dndSim::npc>(dndSim::character("blackknightcommander", 5, {18,10,14,12,13,15}, false, {"dex","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Blemmyes = std::make_shared<dndSim::npc>(dndSim::character("blemmyes", 8, {20,13,20,7,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> BloodHag = std::make_shared<dndSim::npc>(dndSim::character("bloodhag", 11, {20,16,18,19,21,17}, true, {"dex","con","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Boloti = std::make_shared<dndSim::npc>(dndSim::character("boloti", 1, {12,20,14,13,12,11}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> BoneCollective = std::make_shared<dndSim::npc>(dndSim::character("bonecollective", 8, {10,20,18,14,10,16}, true, {"dex"}, "cha", 17));
    std::shared_ptr<dndSim::npc> BoneSwarm = std::make_shared<dndSim::npc>(dndSim::character("boneswarm", 10, {22,18,10,9,15,20}, false, {"dex","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> BonepowderGhoul = std::make_shared<dndSim::npc>(dndSim::character("bonepowderghoul", 12, {10,20,18,19,15,18}, true, {"dex","con","wis","cha"}, "int", 18));
    std::shared_ptr<dndSim::npc> Bouda = std::make_shared<dndSim::npc>(dndSim::character("bouda", 5, {19,14,18,10,12,15}, false, {"dex","con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Broodiken = std::make_shared<dndSim::npc>(dndSim::character("broodiken", 1, {8,14,16,2,10,6}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Bukavac = std::make_shared<dndSim::npc>(dndSim::character("bukavac", 9, {20,17,18,7,15,12}, false, {"dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Buraq = std::make_shared<dndSim::npc>(dndSim::character("buraq", 11, {15,18,20,18,18,20}, true, {"con","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Cactid = std::make_shared<dndSim::npc>(dndSim::character("cactid", 3, {16,8,18,5,10,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Cambium = std::make_shared<dndSim::npc>(dndSim::character("cambium", 14, {21,16,23,17,16,18}, true, {"dex","con","int","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> CarrionBeetle = std::make_shared<dndSim::npc>(dndSim::character("carrionbeetle", 4, {19,12,17,1,13,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CausticCharger = std::make_shared<dndSim::npc>(dndSim::character("causticcharger", 7, {19,11,16,4,10,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CaveDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("cavedragonwyrmling", 2, {19,12,17,8,10,12}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> CavelightMoss = std::make_shared<dndSim::npc>(dndSim::character("cavelightmoss", 4, {20,10,18,1,13,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> ChainedAngel = std::make_shared<dndSim::npc>(dndSim::character("chainedangel", 8, {18,16,12,12,18,20}, false, {"dex","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Chelicerae = std::make_shared<dndSim::npc>(dndSim::character("chelicerae", 7, {22,17,17,18,15,14}, true, {"dex","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> Chernomoi = std::make_shared<dndSim::npc>(dndSim::character("chernomoi", 1, {9,18,18,12,11,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> ChildoftheBriar = std::make_shared<dndSim::npc>(dndSim::character("childofthebriar", 1, {6,17,11,13,10,14}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ChortDevil = std::make_shared<dndSim::npc>(dndSim::character("chortdevil", 12, {24,20,26,18,20,20}, true, {"str","dex","con","int","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Chronalmental = std::make_shared<dndSim::npc>(dndSim::character("chronalmental", 8, {14,20,19,9,13,6}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> Citrullus = std::make_shared<dndSim::npc>(dndSim::character("citrullus", 3, {18,8,16,3,10,1}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CityWatchCaptain = std::make_shared<dndSim::npc>(dndSim::character("citywatchcaptain", 4, {13,16,14,10,11,13}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> ClockworkAbomination = std::make_shared<dndSim::npc>(dndSim::character("clockworkabomination", 5, {21,12,18,10,10,12}, false, {"dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> ClockworkBeetleSwarm = std::make_shared<dndSim::npc>(dndSim::character("clockworkbeetleswarm", 3, {8,16,12,1,12,7}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> ClockworkHound = std::make_shared<dndSim::npc>(dndSim::character("clockworkhound", 2, {16,15,14,1,10,1}, false, {"dex","con"}, "str", 12));
    std::shared_ptr<dndSim::npc> ClockworkHuntsman = std::make_shared<dndSim::npc>(dndSim::character("clockworkhuntsman", 3, {17,14,12,4,10,1}, false, {"str","dex"}, "str", 14));
    std::shared_ptr<dndSim::npc> ClockworkMyrmidon = std::make_shared<dndSim::npc>(dndSim::character("clockworkmyrmidon", 6, {20,14,16,6,10,1}, false, {"str","dex"}, "str", 16));
    std::shared_ptr<dndSim::npc> ClockworkWeavingSpider = std::make_shared<dndSim::npc>(dndSim::character("clockworkweavingspider", 1, {10,16,10,9,8,8}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Cobbleswarm = std::make_shared<dndSim::npc>(dndSim::character("cobbleswarm", 2, {12,11,11,5,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CoralDrake = std::make_shared<dndSim::npc>(dndSim::character("coraldrake", 7, {19,17,18,10,13,10}, false, {"dex"}, "str", 16));
    std::shared_ptr<dndSim::npc> CorpseMound = std::make_shared<dndSim::npc>(dndSim::character("corpsemound", 11, {24,11,21,6,10,8}, false, {"con","int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> CorruptedUshabti = std::make_shared<dndSim::npc>(dndSim::character("corruptedushabti", 5, {17,14,15,6,10,5}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> CorruptingOoze = std::make_shared<dndSim::npc>(dndSim::character("corruptingooze", 5, {16,10,22,4,2,1}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> CrimsonDrake = std::make_shared<dndSim::npc>(dndSim::character("crimsondrake", 1, {10,14,14,8,9,14}, false, {"dex"}, "dex", 14));
    std::shared_ptr<dndSim::npc> CrystallineDevil = std::make_shared<dndSim::npc>(dndSim::character("crystallinedevil", 6, {18,12,18,14,13,15}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Darakhul = std::make_shared<dndSim::npc>(dndSim::character("darakhul", 3, {16,17,14,14,12,12}, false, {}, "dex", 18));
    std::shared_ptr<dndSim::npc> Dau = std::make_shared<dndSim::npc>(dndSim::character("dau", 4, {7,17,14,14,17,16}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> DeathButterflySwarm = std::make_shared<dndSim::npc>(dndSim::character("deathbutterflyswarm", 4, {1,14,10,1,12,12}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> DeathcapMyconid = std::make_shared<dndSim::npc>(dndSim::character("deathcapmyconid", 4, {14,10,16,10,11,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Deathwisp = std::make_shared<dndSim::npc>(dndSim::character("deathwisp", 7, {6,20,16,18,16,20}, false, {"dex","con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> DeepDrake = std::make_shared<dndSim::npc>(dndSim::character("deepdrake", 9, {21,19,14,11,14,12}, false, {"dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> DeepOne = std::make_shared<dndSim::npc>(dndSim::character("deepone", 2, {16,12,14,10,8,12}, false, {"str","con","cha"}, "str", 13));
    std::shared_ptr<dndSim::npc> DeepOneArchimandrite = std::make_shared<dndSim::npc>(dndSim::character("deeponearchimandrite", 8, {20,16,17,12,17,19}, true, {"dex","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> DeepOnePriest = std::make_shared<dndSim::npc>(dndSim::character("deeponepriest", 4, {18,14,16,12,12,16}, true, {"con","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> DegenerateTitan = std::make_shared<dndSim::npc>(dndSim::character("degeneratetitan", 8, {21,6,20,6,12,7}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> DemonLordAkyishigal = std::make_shared<dndSim::npc>(dndSim::character("demonlordakyishigal", 12, {21,17,22,19,14,20}, true, {"str","dex","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> DerroFetalSavant = std::make_shared<dndSim::npc>(dndSim::character("derrofetalsavant", 4, {5,12,10,8,12,20}, false, {"wis","cha"}, "dex", 11));
    std::shared_ptr<dndSim::npc> DerroShadowAntipaladin = std::make_shared<dndSim::npc>(dndSim::character("derroshadowantipaladin", 5, {11,18,18,11,5,14}, false, {"str","wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> DesertGiant = std::make_shared<dndSim::npc>(dndSim::character("desertgiant", 9, {27,10,22,13,18,15}, false, {"str","con","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> DevilboundGnome = std::make_shared<dndSim::npc>(dndSim::character("devilboundgnome", 9, {10,14,15,16,12,21}, true, {"con","int","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Dissimortuum = std::make_shared<dndSim::npc>(dndSim::character("dissimortuum", 7, {14,10,16,8,11,18}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Dogmole = std::make_shared<dndSim::npc>(dndSim::character("dogmole", 1, {14,17,15,2,12,10}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> DogmoleJuggernaut = std::make_shared<dndSim::npc>(dndSim::character("dogmolejuggernaut", 5, {21,14,20,2,10,2}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Domovoi = std::make_shared<dndSim::npc>(dndSim::character("domovoi", 4, {19,13,18,6,10,16}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> Doppelrat = std::make_shared<dndSim::npc>(dndSim::character("doppelrat", 2, {2,17,14,2,13,2}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Dorreq = std::make_shared<dndSim::npc>(dndSim::character("dorreq", 4, {19,19,13,11,8,10}, false, {"dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> DragonEel = std::make_shared<dndSim::npc>(dndSim::character("dragoneel", 12, {26,12,20,14,13,14}, false, {"str","dex","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> DragonleafTree = std::make_shared<dndSim::npc>(dndSim::character("dragonleaftree", 8, {16,14,19,5,12,17}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Drakon = std::make_shared<dndSim::npc>(dndSim::character("drakon", 5, {14,19,15,2,12,10}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> DrownedMaiden = std::make_shared<dndSim::npc>(dndSim::character("drownedmaiden", 5, {15,16,10,10,12,18}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Dullahan = std::make_shared<dndSim::npc>(dndSim::character("dullahan", 11, {19,18,20,13,15,17}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> DuneMimic = std::make_shared<dndSim::npc>(dndSim::character("dunemimic", 8, {20,8,18,9,13,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> DuskthornDryad = std::make_shared<dndSim::npc>(dndSim::character("duskthorndryad", 3, {10,20,13,14,15,24}, true, {"con","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> DwarvenRingmage = std::make_shared<dndSim::npc>(dndSim::character("dwarvenringmage", 7, {10,14,15,18,12,9}, true, {"con","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> Eala = std::make_shared<dndSim::npc>(dndSim::character("eala", 2, {10,16,12,2,12,16}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> EaterofDust = std::make_shared<dndSim::npc>(dndSim::character("eaterofdust", 9, {20,14,20,10,15,17}, false, {"str","con","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Edimmu = std::make_shared<dndSim::npc>(dndSim::character("edimmu", 4, {1,19,16,12,18,13}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> EelHound = std::make_shared<dndSim::npc>(dndSim::character("eelhound", 2, {19,16,13,6,13,16}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Einherjar = std::make_shared<dndSim::npc>(dndSim::character("einherjar", 7, {19,16,19,10,14,11}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> ElderShadowDrake = std::make_shared<dndSim::npc>(dndSim::character("eldershadowdrake", 7, {22,13,18,8,9,13}, false, {"dex","con","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> ElementalLocus = std::make_shared<dndSim::npc>(dndSim::character("elementallocus", 17, {28,1,18,10,11,11}, false, {"int","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> ElvishVeteranArcher = std::make_shared<dndSim::npc>(dndSim::character("elvishveteranarcher", 3, {11,18,12,11,13,11}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> EmeraldEye = std::make_shared<dndSim::npc>(dndSim::character("emeraldeye", 1, {3,15,14,18,12,16}, false, {"dex","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> EmeraldOrderCultLeader = std::make_shared<dndSim::npc>(dndSim::character("emeraldordercultleader", 8, {14,10,14,15,20,15}, true, {"int","wis","cha"}, "wis", 15));
    std::shared_ptr<dndSim::npc> EonicDrifter = std::make_shared<dndSim::npc>(dndSim::character("eonicdrifter", 1, {9,14,14,18,11,13}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ErinaDefender = std::make_shared<dndSim::npc>(dndSim::character("erinadefender", 1, {11,14,14,13,12,11}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> EyeGolem = std::make_shared<dndSim::npc>(dndSim::character("eyegolem", 11, {22,9,20,5,11,1}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> FarDarrig = std::make_shared<dndSim::npc>(dndSim::character("fardarrig", 3, {17,16,17,11,15,17}, false, {"cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> FateEater = std::make_shared<dndSim::npc>(dndSim::character("fateeater", 6, {18,12,14,18,16,9}, false, {"con"}, "str", 16));
    std::shared_ptr<dndSim::npc> FearSmith = std::make_shared<dndSim::npc>(dndSim::character("fearsmith", 10, {11,17,14,11,15,18}, true, {"wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Fellforged = std::make_shared<dndSim::npc>(dndSim::character("fellforged", 5, {14,12,17,12,14,15}, false, {"str","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Fext = std::make_shared<dndSim::npc>(dndSim::character("fext", 6, {14,16,12,14,12,18}, false, {"dex","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> FeywardTree = std::make_shared<dndSim::npc>(dndSim::character("feywardtree", 8, {25,10,18,3,11,6}, false, {"dex","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> FideleAngel = std::make_shared<dndSim::npc>(dndSim::character("fideleangel", 5, {20,18,14,14,16,18}, true, {"dex","con","int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Firebird = std::make_shared<dndSim::npc>(dndSim::character("firebird", 4, {12,19,14,16,15,21}, false, {"wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Firegeist = std::make_shared<dndSim::npc>(dndSim::character("firegeist", 2, {7,18,14,4,16,6}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> FlabGiant = std::make_shared<dndSim::npc>(dndSim::character("flabgiant", 4, {20,6,16,9,13,8}, false, {"con"}, "str", 14));
    std::shared_ptr<dndSim::npc> FlameDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("flamedragonwyrmling", 2, {12,14,15,13,12,16}, false, {"dex","con","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Flutterflesh = std::make_shared<dndSim::npc>(dndSim::character("flutterflesh", 12, {11,18,17,12,16,10}, false, {"str","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> FolkofLeng = std::make_shared<dndSim::npc>(dndSim::character("folkofleng", 2, {12,15,18,14,16,19}, true, {"dex","wis"}, "cha", 14));
    std::shared_ptr<dndSim::npc> ForestMarauder = std::make_shared<dndSim::npc>(dndSim::character("forestmarauder", 4, {21,10,18,6,10,7}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Frostveil = std::make_shared<dndSim::npc>(dndSim::character("frostveil", 4, {20,20,16,1,11,1}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Gbahali = std::make_shared<dndSim::npc>(dndSim::character("gbahali", 6, {19,14,19,2,13,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GearforgedTemplar = std::make_shared<dndSim::npc>(dndSim::character("gearforgedtemplar", 6, {19,9,15,12,16,10}, false, {"dex","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Gerridae = std::make_shared<dndSim::npc>(dndSim::character("gerridae", 1, {16,15,17,2,13,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GhostKnight = std::make_shared<dndSim::npc>(dndSim::character("ghostknight", 7, {17,15,14,8,10,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> GhostwalkSpider = std::make_shared<dndSim::npc>(dndSim::character("ghostwalkspider", 9, {15,20,17,9,14,8}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> GiantAnt = std::make_shared<dndSim::npc>(dndSim::character("giantant", 2, {15,13,15,1,9,2}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantAntQueen = std::make_shared<dndSim::npc>(dndSim::character("giantantqueen", 5, {17,13,16,2,11,4}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GildedDevil = std::make_shared<dndSim::npc>(dndSim::character("gildeddevil", 7, {20,15,17,15,18,17}, true, {"con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> GlassGator = std::make_shared<dndSim::npc>(dndSim::character("glassgator", 1, {15,14,12,4,10,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Gnarljak = std::make_shared<dndSim::npc>(dndSim::character("gnarljak", 6, {13,21,15,2,14,1}, false, {"str"}, "dex", 16));
    std::shared_ptr<dndSim::npc> GnollHavocRunner = std::make_shared<dndSim::npc>(dndSim::character("gnollhavocrunner", 3, {16,14,14,8,12,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Goat_Man = std::make_shared<dndSim::npc>(dndSim::character("goat_man", 3, {19,14,14,10,13,8}, false, {"dex"}, "str", 14));
    std::shared_ptr<dndSim::npc> GrayThirster = std::make_shared<dndSim::npc>(dndSim::character("graythirster", 2, {12,16,15,6,12,14}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GreaterDeathButterflySwarm = std::make_shared<dndSim::npc>(dndSim::character("greaterdeathbutterflyswarm", 6, {1,18,10,1,15,12}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Greyfur = std::make_shared<dndSim::npc>(dndSim::character("greyfur", 3, {9,16,12,16,12,10}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> GrimJester = std::make_shared<dndSim::npc>(dndSim::character("grimjester", 11, {14,22,18,16,16,20}, true, {"dex","con","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Gug = std::make_shared<dndSim::npc>(dndSim::character("gug", 12, {24,10,21,10,8,14}, false, {"str","dex","con","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Gypsosphinx = std::make_shared<dndSim::npc>(dndSim::character("gypsosphinx", 14, {20,14,18,18,18,18}, true, {}, "int", 17));
    std::shared_ptr<dndSim::npc> Haugbui = std::make_shared<dndSim::npc>(dndSim::character("haugbui", 13, {18,20,18,15,20,16}, true, {"dex","con","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> HeraldofBlood = std::make_shared<dndSim::npc>(dndSim::character("heraldofblood", 12, {22,12,20,14,17,16}, false, {"str","con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> HeraldofDarkness = std::make_shared<dndSim::npc>(dndSim::character("heraldofdarkness", 7, {20,14,20,12,15,19}, false, {"str","con","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> HoardGolem = std::make_shared<dndSim::npc>(dndSim::character("hoardgolem", 12, {22,15,20,3,11,1}, false, {"con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Horakh = std::make_shared<dndSim::npc>(dndSim::character("horakh", 9, {18,19,19,5,15,10}, false, {"dex"}, "dex", 17));
    std::shared_ptr<dndSim::npc> HoundoftheNight = std::make_shared<dndSim::npc>(dndSim::character("houndofthenight", 5, {20,16,14,7,14,10}, false, {"dex","con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Hraesvelgr = std::make_shared<dndSim::npc>(dndSim::character("hraesvelgr", 19, {25,10,20,16,17,20}, false, {"dex","int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> HulkingWhelp = std::make_shared<dndSim::npc>(dndSim::character("hulkingwhelp", 5, {21,10,18,7,14,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Hundun = std::make_shared<dndSim::npc>(dndSim::character("hundun", 12, {20,14,16,4,20,18}, true, {"con","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> IceMaiden = std::make_shared<dndSim::npc>(dndSim::character("icemaiden", 6, {12,17,15,19,13,20}, false, {"con","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> IdolicDeity = std::make_shared<dndSim::npc>(dndSim::character("idolicdeity", 8, {14,20,18,10,11,20}, false, {"wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> ImperialGhoul = std::make_shared<dndSim::npc>(dndSim::character("imperialghoul", 4, {16,14,12,13,14,14}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> InkDevil = std::make_shared<dndSim::npc>(dndSim::character("inkdevil", 2, {12,18,12,20,8,18}, true, {"dex"}, "int", 14));
    std::shared_ptr<dndSim::npc> IronGhoul = std::make_shared<dndSim::npc>(dndSim::character("ironghoul", 5, {18,16,14,14,14,14}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Isonade = std::make_shared<dndSim::npc>(dndSim::character("isonade", 14, {30,14,26,6,18,8}, false, {"str","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> JbaFofiSpider = std::make_shared<dndSim::npc>(dndSim::character("jbafofispider", 3, {17,17,15,4,13,6}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Jaculus = std::make_shared<dndSim::npc>(dndSim::character("jaculus", 3, {14,18,17,13,13,13}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Kikimora = std::make_shared<dndSim::npc>(dndSim::character("kikimora", 5, {13,18,15,12,16,21}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> KishiDemon = std::make_shared<dndSim::npc>(dndSim::character("kishidemon", 8, {19,20,19,15,11,22}, true, {"dex","con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> KoboldAlchemist = std::make_shared<dndSim::npc>(dndSim::character("koboldalchemist", 2, {7,16,15,16,9,8}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> KoboldChieftain = std::make_shared<dndSim::npc>(dndSim::character("koboldchieftain", 5, {18,14,14,11,13,14}, false, {"dex","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> KoboldTrapsmith = std::make_shared<dndSim::npc>(dndSim::character("koboldtrapsmith", 2, {7,16,12,16,13,8}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Kongamato = std::make_shared<dndSim::npc>(dndSim::character("kongamato", 6, {19,18,14,2,10,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> KoralkDevil = std::make_shared<dndSim::npc>(dndSim::character("koralkdevil", 11, {20,13,17,10,11,13}, false, {"con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> KotBayun = std::make_shared<dndSim::npc>(dndSim::character("kotbayun", 3, {16,16,13,12,16,17}, false, {"dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> KrakeSpawn = std::make_shared<dndSim::npc>(dndSim::character("krakespawn", 14, {24,12,22,17,15,18}, false, {"str","con","int","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> LakeTroll = std::make_shared<dndSim::npc>(dndSim::character("laketroll", 7, {22,13,20,8,10,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Leshy = std::make_shared<dndSim::npc>(dndSim::character("leshy", 1, {16,12,14,14,15,16}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> LichHound = std::make_shared<dndSim::npc>(dndSim::character("lichhound", 4, {10,18,18,6,10,16}, false, {"wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Likho = std::make_shared<dndSim::npc>(dndSim::character("likho", 5, {16,18,16,13,16,19}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Lindwurm = std::make_shared<dndSim::npc>(dndSim::character("lindwurm", 6, {18,20,16,6,12,8}, false, {"str","dex","con"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Liosalfar = std::make_shared<dndSim::npc>(dndSim::character("liosalfar", 10, {10,25,10,18,18,12}, false, {"con","int","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> LordoftheHunt = std::make_shared<dndSim::npc>(dndSim::character("lordofthehunt", 18, {21,18,19,14,18,15}, false, {"str","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Lorelei = std::make_shared<dndSim::npc>(dndSim::character("lorelei", 5, {10,21,18,16,16,21}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Loxoda = std::make_shared<dndSim::npc>(dndSim::character("loxoda", 6, {19,12,19,12,14,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> LunarDevil = std::make_shared<dndSim::npc>(dndSim::character("lunardevil", 8, {21,21,20,16,15,18}, true, {"str","dex","con","wis"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Mahoru = std::make_shared<dndSim::npc>(dndSim::character("mahoru", 3, {18,19,14,3,12,7}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> MalakbelDemon = std::make_shared<dndSim::npc>(dndSim::character("malakbeldemon", 9, {14,17,19,13,16,20}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Mallqui = std::make_shared<dndSim::npc>(dndSim::character("mallqui", 8, {16,9,16,11,18,14}, true, {"int","cha"}, "wis", 14));
    std::shared_ptr<dndSim::npc> Malphas = std::make_shared<dndSim::npc>(dndSim::character("malphas", 6, {19,19,16,14,13,18}, false, {"dex","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Mamura = std::make_shared<dndSim::npc>(dndSim::character("mamura", 6, {8,18,19,17,11,16}, false, {"dex","con","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> MaskWight = std::make_shared<dndSim::npc>(dndSim::character("maskwight", 13, {22,18,24,15,16,18}, false, {"str","dex","con","int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Mavka = std::make_shared<dndSim::npc>(dndSim::character("mavka", 12, {20,15,18,13,13,18}, true, {"str","dex","con","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> MbieluDinosaur = std::make_shared<dndSim::npc>(dndSim::character("mbieludinosaur", 3, {19,14,16,2,12,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Mi_go = std::make_shared<dndSim::npc>(dndSim::character("mi_go", 5, {16,19,21,25,15,13}, false, {"str","con","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Millitaur = std::make_shared<dndSim::npc>(dndSim::character("millitaur", 3, {17,14,16,8,16,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MindrotThrall = std::make_shared<dndSim::npc>(dndSim::character("mindrotthrall", 3, {15,14,17,11,14,6}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> Mirager = std::make_shared<dndSim::npc>(dndSim::character("mirager", 3, {12,16,14,10,14,19}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> MirrorHag = std::make_shared<dndSim::npc>(dndSim::character("mirrorhag", 6, {15,16,22,12,14,19}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> MithralDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("mithraldragonwyrmling", 1, {12,14,13,14,15,14}, false, {"dex","con","wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Mngwa = std::make_shared<dndSim::npc>(dndSim::character("mngwa", 4, {19,17,15,11,17,17}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> MonolithChampion = std::make_shared<dndSim::npc>(dndSim::character("monolithchampion", 8, {19,12,16,10,10,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> MonolithFootman = std::make_shared<dndSim::npc>(dndSim::character("monolithfootman", 3, {15,12,14,10,10,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MoonlitKing = std::make_shared<dndSim::npc>(dndSim::character("moonlitking", 17, {16,20,18,20,18,20}, true, {"con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> MordantSnare = std::make_shared<dndSim::npc>(dndSim::character("mordantsnare", 15, {23,16,21,15,14,6}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> MossLurker = std::make_shared<dndSim::npc>(dndSim::character("mosslurker", 1, {14,14,12,12,10,10}, false, {"str","dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> Myling = std::make_shared<dndSim::npc>(dndSim::character("myling", 2, {10,16,12,10,12,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Naina = std::make_shared<dndSim::npc>(dndSim::character("naina", 11, {20,16,21,15,18,18}, true, {"dex","con","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Necrohydra = std::make_shared<dndSim::npc>(dndSim::character("necrohydra", 9, {20,6,20,3,10,7}, false, {"wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> NgobouDinosaur = std::make_shared<dndSim::npc>(dndSim::character("ngoboudinosaur", 5, {20,9,16,2,12,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Nichny = std::make_shared<dndSim::npc>(dndSim::character("nichny", 6, {17,19,17,18,18,19}, false, {"dex"}, "dex", 17));
    std::shared_ptr<dndSim::npc> NightScorpion = std::make_shared<dndSim::npc>(dndSim::character("nightscorpion", 3, {15,14,14,1,9,3}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Nightgarm = std::make_shared<dndSim::npc>(dndSim::character("nightgarm", 6, {20,14,18,10,15,16}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> NihilethAboleth = std::make_shared<dndSim::npc>(dndSim::character("nihilethaboleth", 13, {21,9,15,18,15,18}, false, {"con","int","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> NihilethicDominator = std::make_shared<dndSim::npc>(dndSim::character("nihilethicdominator", 5, {16,8,16,3,6,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> NihilethicZombie = std::make_shared<dndSim::npc>(dndSim::character("nihilethiczombie", 1, {13,6,16,3,6,5}, false, {"wis"}, "str", 8));
    std::shared_ptr<dndSim::npc> NkosiPridelord = std::make_shared<dndSim::npc>(dndSim::character("nkosipridelord", 4, {18,18,12,10,10,14}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Noctiny = std::make_shared<dndSim::npc>(dndSim::character("noctiny", 2, {16,13,14,10,11,16}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> OculoSwarm = std::make_shared<dndSim::npc>(dndSim::character("oculoswarm", 4, {10,20,14,8,15,17}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> OgreCorruptedChieftain = std::make_shared<dndSim::npc>(dndSim::character("ogrecorruptedchieftain", 7, {23,8,18,5,7,12}, false, {"con","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Oozasis = std::make_shared<dndSim::npc>(dndSim::character("oozasis", 9, {18,5,20,8,20,13}, false, {"int","wis","cha"}, "str", 7));
    std::shared_ptr<dndSim::npc> OrobasDevil = std::make_shared<dndSim::npc>(dndSim::character("orobasdevil", 14, {26,14,28,23,26,21}, true, {"str","dex","con","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> Ostinato = std::make_shared<dndSim::npc>(dndSim::character("ostinato", 4, {1,20,15,5,12,17}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> OwlHarpy = std::make_shared<dndSim::npc>(dndSim::character("owlharpy", 5, {12,17,16,11,14,18}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> PactVampire = std::make_shared<dndSim::npc>(dndSim::character("pactvampire", 15, {22,16,22,17,15,20}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> PaperDrake = std::make_shared<dndSim::npc>(dndSim::character("paperdrake", 2, {7,17,16,10,12,13}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Planewatcher = std::make_shared<dndSim::npc>(dndSim::character("planewatcher", 10, {18,18,18,17,18,20}, false, {"wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Pombero = std::make_shared<dndSim::npc>(dndSim::character("pombero", 3, {17,16,16,8,10,14}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> PossessedPillar = std::make_shared<dndSim::npc>(dndSim::character("possessedpillar", 7, {20,8,19,3,11,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> PsoglavDemon = std::make_shared<dndSim::npc>(dndSim::character("psoglavdemon", 7, {21,23,20,16,19,18}, false, {"dex","con","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> PutridHaunt = std::make_shared<dndSim::npc>(dndSim::character("putridhaunt", 2, {17,8,13,3,11,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> QueenofWitches = std::make_shared<dndSim::npc>(dndSim::character("queenofwitches", 17, {22,10,19,16,18,22}, true, {"dex","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> QuicksilverSiegeOrb = std::make_shared<dndSim::npc>(dndSim::character("quicksilversiegeorb", 5, {12,21,14,5,14,7}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Qwyllion = std::make_shared<dndSim::npc>(dndSim::character("qwyllion", 8, {12,20,19,12,13,16}, false, {"dex","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> RatKing = std::make_shared<dndSim::npc>(dndSim::character("ratking", 5, {6,16,18,11,15,16}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Ratatosk = std::make_shared<dndSim::npc>(dndSim::character("ratatosk", 4, {4,18,12,17,10,18}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> RatfolkRogue = std::make_shared<dndSim::npc>(dndSim::character("ratfolkrogue", 1, {7,16,12,14,10,10}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Ravenala = std::make_shared<dndSim::npc>(dndSim::character("ravenala", 5, {20,10,20,12,16,12}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> RavenfolkDoomCroaker = std::make_shared<dndSim::npc>(dndSim::character("ravenfolkdoomcroaker", 5, {10,14,12,12,18,14}, false, {"con","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> RavenfolkWarrior = std::make_shared<dndSim::npc>(dndSim::character("ravenfolkwarrior", 3, {12,16,14,10,15,10}, false, {"dex","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> RedHag = std::make_shared<dndSim::npc>(dndSim::character("redhag", 7, {19,16,18,18,21,15}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> RiftSwine = std::make_shared<dndSim::npc>(dndSim::character("riftswine", 5, {18,10,17,4,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> RimeWorm = std::make_shared<dndSim::npc>(dndSim::character("rimeworm", 6, {20,14,19,6,14,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> RimeWormGrub = std::make_shared<dndSim::npc>(dndSim::character("rimewormgrub", 1, {16,12,16,4,12,3}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> RisenReaver = std::make_shared<dndSim::npc>(dndSim::character("risenreaver", 7, {19,16,20,9,7,6}, false, {"dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> RiverKing = std::make_shared<dndSim::npc>(dndSim::character("riverking", 16, {21,17,20,14,13,17}, true, {"dex","con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> RoachlingLord = std::make_shared<dndSim::npc>(dndSim::character("roachlinglord", 2, {10,16,12,10,10,10}, false, {"dex","con"}, "dex", 15));
    std::shared_ptr<dndSim::npc> RottingWind = std::make_shared<dndSim::npc>(dndSim::character("rottingwind", 6, {14,20,16,7,12,10}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> RubezahlDemon = std::make_shared<dndSim::npc>(dndSim::character("rubezahldemon", 10, {20,15,14,11,12,18}, true, {"dex","con","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> RustDrake = std::make_shared<dndSim::npc>(dndSim::character("rustdrake", 8, {20,15,19,12,8,8}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SaltDevil = std::make_shared<dndSim::npc>(dndSim::character("saltdevil", 6, {18,13,18,13,14,15}, false, {"dex","con","cha"}, "str", 13));
    std::shared_ptr<dndSim::npc> SaltGolem = std::make_shared<dndSim::npc>(dndSim::character("saltgolem", 10, {20,9,20,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SandHag = std::make_shared<dndSim::npc>(dndSim::character("sandhag", 6, {18,15,16,16,14,16}, true, {}, "int", 17));
    std::shared_ptr<dndSim::npc> SandSilhouette = std::make_shared<dndSim::npc>(dndSim::character("sandsilhouette", 6, {18,12,17,7,12,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SandSpider = std::make_shared<dndSim::npc>(dndSim::character("sandspider", 7, {20,17,14,4,12,4}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Sandman = std::make_shared<dndSim::npc>(dndSim::character("sandman", 5, {11,19,16,13,14,19}, false, {"wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Sandwyrm = std::make_shared<dndSim::npc>(dndSim::character("sandwyrm", 6, {20,12,18,5,13,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SapDemon = std::make_shared<dndSim::npc>(dndSim::character("sapdemon", 4, {14,6,12,7,14,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SarcophagusSlime = std::make_shared<dndSim::npc>(dndSim::character("sarcophagusslime", 5, {14,12,18,3,12,12}, false, {"wis","cha"}, "str", 11));
    std::shared_ptr<dndSim::npc> SathaqWorm = std::make_shared<dndSim::npc>(dndSim::character("sathaqworm", 10, {22,6,20,5,12,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Savager = std::make_shared<dndSim::npc>(dndSim::character("savager", 8, {22,14,21,2,10,13}, false, {"dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> Scheznyki = std::make_shared<dndSim::npc>(dndSim::character("scheznyki", 6, {19,15,18,15,16,16}, true, {"str","con"}, "wis", 16));
    std::shared_ptr<dndSim::npc> SeaDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("seadragonwyrmling", 3, {17,10,15,13,11,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Selang = std::make_shared<dndSim::npc>(dndSim::character("selang", 4, {18,15,18,12,14,19}, false, {"dex","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Serpopard = std::make_shared<dndSim::npc>(dndSim::character("serpopard", 4, {17,16,16,2,12,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Shadhavar = std::make_shared<dndSim::npc>(dndSim::character("shadhavar", 2, {14,15,14,8,10,16}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> ShadowBeast = std::make_shared<dndSim::npc>(dndSim::character("shadowbeast", 7, {6,20,17,14,14,19}, false, {"con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ShadowFeyDuelist = std::make_shared<dndSim::npc>(dndSim::character("shadowfeyduelist", 6, {13,20,14,13,12,16}, false, {"dex","con","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> ShadowFeyEnchantress = std::make_shared<dndSim::npc>(dndSim::character("shadowfeyenchantress", 7, {10,15,14,12,17,18}, true, {"dex","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> ShadowFeyForestHunter = std::make_shared<dndSim::npc>(dndSim::character("shadowfeyforesthunter", 5, {12,18,12,11,12,16}, false, {"dex","con","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ShadowFeyGuardian = std::make_shared<dndSim::npc>(dndSim::character("shadowfeyguardian", 4, {18,14,16,6,14,8}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> SharkjawSkeleton = std::make_shared<dndSim::npc>(dndSim::character("sharkjawskeleton", 1, {16,10,15,6,8,4}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Shellycoat = std::make_shared<dndSim::npc>(dndSim::character("shellycoat", 2, {17,16,16,13,9,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Shoggoth = std::make_shared<dndSim::npc>(dndSim::character("shoggoth", 19, {26,14,28,12,20,13}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SkeinWitch = std::make_shared<dndSim::npc>(dndSim::character("skeinwitch", 12, {6,12,14,16,20,20}, false, {"int","wis","cha"}, "dex", 20));
    std::shared_ptr<dndSim::npc> Skitterhaunt = std::make_shared<dndSim::npc>(dndSim::character("skitterhaunt", 4, {15,11,19,3,7,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> SlowStorm = std::make_shared<dndSim::npc>(dndSim::character("slowstorm", 15, {20,19,22,11,18,11}, false, {"dex","con"}, "str", 19));
    std::shared_ptr<dndSim::npc> SmaragdineGolem = std::make_shared<dndSim::npc>(dndSim::character("smaragdinegolem", 14, {24,11,21,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SnowQueen = std::make_shared<dndSim::npc>(dndSim::character("snowqueen", 16, {16,18,14,18,20,18}, false, {"dex","con","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> SonofFenris = std::make_shared<dndSim::npc>(dndSim::character("sonoffenris", 12, {26,16,23,16,18,14}, false, {"dex","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> SoulEater = std::make_shared<dndSim::npc>(dndSim::character("souleater", 7, {13,22,17,12,11,11}, false, {"dex","con","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Spark = std::make_shared<dndSim::npc>(dndSim::character("spark", 7, {4,20,18,10,12,17}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> SpawnofAkyishigal = std::make_shared<dndSim::npc>(dndSim::character("spawnofakyishigal", 5, {15,13,19,10,11,12}, false, {"dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> SpawnofArbeyach = std::make_shared<dndSim::npc>(dndSim::character("spawnofarbeyach", 5, {18,15,15,10,13,12}, false, {"wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> SpectralGuardian = std::make_shared<dndSim::npc>(dndSim::character("spectralguardian", 6, {6,18,18,11,16,18}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> SpiderofLeng = std::make_shared<dndSim::npc>(dndSim::character("spiderofleng", 7, {14,16,16,18,10,10}, true, {"dex","con","int"}, "int", 15));
    std::shared_ptr<dndSim::npc> SpiderThief = std::make_shared<dndSim::npc>(dndSim::character("spiderthief", 2, {10,12,14,3,10,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SpinosaurusDinosaur = std::make_shared<dndSim::npc>(dndSim::character("spinosaurusdinosaur", 13, {25,9,21,2,11,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SpireWalker = std::make_shared<dndSim::npc>(dndSim::character("spirewalker", 3, {3,18,14,11,10,16}, false, {"dex"}, "dex", 16));
    std::shared_ptr<dndSim::npc> StarDrake = std::make_shared<dndSim::npc>(dndSim::character("stardrake", 15, {20,17,21,16,24,20}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Star_SpawnofCthulhu = std::make_shared<dndSim::npc>(dndSim::character("star_spawnofcthulhu", 15, {25,15,24,30,18,23}, false, {"str","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> SteamGolem = std::make_shared<dndSim::npc>(dndSim::character("steamgolem", 13, {26,12,18,3,10,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Strife = std::make_shared<dndSim::npc>(dndSim::character("strife", 3, {8,20,14,13,14,16}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Stuhac = std::make_shared<dndSim::npc>(dndSim::character("stuhac", 13, {22,18,20,12,16,15}, false, {"str","dex","con","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> StygianFat_TailedScorpion = std::make_shared<dndSim::npc>(dndSim::character("stygianfat_tailedscorpion", 3, {3,14,15,1,10,2}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Subek = std::make_shared<dndSim::npc>(dndSim::character("subek", 5, {19,10,18,14,13,13}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SwarmofFireDancers = std::make_shared<dndSim::npc>(dndSim::character("swarmoffiredancers", 7, {10,20,16,6,10,7}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SwarmofManabaneScarabs = std::make_shared<dndSim::npc>(dndSim::character("swarmofmanabanescarabs", 4, {3,16,16,1,13,2}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SwarmofPrismaticBeetles = std::make_shared<dndSim::npc>(dndSim::character("swarmofprismaticbeetles", 3, {3,16,12,1,13,2}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SwarmofSluaghs = std::make_shared<dndSim::npc>(dndSim::character("swarmofsluaghs", 3, {6,16,11,6,13,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SwarmofWharflings = std::make_shared<dndSim::npc>(dndSim::character("swarmofwharflings", 3, {10,16,10,2,12,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SwarmofWolfSpirits = std::make_shared<dndSim::npc>(dndSim::character("swarmofwolfspirits", 6, {14,18,12,4,10,12}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> TempleDog = std::make_shared<dndSim::npc>(dndSim::character("templedog", 5, {18,14,15,8,14,10}, false, {"con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> TendrilPuppet = std::make_shared<dndSim::npc>(dndSim::character("tendrilpuppet", 2, {16,15,18,6,6,8}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Thuellai = std::make_shared<dndSim::npc>(dndSim::character("thuellai", 12, {22,24,20,10,11,14}, false, {"int","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Thursir = std::make_shared<dndSim::npc>(dndSim::character("thursir", 3, {19,10,18,13,15,11}, false, {"con"}, "str", 13));
    std::shared_ptr<dndSim::npc> Titanoboa = std::make_shared<dndSim::npc>(dndSim::character("titanoboa", 12, {26,10,20,3,10,3}, false, {"dex","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Tophet = std::make_shared<dndSim::npc>(dndSim::character("tophet", 8, {21,10,20,6,10,10}, false, {"str","dex","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> TosculiEliteBowRaider = std::make_shared<dndSim::npc>(dndSim::character("tosculielitebowraider", 5, {14,24,17,12,14,12}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> TosculiHiveQueen = std::make_shared<dndSim::npc>(dndSim::character("tosculihivequeen", 12, {17,24,20,16,16,18}, false, {"dex","con","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> TosculiWarrior = std::make_shared<dndSim::npc>(dndSim::character("tosculiwarrior", 3, {12,20,16,10,12,12}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> TrollkinReaver = std::make_shared<dndSim::npc>(dndSim::character("trollkinreaver", 4, {19,13,16,11,12,13}, false, {"con"}, "str", 14));
    std::shared_ptr<dndSim::npc> TuskedSkyfish = std::make_shared<dndSim::npc>(dndSim::character("tuskedskyfish", 4, {19,12,17,3,14,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> UmbralVampire = std::make_shared<dndSim::npc>(dndSim::character("umbralvampire", 7, {1,18,15,14,14,19}, false, {"dex","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Uraeus = std::make_shared<dndSim::npc>(dndSim::character("uraeus", 2, {6,15,14,10,14,9}, false, {"wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Urochar = std::make_shared<dndSim::npc>(dndSim::character("urochar", 17, {24,15,24,14,14,20}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Ushabti = std::make_shared<dndSim::npc>(dndSim::character("ushabti", 8, {14,20,18,6,11,6}, false, {"wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> UshabtiRoyalGuard = std::make_shared<dndSim::npc>(dndSim::character("ushabtiroyalguard", 14, {22,16,20,11,19,9}, false, {"wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Valkyrie = std::make_shared<dndSim::npc>(dndSim::character("valkyrie", 11, {18,18,16,12,19,18}, false, {"con","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> VaporLynx = std::make_shared<dndSim::npc>(dndSim::character("vaporlynx", 5, {15,18,16,10,13,14}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> VenomousMummy = std::make_shared<dndSim::npc>(dndSim::character("venomousmummy", 3, {16,8,15,7,10,14}, false, {"wis"}, "str", 11));
    std::shared_ptr<dndSim::npc> Vesiculosa = std::make_shared<dndSim::npc>(dndSim::character("vesiculosa", 11, {20,15,19,2,14,2}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Vila = std::make_shared<dndSim::npc>(dndSim::character("vila", 5, {12,20,13,11,14,16}, false, {"con","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> VileBarber = std::make_shared<dndSim::npc>(dndSim::character("vilebarber", 2, {12,18,10,10,8,10}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> VineLord = std::make_shared<dndSim::npc>(dndSim::character("vinelord", 9, {12,20,16,14,16,18}, false, {"con","wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> VineTrollSkeleton = std::make_shared<dndSim::npc>(dndSim::character("vinetrollskeleton", 9, {20,12,16,6,8,5}, false, {"con"}, "str", 16));
    std::shared_ptr<dndSim::npc> VoidDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("voiddragonwyrmling", 2, {16,10,17,12,9,17}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Voidling = std::make_shared<dndSim::npc>(dndSim::character("voidling", 11, {15,21,15,14,16,10}, false, {"con","int","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Volguloth = std::make_shared<dndSim::npc>(dndSim::character("volguloth", 4, {16,15,14,12,13,11}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Vættir = std::make_shared<dndSim::npc>(dndSim::character("vættir", 4, {20,14,16,10,12,14}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> WampusCat = std::make_shared<dndSim::npc>(dndSim::character("wampuscat", 1, {14,18,15,12,14,16}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> WaterLeaper = std::make_shared<dndSim::npc>(dndSim::character("waterleaper", 4, {16,14,15,4,12,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> WeepingTreant = std::make_shared<dndSim::npc>(dndSim::character("weepingtreant", 6, {21,8,18,12,16,11}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> WhiteApe = std::make_shared<dndSim::npc>(dndSim::character("whiteape", 6, {18,16,18,8,14,8}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> WindDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("winddragonwyrmling", 1, {16,16,14,12,11,14}, false, {"dex","con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> WolfReaverDwarf = std::make_shared<dndSim::npc>(dndSim::character("wolfreaverdwarf", 3, {18,12,19,9,11,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> WormheartedSuffragan = std::make_shared<dndSim::npc>(dndSim::character("wormheartedsuffragan", 5, {10,17,16,11,16,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Xhkarsh = std::make_shared<dndSim::npc>(dndSim::character("xhkarsh", 9, {17,19,18,15,16,15}, false, {"cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> YchenBannog = std::make_shared<dndSim::npc>(dndSim::character("ychenbannog", 11, {28,10,21,3,12,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> YoungCaveDragon = std::make_shared<dndSim::npc>(dndSim::character("youngcavedragon", 9, {23,12,21,10,12,14}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> YoungFlameDragon = std::make_shared<dndSim::npc>(dndSim::character("youngflamedragon", 8, {15,14,19,15,13,18}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungMithralDragon = std::make_shared<dndSim::npc>(dndSim::character("youngmithraldragon", 7, {12,18,17,16,17,16}, false, {"dex","con","wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> YoungSeaDragon = std::make_shared<dndSim::npc>(dndSim::character("youngseadragon", 9, {21,10,19,15,13,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungSpinosaurusDinosaur = std::make_shared<dndSim::npc>(dndSim::character("youngspinosaurusdinosaur", 5, {21,11,19,2,11,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> YoungVoidDragon = std::make_shared<dndSim::npc>(dndSim::character("youngvoiddragon", 9, {20,10,21,14,11,19}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> YoungWindDragon = std::make_shared<dndSim::npc>(dndSim::character("youngwinddragon", 6, {20,16,18,14,13,16}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> ZanskaranViper = std::make_shared<dndSim::npc>(dndSim::character("zanskaranviper", 1, {15,11,17,2,13,2}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Zimwi = std::make_shared<dndSim::npc>(dndSim::character("zimwi", 5, {13,18,19,6,9,7}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Zmey = std::make_shared<dndSim::npc>(dndSim::character("zmey", 15, {22,13,19,16,16,12}, false, {"con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> ZmeyHeadling = std::make_shared<dndSim::npc>(dndSim::character("zmeyheadling", 5, {16,10,17,8,16,8}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Imelda = std::make_shared<dndSim::npc>(dndSim::character("imelda", 2, {18,12,12,10,11,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> StatueofTalos = std::make_shared<dndSim::npc>(dndSim::character("statueoftalos", 10, {19,11,20,6,11,9}, false, {"wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Tooth_N_Claw = std::make_shared<dndSim::npc>(dndSim::character("tooth_n_claw", 3, {17,12,14,6,13,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> TheDemogorgon = std::make_shared<dndSim::npc>(dndSim::character("thedemogorgon", 8, {21,8,17,6,10,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Barbatos = std::make_shared<dndSim::npc>(dndSim::character("barbatos", 6, {11,16,14,13,14,10}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> LynxCreatlach = std::make_shared<dndSim::npc>(dndSim::character("lynxcreatlach", 5, {18,14,18,13,16,18}, false, {"str","con","wis","cha"}, "str", 13));
    std::shared_ptr<dndSim::npc> Moghadam = std::make_shared<dndSim::npc>(dndSim::character("moghadam", 12, {10,12,13,19,16,16}, true, {"con","int","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> Neo_Otyugh = std::make_shared<dndSim::npc>(dndSim::character("neo_otyugh", 7, {20,11,22,12,13,6}, true, {"con"}, "wis", 16));
    std::shared_ptr<dndSim::npc> SirUrsas = std::make_shared<dndSim::npc>(dndSim::character("sirursas", 5, {18,15,16,10,12,15}, false, {"str","dex","con"}, "str", 20));
    std::shared_ptr<dndSim::npc> Thessalar = std::make_shared<dndSim::npc>(dndSim::character("thessalar", 12, {10,12,13,19,16,16}, true, {"con","int","wis"}, "int", 14));
    std::shared_ptr<dndSim::npc> Thessalkraken = std::make_shared<dndSim::npc>(dndSim::character("thessalkraken", 14, {24,11,20,19,15,17}, false, {"str","dex","con","int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Two_HeadedCrocodile = std::make_shared<dndSim::npc>(dndSim::character("two_headedcrocodile", 1, {15,10,13,2,10,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Two_HeadedOwlbear = std::make_shared<dndSim::npc>(dndSim::character("two_headedowlbear", 3, {20,12,17,3,12,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> AzbaraJos = std::make_shared<dndSim::npc>(dndSim::character("azbarajos", 4, {9,16,14,16,13,11}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> Blagothkus = std::make_shared<dndSim::npc>(dndSim::character("blagothkus", 9, {26,13,20,16,15,15}, true, {"con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> CaptainOthelstan = std::make_shared<dndSim::npc>(dndSim::character("captainothelstan", 5, {19,10,16,13,14,12}, false, {"str","con"}, "str", 19));
    std::shared_ptr<dndSim::npc> Dragonclaw = std::make_shared<dndSim::npc>(dndSim::character("dragonclaw", 1, {9,16,13,11,10,12}, false, {"wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Dragonwing = std::make_shared<dndSim::npc>(dndSim::character("dragonwing", 2, {11,16,13,11,11,13}, false, {"wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> DralmorrerBorngray = std::make_shared<dndSim::npc>(dndSim::character("dralmorrerborngray", 3, {18,14,14,16,10,8}, true, {"str","con"}, "int", 16));
    std::shared_ptr<dndSim::npc> FrulamMondath = std::make_shared<dndSim::npc>(dndSim::character("frulammondath", 2, {14,10,13,11,18,15}, true, {"wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> JamnaGleamsilver = std::make_shared<dndSim::npc>(dndSim::character("jamnagleamsilver", 1, {8,17,14,15,10,12}, true, {"dex","int"}, "int", 15));
    std::shared_ptr<dndSim::npc> LangdedrosaCyanwrath = std::make_shared<dndSim::npc>(dndSim::character("langdedrosacyanwrath", 4, {19,13,16,10,14,12}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> PharblexSpattergoo = std::make_shared<dndSim::npc>(dndSim::character("pharblexspattergoo", 3, {15,12,18,11,16,7}, true, {"str","con"}, "wis", 15));
    std::shared_ptr<dndSim::npc> RathModar = std::make_shared<dndSim::npc>(dndSim::character("rathmodar", 6, {11,16,14,18,14,10}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> Rezmir = std::make_shared<dndSim::npc>(dndSim::character("rezmir", 7, {18,16,16,15,12,14}, false, {"dex","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> TalistheWhite = std::make_shared<dndSim::npc>(dndSim::character("talisthewhite", 5, {14,12,14,10,16,16}, true, {"wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> Trepsin = std::make_shared<dndSim::npc>(dndSim::character("trepsin", 6, {18,13,20,7,9,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Abjurer = std::make_shared<dndSim::npc>(dndSim::character("abjurer", 9, {9,14,14,18,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> BlackGuardDrake = std::make_shared<dndSim::npc>(dndSim::character("blackguarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> BlueGuardDrake = std::make_shared<dndSim::npc>(dndSim::character("blueguarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Conjurer = std::make_shared<dndSim::npc>(dndSim::character("conjurer", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Diviner = std::make_shared<dndSim::npc>(dndSim::character("diviner", 8, {9,14,11,18,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Enchanter = std::make_shared<dndSim::npc>(dndSim::character("enchanter", 5, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Evoker = std::make_shared<dndSim::npc>(dndSim::character("evoker", 9, {9,14,12,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GreenGuardDrake = std::make_shared<dndSim::npc>(dndSim::character("greenguarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Illusionist = std::make_shared<dndSim::npc>(dndSim::character("illusionist", 3, {9,14,13,16,11,12}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> MindFlayerPsion = std::make_shared<dndSim::npc>(dndSim::character("mindflayerpsion", 8, {11,12,12,19,17,17}, true, {"int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> Necromancer = std::make_shared<dndSim::npc>(dndSim::character("necromancer", 9, {9,14,12,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> OrcBladeofIlneval = std::make_shared<dndSim::npc>(dndSim::character("orcbladeofilneval", 4, {17,11,17,10,12,14}, false, {"wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> OrcClawofLuthic = std::make_shared<dndSim::npc>(dndSim::character("orcclawofluthic", 2, {14,15,16,10,15,11}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> OrcHandofYurtrus = std::make_shared<dndSim::npc>(dndSim::character("orchandofyurtrus", 2, {12,11,16,11,14,9}, true, {}, "wis", 12));
    std::shared_ptr<dndSim::npc> OrcRedFangofShargaas = std::make_shared<dndSim::npc>(dndSim::character("orcredfangofshargaas", 3, {11,16,15,9,11,9}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> RedGuardDrake = std::make_shared<dndSim::npc>(dndSim::character("redguarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Thorny = std::make_shared<dndSim::npc>(dndSim::character("thorny", 1, {13,12,13,2,10,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Transmuter = std::make_shared<dndSim::npc>(dndSim::character("transmuter", 5, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> WhiteGuardDrake = std::make_shared<dndSim::npc>(dndSim::character("whiteguarddrake", 2, {16,11,16,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Yuan_tiMalisonlType4r = std::make_shared<dndSim::npc>(dndSim::character("yuan_timalisonltype4r", 3, {16,14,13,14,12,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Yuan_tiMalisonlType5r = std::make_shared<dndSim::npc>(dndSim::character("yuan_timalisonltype5r", 3, {16,14,13,14,12,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Coral = std::make_shared<dndSim::npc>(dndSim::character("coral", 9, {20,13,15,14,18,19}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Dandylion = std::make_shared<dndSim::npc>(dndSim::character("dandylion", 6, {22,19,14,16,17,18}, true, {"str","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> Rain = std::make_shared<dndSim::npc>(dndSim::character("rain", 5, {10,11,14,14,18,15}, false, {"dex","con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Scrapper = std::make_shared<dndSim::npc>(dndSim::character("scrapper", 8, {20,10,20,3,10,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SeththeShapeshiftingDragon = std::make_shared<dndSim::npc>(dndSim::character("seththeshapeshiftingdragon", 10, {16,25,19,13,15,14}, false, {"str","dex","con"}, "dex", 17));
    std::shared_ptr<dndSim::npc> SheldontheBlueberryDragon = std::make_shared<dndSim::npc>(dndSim::character("sheldontheblueberrydragon", 7, {19,13,18,17,14,16}, true, {"dex","con","int"}, "int", 16));
    std::shared_ptr<dndSim::npc> AurillFirstFormr = std::make_shared<dndSim::npc>(dndSim::character("aurillfirstformr", 9, {14,16,21,24,26,28}, true, {"con","wis"}, "cha", 13));
    std::shared_ptr<dndSim::npc> AurillSecondFormr = std::make_shared<dndSim::npc>(dndSim::character("aurillsecondformr", 10, {16,16,21,24,26,28}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> AurillThirdFormr = std::make_shared<dndSim::npc>(dndSim::character("aurillthirdformr", 11, {1,12,21,24,26,28}, false, {"con","wis"}, "dex", 19));
    std::shared_ptr<dndSim::npc> Avarice = std::make_shared<dndSim::npc>(dndSim::character("avarice", 7, {8,16,14,17,10,9}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> AwakenedWhiteMoose = std::make_shared<dndSim::npc>(dndSim::character("awakenedwhitemoose", 3, {19,11,16,10,12,6}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> BjornhildSolvigsdottir = std::make_shared<dndSim::npc>(dndSim::character("bjornhildsolvigsdottir", 5, {18,11,18,14,11,14}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> ChardalynBerserker = std::make_shared<dndSim::npc>(dndSim::character("chardalynberserker", 4, {16,12,17,9,11,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> ChardalynDragon = std::make_shared<dndSim::npc>(dndSim::character("chardalyndragon", 11, {24,11,19,10,10,3}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> ColdlightWalker = std::make_shared<dndSim::npc>(dndSim::character("coldlightwalker", 5, {15,10,17,8,10,8}, false, {"int","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> DemosMagen = std::make_shared<dndSim::npc>(dndSim::character("demosmagen", 2, {14,14,18,10,10,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> DzaansSimulacrum = std::make_shared<dndSim::npc>(dndSim::character("dzaanssimulacrum", 1, {10,11,12,16,13,15}, true, {"int","wis"}, "int", 10));
    std::shared_ptr<dndSim::npc> FrostDruid = std::make_shared<dndSim::npc>(dndSim::character("frostdruid", 5, {12,13,16,10,16,9}, true, {"int","wis"}, "wis", 13));
    std::shared_ptr<dndSim::npc> FrostGiantSkeleton = std::make_shared<dndSim::npc>(dndSim::character("frostgiantskeleton", 6, {23,9,15,6,8,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GalvanMagen = std::make_shared<dndSim::npc>(dndSim::character("galvanmagen", 3, {10,18,18,12,10,7}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> GiantWalrus = std::make_shared<dndSim::npc>(dndSim::character("giantwalrus", 4, {22,9,16,3,11,4}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> GnollVampire = std::make_shared<dndSim::npc>(dndSim::character("gnollvampire", 8, {20,18,18,6,12,9}, false, {"dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> GnomeCeremorph = std::make_shared<dndSim::npc>(dndSim::character("gnomeceremorph", 5, {6,14,12,19,17,17}, true, {"int","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> GoliathWarrior = std::make_shared<dndSim::npc>(dndSim::character("goliathwarrior", 3, {18,11,16,10,15,10}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GoliathWerebear = std::make_shared<dndSim::npc>(dndSim::character("goliathwerebear", 8, {20,10,18,10,15,10}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> GrandolphaMuzgardt = std::make_shared<dndSim::npc>(dndSim::character("grandolphamuzgardt", 2, {14,9,18,13,17,16}, true, {}, "wis", 9));
    std::shared_ptr<dndSim::npc> GunvaldHalraggson = std::make_shared<dndSim::npc>(dndSim::character("gunvaldhalraggson", 5, {20,8,18,9,10,16}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> HypnosMagen = std::make_shared<dndSim::npc>(dndSim::character("hypnosmagen", 1, {10,14,18,14,10,7}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> IceTroll = std::make_shared<dndSim::npc>(dndSim::character("icetroll", 8, {18,8,22,7,9,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> IsarrKronenstrom = std::make_shared<dndSim::npc>(dndSim::character("isarrkronenstrom", 8, {16,16,15,14,15,16}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> JarundElkhardt = std::make_shared<dndSim::npc>(dndSim::character("jarundelkhardt", 5, {18,10,15,12,14,18}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> KoboldVampireSpawn = std::make_shared<dndSim::npc>(dndSim::character("koboldvampirespawn", 3, {10,18,16,8,8,8}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> LivingBigbysHand = std::make_shared<dndSim::npc>(dndSim::character("livingbigbyshand", 4, {26,10,20,1,10,1}, false, {"dex","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> LivingBladeofDisaster = std::make_shared<dndSim::npc>(dndSim::character("livingbladeofdisaster", 8, {10,16,19,6,10,3}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> NassLantomirsGhost = std::make_shared<dndSim::npc>(dndSim::character("nasslantomirsghost", 6, {7,13,10,17,12,17}, true, {}, "int", 11));
    std::shared_ptr<dndSim::npc> Prisoner237 = std::make_shared<dndSim::npc>(dndSim::character("prisoner237", 1, {9,13,14,17,10,15}, true, {}, "int", 11));
    std::shared_ptr<dndSim::npc> SephekKaltro = std::make_shared<dndSim::npc>(dndSim::character("sephekkaltro", 3, {16,14,16,11,16,18}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> SnowGolem = std::make_shared<dndSim::npc>(dndSim::character("snowgolem", 3, {15,6,14,1,6,1}, false, {}, "str", 8));
    std::shared_ptr<dndSim::npc> SpermWhale = std::make_shared<dndSim::npc>(dndSim::character("spermwhale", 8, {26,8,17,3,12,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SpittingMimic = std::make_shared<dndSim::npc>(dndSim::character("spittingmimic", 5, {21,12,17,9,15,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> TombTapper = std::make_shared<dndSim::npc>(dndSim::character("tombtapper", 10, {22,10,21,14,14,11}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> VellynneHarpell = std::make_shared<dndSim::npc>(dndSim::character("vellynneharpell", 4, {10,12,17,18,15,13}, true, {"int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> VerbeegLongstrider = std::make_shared<dndSim::npc>(dndSim::character("verbeeglongstrider", 5, {19,15,16,13,14,10}, true, {"dex","con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> VerbeegMarauder = std::make_shared<dndSim::npc>(dndSim::character("verbeegmarauder", 4, {19,11,16,11,10,9}, false, {"dex","con"}, "str", 14));
    std::shared_ptr<dndSim::npc> XardorokSunblight = std::make_shared<dndSim::npc>(dndSim::character("xardoroksunblight", 5, {16,11,18,12,13,18}, true, {"wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> BraininaJar = std::make_shared<dndSim::npc>(dndSim::character("braininajar", 6, {1,1,15,19,10,15}, true, {"int","cha"}, "int", 11));
    std::shared_ptr<dndSim::npc> ClockworkKraken = std::make_shared<dndSim::npc>(dndSim::character("clockworkkraken", 10, {20,12,18,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> GarretLevistusson = std::make_shared<dndSim::npc>(dndSim::character("garretlevistusson", 2, {11,14,12,11,12,17}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> MaryGreymalkin = std::make_shared<dndSim::npc>(dndSim::character("marygreymalkin", 2, {10,12,10,14,14,15}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> Chupacabra = std::make_shared<dndSim::npc>(dndSim::character("chupacabra", 3, {15,14,16,6,13,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GishathSunsAvatar = std::make_shared<dndSim::npc>(dndSim::character("gishathsunsavatar", 10, {24,12,18,12,16,6}, false, {"str","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Sunbird = std::make_shared<dndSim::npc>(dndSim::character("sunbird", 13, {28,10,20,13,14,15}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Archaic = std::make_shared<dndSim::npc>(dndSim::character("archaic", 18, {25,10,24,27,24,20}, true, {"dex","int","wis","cha"}, "int", 20));
    std::shared_ptr<dndSim::npc> BrackishTrudge = std::make_shared<dndSim::npc>(dndSim::character("brackishtrudge", 3, {20,10,17,4,14,4}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> CogworkArchivist = std::make_shared<dndSim::npc>(dndSim::character("cogworkarchivist", 4, {18,10,15,17,11,6}, true, {}, "int", 17));
    std::shared_ptr<dndSim::npc> Daemogoth = std::make_shared<dndSim::npc>(dndSim::character("daemogoth", 10, {19,15,19,21,14,18}, false, {"int","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> DaemogothTitan = std::make_shared<dndSim::npc>(dndSim::character("daemogothtitan", 16, {26,10,26,24,18,20}, false, {"int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Groff = std::make_shared<dndSim::npc>(dndSim::character("groff", 4, {20,10,17,4,13,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> LoreholdApprentice = std::make_shared<dndSim::npc>(dndSim::character("loreholdapprentice", 2, {10,14,13,15,12,11}, true, {"con","int"}, "int", 12));
    std::shared_ptr<dndSim::npc> LoreholdPledgemage = std::make_shared<dndSim::npc>(dndSim::character("loreholdpledgemage", 4, {10,16,13,17,12,11}, true, {"con","int"}, "int", 13));
    std::shared_ptr<dndSim::npc> LoreholdProfessorofChaos = std::make_shared<dndSim::npc>(dndSim::character("loreholdprofessorofchaos", 7, {11,14,14,19,15,13}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> LoreholdProfessorofOrder = std::make_shared<dndSim::npc>(dndSim::character("loreholdprofessoroforder", 7, {11,14,14,19,15,13}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> MageHunter = std::make_shared<dndSim::npc>(dndSim::character("magehunter", 5, {19,15,16,11,17,10}, false, {"int","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Murgaxor = std::make_shared<dndSim::npc>(dndSim::character("murgaxor", 9, {11,14,18,20,12,12}, false, {"con","int","wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> OracleofStrixhaven = std::make_shared<dndSim::npc>(dndSim::character("oracleofstrixhaven", 15, {12,15,16,21,20,18}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> OriqBloodMage = std::make_shared<dndSim::npc>(dndSim::character("oriqbloodmage", 9, {11,14,18,20,12,12}, false, {"con","int","wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> OriqRecruiter = std::make_shared<dndSim::npc>(dndSim::character("oriqrecruiter", 4, {10,14,12,17,15,18}, true, {"int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> PrismariApprentice = std::make_shared<dndSim::npc>(dndSim::character("prismariapprentice", 2, {10,14,13,12,13,15}, true, {"dex","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> PrismariPledgemage = std::make_shared<dndSim::npc>(dndSim::character("prismaripledgemage", 4, {10,15,13,12,14,17}, true, {"dex","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> PrismariProfessorofExpression = std::make_shared<dndSim::npc>(dndSim::character("prismariprofessorofexpression", 7, {14,16,15,15,13,19}, true, {"dex","int","wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> PrismariProfessorofPerfection = std::make_shared<dndSim::npc>(dndSim::character("prismariprofessorofperfection", 7, {14,16,15,15,13,19}, true, {"dex","int","wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> QuandrixApprentice = std::make_shared<dndSim::npc>(dndSim::character("quandrixapprentice", 2, {10,12,13,15,14,11}, true, {"int","wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> QuandrixPledgemage = std::make_shared<dndSim::npc>(dndSim::character("quandrixpledgemage", 4, {10,14,13,17,14,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> QuandrixProfessorofSubstance = std::make_shared<dndSim::npc>(dndSim::character("quandrixprofessorofsubstance", 7, {11,14,14,19,14,13}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> QuandrixProfessorofTheory = std::make_shared<dndSim::npc>(dndSim::character("quandrixprofessoroftheory", 7, {11,14,14,19,15,13}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> RelicSloth = std::make_shared<dndSim::npc>(dndSim::character("relicsloth", 2, {20,9,17,2,12,8}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> RuinGrinder = std::make_shared<dndSim::npc>(dndSim::character("ruingrinder", 5, {22,13,15,3,10,1}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> SilverquillApprentice = std::make_shared<dndSim::npc>(dndSim::character("silverquillapprentice", 2, {10,14,13,12,11,15}, true, {"dex","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> SilverquillPledgemage = std::make_shared<dndSim::npc>(dndSim::character("silverquillpledgemage", 4, {10,16,13,12,11,17}, true, {"dex","wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> SilverquillProfessorofRadiance = std::make_shared<dndSim::npc>(dndSim::character("silverquillprofessorofradiance", 7, {11,14,14,16,13,19}, true, {"dex","int","wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> SilverquillProfessorofShadow = std::make_shared<dndSim::npc>(dndSim::character("silverquillprofessorofshadow", 7, {11,14,14,16,13,19}, true, {"dex","int","wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> StrixhavenCampusGuide = std::make_shared<dndSim::npc>(dndSim::character("strixhavencampusguide", 1, {15,14,13,10,12,12}, false, {"dex"}, "str", 17));
    std::shared_ptr<dndSim::npc> WitherbloomApprentice = std::make_shared<dndSim::npc>(dndSim::character("witherbloomapprentice", 2, {10,14,13,12,15,11}, true, {"con","wis"}, "wis", 13));
    std::shared_ptr<dndSim::npc> WitherbloomPledgemage = std::make_shared<dndSim::npc>(dndSim::character("witherbloompledgemage", 4, {10,15,13,14,17,11}, true, {"con","wis"}, "wis", 12));
    std::shared_ptr<dndSim::npc> WitherbloomProfessorofDecay = std::make_shared<dndSim::npc>(dndSim::character("witherbloomprofessorofdecay", 7, {11,14,16,16,19,13}, true, {"con","int","wis","cha"}, "wis", 14));
    std::shared_ptr<dndSim::npc> WitherbloomProfessorofGrowth = std::make_shared<dndSim::npc>(dndSim::character("witherbloomprofessorofgrowth", 7, {11,13,16,16,19,13}, true, {"con","int","wis","cha"}, "wis", 13));
    std::shared_ptr<dndSim::npc> Ydemi = std::make_shared<dndSim::npc>(dndSim::character("ydemi", 9, {11,14,18,20,12,12}, false, {"con","int","wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Decapus = std::make_shared<dndSim::npc>(dndSim::character("decapus", 4, {15,14,14,4,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantSlug = std::make_shared<dndSim::npc>(dndSim::character("giantslug", 3, {14,13,16,1,12,5}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Demogorgon = std::make_shared<dndSim::npc>(dndSim::character("demogorgon", 4, {16,12,16,3,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> EvilMage = std::make_shared<dndSim::npc>(dndSim::character("evilmage", 1, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Thessalhydra = std::make_shared<dndSim::npc>(dndSim::character("thessalhydra", 4, {19,12,20,5,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> AssassinBug = std::make_shared<dndSim::npc>(dndSim::character("assassinbug", 3, {13,14,13,4,12,6}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Blindheim = std::make_shared<dndSim::npc>(dndSim::character("blindheim", 2, {13,16,15,8,10,9}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> CrabFolk = std::make_shared<dndSim::npc>(dndSim::character("crabfolk", 3, {19,10,17,7,9,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> EyeofFearandFlame = std::make_shared<dndSim::npc>(dndSim::character("eyeoffearandflame", 9, {16,14,18,18,17,18}, true, {"str","con","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> FogGiant = std::make_shared<dndSim::npc>(dndSim::character("foggiant", 11, {27,10,22,12,16,16}, true, {"con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Forlarren = std::make_shared<dndSim::npc>(dndSim::character("forlarren", 3, {14,16,17,12,11,18}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> NeedleLord = std::make_shared<dndSim::npc>(dndSim::character("needlelord", 3, {18,11,14,11,15,12}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> NorkerWarLeader = std::make_shared<dndSim::npc>(dndSim::character("norkerwarleader", 3, {16,10,15,12,11,13}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> ScreamingDevilkin = std::make_shared<dndSim::npc>(dndSim::character("screamingdevilkin", 1, {4,16,13,5,8,11}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> Xill = std::make_shared<dndSim::npc>(dndSim::character("xill", 3, {14,18,13,11,14,9}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> MerrowExtortionist = std::make_shared<dndSim::npc>(dndSim::character("merrowextortionist", 1, {16,10,15,8,10,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SporeServantOctopus = std::make_shared<dndSim::npc>(dndSim::character("sporeservantoctopus", 1, {17,13,13,2,6,1}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Tarak = std::make_shared<dndSim::npc>(dndSim::character("tarak", 1, {10,16,10,12,14,16}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Varnoth = std::make_shared<dndSim::npc>(dndSim::character("varnoth", 2, {16,13,14,10,11,10}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> AbolethSpawn = std::make_shared<dndSim::npc>(dndSim::character("abolethspawn", 5, {19,11,18,7,12,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> AlyxianAboleth = std::make_shared<dndSim::npc>(dndSim::character("alyxianaboleth", 12, {21,9,15,18,18,18}, false, {"con","int","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> AlyxiantheAbsolved = std::make_shared<dndSim::npc>(dndSim::character("alyxiantheabsolved", 14, {19,15,18,13,14,19}, true, {"str","con","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> AlyxiantheCallous = std::make_shared<dndSim::npc>(dndSim::character("alyxianthecallous", 12, {23,18,21,15,16,20}, false, {"str","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> AlyxiantheDispossessed = std::make_shared<dndSim::npc>(dndSim::character("alyxianthedispossessed", 13, {19,15,18,13,14,20}, false, {"str","con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> AlyxiantheHunter = std::make_shared<dndSim::npc>(dndSim::character("alyxianthehunter", 10, {22,9,20,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> AlyxiantheTormented = std::make_shared<dndSim::npc>(dndSim::character("alyxianthetormented", 11, {21,18,22,15,16,20}, false, {"str","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> AnimatedGlassStatue = std::make_shared<dndSim::npc>(dndSim::character("animatedglassstatue", 1, {15,10,15,6,12,7}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> AyoJabelTier1r = std::make_shared<dndSim::npc>(dndSim::character("ayojabeltier1r", 3, {14,14,14,10,12,12}, true, {"str","dex"}, "wis", 14));
    std::shared_ptr<dndSim::npc> AyoJabelTier2r = std::make_shared<dndSim::npc>(dndSim::character("ayojabeltier2r", 5, {14,16,14,10,14,12}, true, {"str","dex"}, "wis", 15));
    std::shared_ptr<dndSim::npc> AyoJabelTier3r = std::make_shared<dndSim::npc>(dndSim::character("ayojabeltier3r", 8, {16,20,16,10,16,14}, true, {"str","dex"}, "wis", 17));
    std::shared_ptr<dndSim::npc> CorruptedGiantShark = std::make_shared<dndSim::npc>(dndSim::character("corruptedgiantshark", 9, {23,11,21,1,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> DancingFlame = std::make_shared<dndSim::npc>(dndSim::character("dancingflame", 4, {8,17,13,15,12,20}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> DeathEmbrace = std::make_shared<dndSim::npc>(dndSim::character("deathembrace", 11, {23,15,19,6,9,4}, false, {"str","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> DermotWurderlTier1r = std::make_shared<dndSim::npc>(dndSim::character("dermotwurderltier1r", 3, {16,12,14,10,16,10}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> DermotWurderlTier2r = std::make_shared<dndSim::npc>(dndSim::character("dermotwurderltier2r", 5, {18,12,14,10,18,10}, true, {"wis","cha"}, "wis", 19));
    std::shared_ptr<dndSim::npc> DermotWurderlTier3r = std::make_shared<dndSim::npc>(dndSim::character("dermotwurderltier3r", 8, {18,12,14,10,20,10}, true, {"wis","cha"}, "wis", 20));
    std::shared_ptr<dndSim::npc> Galeokaerda = std::make_shared<dndSim::npc>(dndSim::character("galeokaerda", 6, {12,15,14,16,15,18}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> GalsariadArdythlTier1r = std::make_shared<dndSim::npc>(dndSim::character("galsariadardythltier1r", 3, {8,14,8,16,15,12}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GalsariadArdythlTier2r = std::make_shared<dndSim::npc>(dndSim::character("galsariadardythltier2r", 5, {8,14,10,18,15,12}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GalsariadArdythlTier3r = std::make_shared<dndSim::npc>(dndSim::character("galsariadardythltier3r", 8, {8,14,10,20,15,12}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> InsightAcuere = std::make_shared<dndSim::npc>(dndSim::character("insightacuere", 5, {10,14,13,18,16,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> IrvanWastewalkerlTier1r = std::make_shared<dndSim::npc>(dndSim::character("irvanwastewalkerltier1r", 3, {8,14,12,12,12,12}, false, {"dex","con"}, "dex", 13));
    std::shared_ptr<dndSim::npc> IrvanWastewalkerlTier2r = std::make_shared<dndSim::npc>(dndSim::character("irvanwastewalkerltier2r", 5, {10,16,12,14,14,14}, false, {"dex","con"}, "dex", 15));
    std::shared_ptr<dndSim::npc> IrvanWastewalkerlTier3r = std::make_shared<dndSim::npc>(dndSim::character("irvanwastewalkerltier3r", 8, {10,20,14,16,16,16}, false, {"dex","con"}, "dex", 17));
    std::shared_ptr<dndSim::npc> LaurinOphidas = std::make_shared<dndSim::npc>(dndSim::character("laurinophidas", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> LightDevourer = std::make_shared<dndSim::npc>(dndSim::character("lightdevourer", 6, {18,18,18,2,10,3}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MaggieKeeneyeslTier1r = std::make_shared<dndSim::npc>(dndSim::character("maggiekeeneyesltier1r", 3, {18,14,16,14,14,8}, false, {"str","con"}, "str", 13));
    std::shared_ptr<dndSim::npc> MaggieKeeneyeslTier2r = std::make_shared<dndSim::npc>(dndSim::character("maggiekeeneyesltier2r", 5, {18,14,18,14,16,8}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> MaggieKeeneyeslTier3r = std::make_shared<dndSim::npc>(dndSim::character("maggiekeeneyesltier3r", 8, {20,14,18,14,14,8}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> MonasticHighCurator = std::make_shared<dndSim::npc>(dndSim::character("monastichighcurator", 10, {12,16,14,18,22,17}, true, {"dex","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> MonasticInfiltrator = std::make_shared<dndSim::npc>(dndSim::character("monasticinfiltrator", 6, {13,20,16,15,17,16}, true, {"dex","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> MonasticOperative = std::make_shared<dndSim::npc>(dndSim::character("monasticoperative", 5, {13,18,14,14,17,11}, false, {"dex","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> OccultExtollant = std::make_shared<dndSim::npc>(dndSim::character("occultextollant", 6, {12,15,14,16,15,18}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> OccultInitiate = std::make_shared<dndSim::npc>(dndSim::character("occultinitiate", 2, {10,14,12,14,10,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> OccultSilvertongue = std::make_shared<dndSim::npc>(dndSim::character("occultsilvertongue", 8, {13,16,16,15,17,20}, true, {"wis","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> RuidiumElephant = std::make_shared<dndSim::npc>(dndSim::character("ruidiumelephant", 8, {24,9,21,3,11,6}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> ScholarlyAgent = std::make_shared<dndSim::npc>(dndSim::character("scholarlyagent", 1, {10,12,12,16,12,10}, true, {"int"}, "int", 11));
    std::shared_ptr<dndSim::npc> ScholarlyExcavator = std::make_shared<dndSim::npc>(dndSim::character("scholarlyexcavator", 3, {15,14,16,14,14,12}, false, {"con","int"}, "str", 16));
    std::shared_ptr<dndSim::npc> ScholarlyMastermind = std::make_shared<dndSim::npc>(dndSim::character("scholarlymastermind", 5, {10,14,13,18,16,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> ScuttlingSerpentmaw = std::make_shared<dndSim::npc>(dndSim::character("scuttlingserpentmaw", 4, {16,14,16,3,11,3}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> SlitheringBloodfin = std::make_shared<dndSim::npc>(dndSim::character("slitheringbloodfin", 9, {20,14,16,2,10,3}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> SwarmofSorrowfish = std::make_shared<dndSim::npc>(dndSim::character("swarmofsorrowfish", 6, {16,19,14,1,11,3}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> VerinThelyss = std::make_shared<dndSim::npc>(dndSim::character("verinthelyss", 5, {18,15,14,13,14,16}, true, {"str","con","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> YoungHorizonbackTortoise = std::make_shared<dndSim::npc>(dndSim::character("younghorizonbacktortoise", 3, {19,11,15,2,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CreepyDoll = std::make_shared<dndSim::npc>(dndSim::character("creepydoll", 2, {6,14,13,12,11,10}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> Geist = std::make_shared<dndSim::npc>(dndSim::character("geist", 4, {7,13,10,10,12,17}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> VampireNeonate = std::make_shared<dndSim::npc>(dndSim::character("vampireneonate", 5, {16,16,16,11,10,12}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> WerewolflKrallenhorder = std::make_shared<dndSim::npc>(dndSim::character("werewolflkrallenhorder", 3, {15,13,14,10,11,10}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> ArchonofRedemption = std::make_shared<dndSim::npc>(dndSim::character("archonofredemption", 10, {18,18,18,17,20,20}, true, {"wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Kraken = std::make_shared<dndSim::npc>(dndSim::character("kraken", 13, {29,14,20,16,18,18}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> GiantSharkSkeleton = std::make_shared<dndSim::npc>(dndSim::character("giantsharkskeleton", 5, {23,11,21,1,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Lhammaruntosz = std::make_shared<dndSim::npc>(dndSim::character("lhammaruntosz", 16, {25,10,23,16,15,19}, true, {"dex","con","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> SkyLeviathan = std::make_shared<dndSim::npc>(dndSim::character("skyleviathan", 10, {28,7,22,1,8,4}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> AmbitiousAssassin = std::make_shared<dndSim::npc>(dndSim::character("ambitiousassassin", 5, {10,18,15,18,14,16}, false, {"dex","int"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Asteria = std::make_shared<dndSim::npc>(dndSim::character("asteria", 18, {12,21,17,15,11,20}, true, {"dex","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> BossAugustus = std::make_shared<dndSim::npc>(dndSim::character("bossaugustus", 9, {18,16,17,14,15,12}, false, {"str","dex"}, "str", 13));
    std::shared_ptr<dndSim::npc> BossDelour = std::make_shared<dndSim::npc>(dndSim::character("bossdelour", 9, {12,18,15,17,14,16}, false, {"dex","int"}, "dex", 14));
    std::shared_ptr<dndSim::npc> BreathDrinker = std::make_shared<dndSim::npc>(dndSim::character("breathdrinker", 14, {5,18,16,11,15,20}, false, {"int","wis"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Brusipha = std::make_shared<dndSim::npc>(dndSim::character("brusipha", 3, {18,11,16,12,16,16}, true, {"wis","cha"}, "wis", 14));
    std::shared_ptr<dndSim::npc> EnchantingInfiltrator = std::make_shared<dndSim::npc>(dndSim::character("enchantinginfiltrator", 11, {10,20,15,20,16,18}, false, {"dex","int"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Euryale = std::make_shared<dndSim::npc>(dndSim::character("euryale", 18, {21,16,18,12,20,15}, true, {"dex","con","int","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> FateHag = std::make_shared<dndSim::npc>(dndSim::character("fatehag", 4, {12,14,13,12,18,15}, true, {"con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> GremorlysGhost = std::make_shared<dndSim::npc>(dndSim::character("gremorlysghost", 9, {7,14,12,18,12,17}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GrimChampionofBloodshed = std::make_shared<dndSim::npc>(dndSim::character("grimchampionofbloodshed", 20, {23,12,18,10,17,21}, false, {"str","dex","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> GrimChampionofPestilence = std::make_shared<dndSim::npc>(dndSim::character("grimchampionofpestilence", 15, {10,18,16,17,15,21}, true, {"dex","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> HarrowHawk = std::make_shared<dndSim::npc>(dndSim::character("harrowhawk", 1, {5,16,10,2,14,7}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> HarrowHound = std::make_shared<dndSim::npc>(dndSim::character("harrowhound", 3, {16,19,16,8,15,13}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> HierophantMedusa = std::make_shared<dndSim::npc>(dndSim::character("hierophantmedusa", 17, {22,20,18,15,23,22}, true, {"con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> HierophantoftheComet = std::make_shared<dndSim::npc>(dndSim::character("hierophantofthecomet", 11, {12,13,18,15,17,20}, true, {"wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> Hulgaz = std::make_shared<dndSim::npc>(dndSim::character("hulgaz", 14, {17,10,18,14,15,20}, true, {"wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> InitiateoftheComet = std::make_shared<dndSim::npc>(dndSim::character("initiateofthecomet", 4, {12,14,16,11,13,17}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> LivingPortent = std::make_shared<dndSim::npc>(dndSim::character("livingportent", 3, {14,16,14,14,16,15}, true, {"dex","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> Malaxxix = std::make_shared<dndSim::npc>(dndSim::character("malaxxix", 18, {23,16,22,22,20,18}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> MinotaurInfiltrator = std::make_shared<dndSim::npc>(dndSim::character("minotaurinfiltrator", 2, {18,11,14,8,16,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Oddlewin = std::make_shared<dndSim::npc>(dndSim::character("oddlewin", 2, {8,14,10,10,16,15}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> OtherworldlyCorrupter = std::make_shared<dndSim::npc>(dndSim::character("otherworldlycorrupter", 17, {12,22,16,22,18,20}, false, {"dex","int"}, "dex", 19));
    std::shared_ptr<dndSim::npc> Riffler = std::make_shared<dndSim::npc>(dndSim::character("riffler", 5, {8,16,12,11,15,17}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> RuinSpider = std::make_shared<dndSim::npc>(dndSim::character("ruinspider", 5, {16,18,14,2,13,4}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> SirJared = std::make_shared<dndSim::npc>(dndSim::character("sirjared", 5, {18,12,17,13,14,17}, false, {"str","con"}, "str", 20));
    std::shared_ptr<dndSim::npc> SolarBastionKnight = std::make_shared<dndSim::npc>(dndSim::character("solarbastionknight", 9, {18,10,17,15,16,17}, true, {"wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> TalonBeast = std::make_shared<dndSim::npc>(dndSim::character("talonbeast", 7, {22,14,19,5,12,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Werevulture = std::make_shared<dndSim::npc>(dndSim::character("werevulture", 4, {16,14,17,11,13,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> BronzeScout = std::make_shared<dndSim::npc>(dndSim::character("bronzescout", 1, {10,16,11,3,14,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GloomWeaver = std::make_shared<dndSim::npc>(dndSim::character("gloomweaver", 9, {11,18,14,15,12,18}, true, {"dex","con"}, "cha", 14));
    std::shared_ptr<dndSim::npc> IronCobra = std::make_shared<dndSim::npc>(dndSim::character("ironcobra", 4, {12,16,14,3,10,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> OakenBolter = std::make_shared<dndSim::npc>(dndSim::character("oakenbolter", 5, {12,18,15,3,10,1}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> ShadowDancer = std::make_shared<dndSim::npc>(dndSim::character("shadowdancer", 7, {12,16,13,11,12,12}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> SoulMonger = std::make_shared<dndSim::npc>(dndSim::character("soulmonger", 11, {8,17,14,19,15,13}, true, {"dex","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> StoneDefender = std::make_shared<dndSim::npc>(dndSim::character("stonedefender", 4, {19,10,17,3,10,1}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> TheAngry = std::make_shared<dndSim::npc>(dndSim::character("theangry", 13, {17,10,19,8,13,6}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> TheHungry = std::make_shared<dndSim::npc>(dndSim::character("thehungry", 11, {19,10,17,6,11,6}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> TheLonely = std::make_shared<dndSim::npc>(dndSim::character("thelonely", 9, {16,12,17,6,11,6}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> TheLost = std::make_shared<dndSim::npc>(dndSim::character("thelost", 7, {17,12,15,6,7,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Anhkolox = std::make_shared<dndSim::npc>(dndSim::character("anhkolox", 9, {22,11,18,4,14,2}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> AurakDraconian = std::make_shared<dndSim::npc>(dndSim::character("aurakdraconian", 6, {13,14,16,16,11,17}, true, {"int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> BozakDraconian = std::make_shared<dndSim::npc>(dndSim::character("bozakdraconian", 2, {14,10,11,11,10,14}, true, {"int","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> Caradoc = std::make_shared<dndSim::npc>(dndSim::character("caradoc", 8, {1,18,12,15,13,19}, false, {"int","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> DragonArmyDragonnel = std::make_shared<dndSim::npc>(dndSim::character("dragonarmydragonnel", 3, {16,15,12,8,13,10}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> DragonArmyOfficer = std::make_shared<dndSim::npc>(dndSim::character("dragonarmyofficer", 3, {16,14,15,12,14,12}, false, {"dex","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> DragonArmySoldier = std::make_shared<dndSim::npc>(dndSim::character("dragonarmysoldier", 1, {15,12,12,10,10,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> FewmasterGholcag = std::make_shared<dndSim::npc>(dndSim::character("fewmastergholcag", 2, {19,8,16,5,7,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GreaterDeathDragon = std::make_shared<dndSim::npc>(dndSim::character("greaterdeathdragon", 14, {23,10,20,11,14,10}, false, {"dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> IstarianDrone = std::make_shared<dndSim::npc>(dndSim::character("istariandrone", 6, {20,10,18,4,10,4}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> KansaldiFire_Eyes = std::make_shared<dndSim::npc>(dndSim::character("kansaldifire_eyes", 11, {18,11,17,16,19,16}, true, {"wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> KapakDraconian = std::make_shared<dndSim::npc>(dndSim::character("kapakdraconian", 3, {11,17,14,12,13,11}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Leedara = std::make_shared<dndSim::npc>(dndSim::character("leedara", 4, {7,13,10,10,12,17}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> LesserDeathDragon = std::make_shared<dndSim::npc>(dndSim::character("lesserdeathdragon", 10, {20,10,18,5,10,5}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Lohezet = std::make_shared<dndSim::npc>(dndSim::character("lohezet", 12, {9,14,12,20,14,11}, true, {"con","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> LordSoth = std::make_shared<dndSim::npc>(dndSim::character("lordsoth", 19, {22,11,20,12,16,20}, true, {"dex","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> RedRuin = std::make_shared<dndSim::npc>(dndSim::character("redruin", 10, {19,12,17,13,14,15}, false, {"str","dex"}, "str", 20));
    std::shared_ptr<dndSim::npc> SivakDraconian = std::make_shared<dndSim::npc>(dndSim::character("sivakdraconian", 4, {18,10,18,13,10,10}, false, {"str","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> SkeletalKnight = std::make_shared<dndSim::npc>(dndSim::character("skeletalknight", 7, {20,10,16,13,14,10}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> WastelandDragonnel = std::make_shared<dndSim::npc>(dndSim::character("wastelanddragonnel", 3, {16,16,12,8,13,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> WerstenKern = std::make_shared<dndSim::npc>(dndSim::character("werstenkern", 14, {21,10,18,13,14,16}, true, {"con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> AdultTimeDragon = std::make_shared<dndSim::npc>(dndSim::character("adulttimedragon", 18, {25,14,23,23,16,20}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> AtharNull = std::make_shared<dndSim::npc>(dndSim::character("atharnull", 5, {12,16,14,15,14,10}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> AurumachRilmani = std::make_shared<dndSim::npc>(dndSim::character("aurumachrilmani", 17, {20,21,18,21,18,16}, true, {"dex","int"}, "int", 18));
    std::shared_ptr<dndSim::npc> AvoralGuardinal = std::make_shared<dndSim::npc>(dndSim::character("avoralguardinal", 9, {16,19,17,16,16,18}, true, {"dex","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Baernaloth = std::make_shared<dndSim::npc>(dndSim::character("baernaloth", 17, {19,14,18,22,16,21}, true, {"con","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> BariaurWanderer = std::make_shared<dndSim::npc>(dndSim::character("bariaurwanderer", 3, {18,14,15,11,15,10}, true, {"str","dex"}, "wis", 14));
    std::shared_ptr<dndSim::npc> BleakCabalVoidSoother = std::make_shared<dndSim::npc>(dndSim::character("bleakcabalvoidsoother", 3, {16,14,12,12,15,10}, true, {"con","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> CraniumRatSqueakerSwarm = std::make_shared<dndSim::npc>(dndSim::character("craniumratsqueakerswarm", 5, {9,14,10,15,11,14}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> CuprilachRilmani = std::make_shared<dndSim::npc>(dndSim::character("cuprilachrilmani", 12, {12,20,16,16,15,14}, true, {"dex","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> Dabus = std::make_shared<dndSim::npc>(dndSim::character("dabus", 2, {8,14,12,16,15,14}, false, {"int","wis"}, "dex", 12));
    std::shared_ptr<dndSim::npc> Darkweaver = std::make_shared<dndSim::npc>(dndSim::character("darkweaver", 10, {10,17,14,17,14,15}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> DecatonModron = std::make_shared<dndSim::npc>(dndSim::character("decatonmodron", 8, {18,12,16,15,15,11}, true, {"int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> DoomguardDoomLord = std::make_shared<dndSim::npc>(dndSim::character("doomguarddoomlord", 12, {20,12,16,15,14,18}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> DoomguardRotBlade = std::make_shared<dndSim::npc>(dndSim::character("doomguardrotblade", 6, {18,12,16,12,10,15}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> EaterofKnowledge = std::make_shared<dndSim::npc>(dndSim::character("eaterofknowledge", 6, {18,10,17,18,16,15}, true, {"str","int"}, "int", 15));
    std::shared_ptr<dndSim::npc> EquinalGuardinal = std::make_shared<dndSim::npc>(dndSim::character("equinalguardinal", 6, {23,16,17,15,14,12}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> FarastuDemodand = std::make_shared<dndSim::npc>(dndSim::character("farastudemodand", 11, {20,13,16,8,12,16}, true, {"dex","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> FatedShaker = std::make_shared<dndSim::npc>(dndSim::character("fatedshaker", 5, {10,16,10,15,16,15}, true, {"int","wis"}, "wis", 13));
    std::shared_ptr<dndSim::npc> FerrumachRilmani = std::make_shared<dndSim::npc>(dndSim::character("ferrumachrilmani", 9, {19,14,18,15,14,10}, true, {"str","con"}, "int", 18));
    std::shared_ptr<dndSim::npc> FraternityofOrderLawBender = std::make_shared<dndSim::npc>(dndSim::character("fraternityoforderlawbender", 9, {8,15,12,19,16,14}, true, {"con","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GithzeraiFuturist = std::make_shared<dndSim::npc>(dndSim::character("githzeraifuturist", 9, {14,17,15,17,17,13}, true, {"str","dex","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> GithzeraiTraveler = std::make_shared<dndSim::npc>(dndSim::character("githzeraitraveler", 3, {12,15,12,14,16,10}, true, {"str","dex","int","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> GithzeraiUniter = std::make_shared<dndSim::npc>(dndSim::character("githzeraiuniter", 7, {13,17,15,15,17,16}, true, {"str","dex","int","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> HandsofHavocFireStarter = std::make_shared<dndSim::npc>(dndSim::character("handsofhavocfirestarter", 4, {16,14,14,10,16,11}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> HarmoniumCaptain = std::make_shared<dndSim::npc>(dndSim::character("harmoniumcaptain", 8, {19,10,14,12,16,16}, false, {"str","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> HarmoniumPeacekeeper = std::make_shared<dndSim::npc>(dndSim::character("harmoniumpeacekeeper", 3, {16,10,14,12,14,11}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> HeraldsofDustRemnant = std::make_shared<dndSim::npc>(dndSim::character("heraldsofdustremnant", 4, {8,14,15,17,14,11}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> HextonModron = std::make_shared<dndSim::npc>(dndSim::character("hextonmodron", 13, {19,16,17,19,17,15}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> HoundArchon = std::make_shared<dndSim::npc>(dndSim::character("houndarchon", 4, {18,12,15,11,14,15}, true, {"int","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> KelubarDemodand = std::make_shared<dndSim::npc>(dndSim::character("kelubardemodand", 13, {22,13,18,14,15,18}, true, {"dex","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Kolyarut = std::make_shared<dndSim::npc>(dndSim::character("kolyarut", 20, {25,12,19,25,22,18}, false, {"int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> LanternArchon = std::make_shared<dndSim::npc>(dndSim::character("lanternarchon", 2, {1,16,12,6,12,13}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Maelephant = std::make_shared<dndSim::npc>(dndSim::character("maelephant", 10, {19,10,18,10,16,12}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> MercykillerBloodhound = std::make_shared<dndSim::npc>(dndSim::character("mercykillerbloodhound", 7, {17,12,16,12,15,8}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> MindsEyeMatterSmith = std::make_shared<dndSim::npc>(dndSim::character("mindseyemattersmith", 4, {10,14,14,14,14,16}, true, {"int","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> MustevalGuardinal = std::make_shared<dndSim::npc>(dndSim::character("mustevalguardinal", 2, {12,16,11,14,15,14}, true, {"dex","cha"}, "wis", 13));
    std::shared_ptr<dndSim::npc> NonatonModron = std::make_shared<dndSim::npc>(dndSim::character("nonatonmodron", 10, {18,13,16,16,16,13}, true, {"int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> OctonModron = std::make_shared<dndSim::npc>(dndSim::character("octonmodron", 11, {18,14,17,17,16,14}, true, {"int","wis"}, "int", 18));
    std::shared_ptr<dndSim::npc> RazorvineBlight = std::make_shared<dndSim::npc>(dndSim::character("razorvineblight", 1, {10,15,13,5,10,3}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SeptonModron = std::make_shared<dndSim::npc>(dndSim::character("septonmodron", 12, {18,15,17,18,16,14}, true, {"int","wis"}, "int", 17));
    std::shared_ptr<dndSim::npc> ShatorDemodand = std::make_shared<dndSim::npc>(dndSim::character("shatordemodand", 16, {24,15,17,21,16,20}, true, {"dex","wis"}, "int", 19));
    std::shared_ptr<dndSim::npc> Shemeshka = std::make_shared<dndSim::npc>(dndSim::character("shemeshka", 14, {20,14,14,21,16,18}, true, {"dex","int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> SocietyofSensationMuse = std::make_shared<dndSim::npc>(dndSim::character("societyofsensationmuse", 3, {8,16,12,15,14,17}, true, {"dex","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> SwarmofSunflies = std::make_shared<dndSim::npc>(dndSim::character("swarmofsunflies", 1, {6,17,10,4,10,6}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> TimeDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("timedragonwyrmling", 5, {19,10,17,17,13,17}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> TranscendentOrderConduit = std::make_shared<dndSim::npc>(dndSim::character("transcendentorderconduit", 8, {10,19,14,10,18,12}, false, {"wis","cha"}, "dex", 18));
    std::shared_ptr<dndSim::npc> TranscendentOrderInstinct = std::make_shared<dndSim::npc>(dndSim::character("transcendentorderinstinct", 3, {10,16,12,10,16,12}, false, {"wis","cha"}, "dex", 16));
    std::shared_ptr<dndSim::npc> VargouilleReflection = std::make_shared<dndSim::npc>(dndSim::character("vargouillereflection", 1, {6,15,14,6,10,2}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> WardenArchon = std::make_shared<dndSim::npc>(dndSim::character("wardenarchon", 8, {20,10,17,15,18,18}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> YoungTimeDragon = std::make_shared<dndSim::npc>(dndSim::character("youngtimedragon", 11, {20,12,20,20,15,17}, false, {"dex","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> AeorianAbsorber = std::make_shared<dndSim::npc>(dndSim::character("aeorianabsorber", 10, {21,18,18,6,14,8}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> AeorianNullifier = std::make_shared<dndSim::npc>(dndSim::character("aeoriannullifier", 12, {19,14,18,7,14,18}, true, {"wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> AeorianReverser = std::make_shared<dndSim::npc>(dndSim::character("aeorianreverser", 8, {21,16,18,6,14,8}, false, {"wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> BloodHunter = std::make_shared<dndSim::npc>(dndSim::character("bloodhunter", 5, {18,12,15,9,16,11}, true, {"str","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Bolbara = std::make_shared<dndSim::npc>(dndSim::character("bolbara", 3, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> BristledMoorbounder = std::make_shared<dndSim::npc>(dndSim::character("bristledmoorbounder", 3, {18,14,14,2,13,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CoreSpawnCrawler = std::make_shared<dndSim::npc>(dndSim::character("corespawncrawler", 1, {7,14,10,9,12,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> CoreSpawnEmissary = std::make_shared<dndSim::npc>(dndSim::character("corespawnemissary", 6, {17,15,18,8,13,8}, false, {"dex","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> CoreSpawnSeer = std::make_shared<dndSim::npc>(dndSim::character("corespawnseer", 13, {14,12,18,22,19,16}, false, {"dex","int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> CoreSpawnWorm = std::make_shared<dndSim::npc>(dndSim::character("corespawnworm", 15, {26,5,20,6,8,4}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> FrostGiantZombie = std::make_shared<dndSim::npc>(dndSim::character("frostgiantzombie", 9, {23,6,21,3,6,5}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> FrostWorm = std::make_shared<dndSim::npc>(dndSim::character("frostworm", 17, {28,8,22,1,5,5}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> GearkeeperConstruct = std::make_shared<dndSim::npc>(dndSim::character("gearkeeperconstruct", 10, {20,16,18,3,11,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Gloomstalker = std::make_shared<dndSim::npc>(dndSim::character("gloomstalker", 6, {22,16,14,5,17,14}, false, {"str","dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> GuardianWolf = std::make_shared<dndSim::npc>(dndSim::character("guardianwolf", 4, {22,14,16,5,12,8}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> HorizonbackTortoise = std::make_shared<dndSim::npc>(dndSim::character("horizonbacktortoise", 8, {28,3,25,4,10,5}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> HuskZombie = std::make_shared<dndSim::npc>(dndSim::character("huskzombie", 1, {16,10,16,3,6,5}, false, {"con","wis"}, "str", 10));
    std::shared_ptr<dndSim::npc> MerrowShallowpriest = std::make_shared<dndSim::npc>(dndSim::character("merrowshallowpriest", 4, {18,14,15,11,16,9}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> Moorbounder = std::make_shared<dndSim::npc>(dndSim::character("moorbounder", 1, {18,14,14,2,13,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Nergaliid = std::make_shared<dndSim::npc>(dndSim::character("nergaliid", 3, {18,12,20,12,10,12}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> SahuaginWarlockofUkotoa = std::make_shared<dndSim::npc>(dndSim::character("sahuaginwarlockofukotoa", 3, {14,10,11,8,8,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> SeaFury = std::make_shared<dndSim::npc>(dndSim::character("seafury", 12, {19,15,16,12,12,18}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> Shadowghast = std::make_shared<dndSim::npc>(dndSim::character("shadowghast", 5, {14,20,12,12,11,8}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SkenZabriss = std::make_shared<dndSim::npc>(dndSim::character("skenzabriss", 1, {16,11,15,13,10,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> SwavainBasilisk = std::make_shared<dndSim::npc>(dndSim::character("swavainbasilisk", 7, {15,16,15,2,8,7}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Udaak = std::make_shared<dndSim::npc>(dndSim::character("udaak", 16, {26,14,22,3,11,10}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> AnimatedChainedLibrary = std::make_shared<dndSim::npc>(dndSim::character("animatedchainedlibrary", 1, {15,8,14,1,5,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ArrantQuill = std::make_shared<dndSim::npc>(dndSim::character("arrantquill", 11, {10,18,16,16,15,20}, true, {"int","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> BakMei = std::make_shared<dndSim::npc>(dndSim::character("bakmei", 13, {10,18,18,13,17,16}, false, {"str","dex","con","int","wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> CanopicGolem = std::make_shared<dndSim::npc>(dndSim::character("canopicgolem", 13, {20,10,20,7,11,1}, false, {"int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> CloudGiantGhost = std::make_shared<dndSim::npc>(dndSim::character("cloudgiantghost", 9, {27,11,10,12,16,17}, true, {"wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> CorruptedAvatarofLurue = std::make_shared<dndSim::npc>(dndSim::character("corruptedavataroflurue", 8, {18,14,15,11,17,16}, false, {"int","wis","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> FungalServant = std::make_shared<dndSim::npc>(dndSim::character("fungalservant", 15, {18,10,17,11,18,16}, true, {"con","int","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Gingwatzim = std::make_shared<dndSim::npc>(dndSim::character("gingwatzim", 2, {3,15,16,4,11,6}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> ImmortalLotusMonk = std::make_shared<dndSim::npc>(dndSim::character("immortallotusmonk", 5, {12,16,14,11,14,10}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> JadeTigress = std::make_shared<dndSim::npc>(dndSim::character("jadetigress", 8, {18,14,15,11,16,11}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> KTulah = std::make_shared<dndSim::npc>(dndSim::character("ktulah", 2, {10,12,13,12,15,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> LichenLich = std::make_shared<dndSim::npc>(dndSim::character("lichenlich", 18, {11,16,16,14,20,16}, true, {"con","int","wis","cha"}, "wis", 20));
    std::shared_ptr<dndSim::npc> LightningGolem = std::make_shared<dndSim::npc>(dndSim::character("lightninggolem", 5, {19,9,18,6,10,5}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> MasterSage = std::make_shared<dndSim::npc>(dndSim::character("mastersage", 5, {8,10,10,20,18,11}, true, {}, "int", 10));
    std::shared_ptr<dndSim::npc> MimicChair = std::make_shared<dndSim::npc>(dndSim::character("mimicchair", 2, {17,12,15,5,13,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> NintraSiotta = std::make_shared<dndSim::npc>(dndSim::character("nintrasiotta", 16, {16,24,16,17,15,24}, true, {"str","dex","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> Parasite_infestedBehir = std::make_shared<dndSim::npc>(dndSim::character("parasite_infestedbehir", 11, {23,16,18,7,14,12}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> RamSugar = std::make_shared<dndSim::npc>(dndSim::character("ramsugar", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> SapphireSentinel = std::make_shared<dndSim::npc>(dndSim::character("sapphiresentinel", 10, {22,9,20,3,11,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Shemshime = std::make_shared<dndSim::npc>(dndSim::character("shemshime", 4, {6,17,10,17,14,16}, false, {"int","wis"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Skitterwidget = std::make_shared<dndSim::npc>(dndSim::character("skitterwidget", 5, {16,14,18,3,10,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> SteelCrane = std::make_shared<dndSim::npc>(dndSim::character("steelcrane", 8, {13,18,18,13,17,14}, false, {"dex","int"}, "dex", 17));
    std::shared_ptr<dndSim::npc> StormGiantSkeleton = std::make_shared<dndSim::npc>(dndSim::character("stormgiantskeleton", 16, {29,14,15,3,8,1}, false, {"str","con"}, "str", 13));
    std::shared_ptr<dndSim::npc> ValinSarnaster = std::make_shared<dndSim::npc>(dndSim::character("valinsarnaster", 16, {18,10,17,11,18,16}, true, {"con","int","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Zikzokrishka = std::make_shared<dndSim::npc>(dndSim::character("zikzokrishka", 17, {25,10,23,16,15,19}, false, {"dex","con","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Dragonfang = std::make_shared<dndSim::npc>(dndSim::character("dragonfang", 5, {11,16,14,12,12,14}, false, {"wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Dragonsoul = std::make_shared<dndSim::npc>(dndSim::character("dragonsoul", 7, {11,18,14,13,12,16}, false, {"wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> IceToad = std::make_shared<dndSim::npc>(dndSim::character("icetoad", 1, {13,10,14,8,10,6}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> NaergothBladelord = std::make_shared<dndSim::npc>(dndSim::character("naergothbladelord", 11, {20,12,16,12,14,16}, false, {"dex","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Neronvain = std::make_shared<dndSim::npc>(dndSim::character("neronvain", 9, {8,17,15,16,13,18}, false, {"con","wis"}, "dex", 17));
    std::shared_ptr<dndSim::npc> Severin = std::make_shared<dndSim::npc>(dndSim::character("severin", 11, {10,13,16,17,12,20}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> MormesktheWraith = std::make_shared<dndSim::npc>(dndSim::character("mormeskthewraith", 3, {6,16,16,12,14,15}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> NezznartheBlackSpider = std::make_shared<dndSim::npc>(dndSim::character("nezznartheblackspider", 2, {9,13,10,16,14,13}, true, {"int","wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> SildarHallwinter = std::make_shared<dndSim::npc>(dndSim::character("sildarhallwinter", 1, {13,10,12,10,11,10}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> AerisiKalinoth = std::make_shared<dndSim::npc>(dndSim::character("aerisikalinoth", 7, {8,16,12,17,10,16}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> BastianThermandar = std::make_shared<dndSim::npc>(dndSim::character("bastianthermandar", 8, {12,14,15,11,9,18}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> BlackEarthGuard = std::make_shared<dndSim::npc>(dndSim::character("blackearthguard", 2, {17,11,14,10,10,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> BlackEarthPriest = std::make_shared<dndSim::npc>(dndSim::character("blackearthpriest", 3, {15,11,14,12,10,16}, true, {}, "cha", 17));
    std::shared_ptr<dndSim::npc> Burrowshark = std::make_shared<dndSim::npc>(dndSim::character("burrowshark", 4, {18,12,16,10,11,13}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> CrushingWavePriest = std::make_shared<dndSim::npc>(dndSim::character("crushingwavepriest", 2, {15,11,14,10,11,16}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> DarkTideKnight = std::make_shared<dndSim::npc>(dndSim::character("darktideknight", 3, {17,16,14,10,11,11}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> DranninSplithelm = std::make_shared<dndSim::npc>(dndSim::character("dranninsplithelm", 7, {19,10,18,11,8,12}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> ElizarDryflagon = std::make_shared<dndSim::npc>(dndSim::character("elizardryflagon", 5, {13,15,14,11,18,10}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> EternalFlameGuardian = std::make_shared<dndSim::npc>(dndSim::character("eternalflameguardian", 2, {15,13,14,8,11,13}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> EternalFlamePriest = std::make_shared<dndSim::npc>(dndSim::character("eternalflamepriest", 3, {12,15,14,10,11,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Fathomer = std::make_shared<dndSim::npc>(dndSim::character("fathomer", 2, {14,11,14,11,11,15}, true, {}, "cha", 10));
    std::shared_ptr<dndSim::npc> FeathergaleKnight = std::make_shared<dndSim::npc>(dndSim::character("feathergaleknight", 1, {14,14,12,11,10,14}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Flamewrath = std::make_shared<dndSim::npc>(dndSim::character("flamewrath", 6, {10,14,16,11,10,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> GarShatterkeel = std::make_shared<dndSim::npc>(dndSim::character("garshatterkeel", 9, {15,15,16,12,18,13}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> Ghald = std::make_shared<dndSim::npc>(dndSim::character("ghald", 7, {19,17,16,14,13,17}, false, {"dex","con","int","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Hellenrae = std::make_shared<dndSim::npc>(dndSim::character("hellenrae", 5, {13,18,14,10,15,13}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> HowlingHatredPriest = std::make_shared<dndSim::npc>(dndSim::character("howlinghatredpriest", 2, {12,16,10,14,10,14}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> Hurricane = std::make_shared<dndSim::npc>(dndSim::character("hurricane", 2, {12,16,13,10,12,10}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> Imix = std::make_shared<dndSim::npc>(dndSim::character("imix", 19, {19,24,22,15,16,23}, true, {"dex","con","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> MarlosUrnrayle = std::make_shared<dndSim::npc>(dndSim::character("marlosurnrayle", 8, {17,11,18,12,13,17}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> MirajVizann = std::make_shared<dndSim::npc>(dndSim::character("mirajvizann", 6, {12,10,17,13,11,18}, true, {}, "cha", 10));
    std::shared_ptr<dndSim::npc> Ogrémoch = std::make_shared<dndSim::npc>(dndSim::character("ogrémoch", 20, {26,11,28,11,15,22}, true, {"str","con","wis"}, "cha", 20));
    std::shared_ptr<dndSim::npc> Olhydra = std::make_shared<dndSim::npc>(dndSim::character("olhydra", 18, {21,22,24,17,18,23}, true, {"str","con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> One_EyedShiver = std::make_shared<dndSim::npc>(dndSim::character("one_eyedshiver", 3, {10,14,12,13,13,17}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Oreioth = std::make_shared<dndSim::npc>(dndSim::character("oreioth", 2, {8,13,14,16,9,11}, true, {"wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> Razerblast = std::make_shared<dndSim::npc>(dndSim::character("razerblast", 5, {16,11,16,9,10,13}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> ShoalarQuanderil = std::make_shared<dndSim::npc>(dndSim::character("shoalarquanderil", 4, {11,12,16,14,10,17}, true, {}, "cha", 10));
    std::shared_ptr<dndSim::npc> Skyweaver = std::make_shared<dndSim::npc>(dndSim::character("skyweaver", 3, {8,14,12,11,10,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> Stonemelder = std::make_shared<dndSim::npc>(dndSim::character("stonemelder", 4, {15,10,16,12,11,17}, true, {}, "cha", 17));
    std::shared_ptr<dndSim::npc> ThurlMerosska = std::make_shared<dndSim::npc>(dndSim::character("thurlmerosska", 3, {16,14,14,11,10,15}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Vanifer = std::make_shared<dndSim::npc>(dndSim::character("vanifer", 9, {11,16,17,12,13,19}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> WigganNettlebee = std::make_shared<dndSim::npc>(dndSim::character("wiggannettlebee", 2, {8,12,12,14,15,13}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> Windharrow = std::make_shared<dndSim::npc>(dndSim::character("windharrow", 3, {10,16,12,14,10,17}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> Yan_C_Bin = std::make_shared<dndSim::npc>(dndSim::character("yan_c_bin", 18, {18,24,24,16,21,23}, true, {"dex","wis","cha"}, "cha", 22));
    std::shared_ptr<dndSim::npc> AnchoriteofTalos = std::make_shared<dndSim::npc>(dndSim::character("anchoriteoftalos", 3, {16,13,14,9,15,12}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> FalcontheHunter = std::make_shared<dndSim::npc>(dndSim::character("falconthehunter", 4, {14,15,16,11,16,15}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> GorthoktheThunderBoar = std::make_shared<dndSim::npc>(dndSim::character("gorthokthethunderboar", 6, {20,11,19,6,10,14}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> DankwoodDuergar = std::make_shared<dndSim::npc>(dndSim::character("dankwoodduergar", 2, {16,11,14,11,10,9}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> DankwoodGrung = std::make_shared<dndSim::npc>(dndSim::character("dankwoodgrung", 1, {7,16,15,10,11,15}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> KingRobbittheSlimy = std::make_shared<dndSim::npc>(dndSim::character("kingrobbittheslimy", 2, {7,16,15,10,11,15}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> SludgeHag = std::make_shared<dndSim::npc>(dndSim::character("sludgehag", 3, {18,12,16,13,14,14}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> AncientDeepCrow = std::make_shared<dndSim::npc>(dndSim::character("ancientdeepcrow", 15, {23,16,23,10,15,19}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> AuspiciaDran = std::make_shared<dndSim::npc>(dndSim::character("auspiciadran", 2, {16,14,14,15,12,10}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> BrahmaLutier = std::make_shared<dndSim::npc>(dndSim::character("brahmalutier", 2, {12,15,12,11,13,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> ChaosQuadrapod = std::make_shared<dndSim::npc>(dndSim::character("chaosquadrapod", 4, {18,13,15,6,10,4}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ClockworkDragon = std::make_shared<dndSim::npc>(dndSim::character("clockworkdragon", 1, {14,10,12,10,11,13}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> DeepCrow = std::make_shared<dndSim::npc>(dndSim::character("deepcrow", 9, {20,16,18,8,15,14}, false, {"con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> DonaarBlitzen = std::make_shared<dndSim::npc>(dndSim::character("donaarblitzen", 3, {17,8,14,10,10,16}, true, {"wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Flabbergast = std::make_shared<dndSim::npc>(dndSim::character("flabbergast", 4, {10,14,10,17,13,13}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> JimDarkmagic = std::make_shared<dndSim::npc>(dndSim::character("jimdarkmagic", 5, {8,14,10,18,12,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> KthrissDrowb = std::make_shared<dndSim::npc>(dndSim::character("kthrissdrowb", 3, {8,14,12,14,11,18}, true, {"str","dex","con","int","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> KegRobot = std::make_shared<dndSim::npc>(dndSim::character("kegrobot", 2, {16,16,15,6,8,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Môrgæn = std::make_shared<dndSim::npc>(dndSim::character("môrgæn", 4, {12,18,12,12,14,10}, true, {"str","dex"}, "wis", 16));
    std::shared_ptr<dndSim::npc> OakTruestrike = std::make_shared<dndSim::npc>(dndSim::character("oaktruestrike", 2, {13,16,14,10,13,11}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> OminDran = std::make_shared<dndSim::npc>(dndSim::character("omindran", 5, {16,8,14,11,18,12}, true, {"wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> PendragonBeestinger = std::make_shared<dndSim::npc>(dndSim::character("pendragonbeestinger", 2, {10,14,12,17,10,11}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> PhoenixAnvil = std::make_shared<dndSim::npc>(dndSim::character("phoenixanvil", 2, {15,10,12,13,16,13}, true, {}, "wis", 18));
    std::shared_ptr<dndSim::npc> PortentiaDran = std::make_shared<dndSim::npc>(dndSim::character("portentiadran", 3, {12,18,16,13,12,14}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> ProphetessDran = std::make_shared<dndSim::npc>(dndSim::character("prophetessdran", 2, {14,10,12,13,16,13}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> RosieBeestinger = std::make_shared<dndSim::npc>(dndSim::character("rosiebeestinger", 3, {8,16,12,12,14,14}, true, {"str","dex"}, "wis", 15));
    std::shared_ptr<dndSim::npc> SplugoththeReturned = std::make_shared<dndSim::npc>(dndSim::character("splugoththereturned", 2, {10,14,12,14,11,10}, false, {"int","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Viari = std::make_shared<dndSim::npc>(dndSim::character("viari", 5, {12,20,14,10,8,14}, false, {"dex","int"}, "dex", 18));
    std::shared_ptr<dndSim::npc> WalnutDankgrass = std::make_shared<dndSim::npc>(dndSim::character("walnutdankgrass", 3, {8,16,14,10,18,10}, true, {"int","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> Adranach = std::make_shared<dndSim::npc>(dndSim::character("adranach", 12, {23,16,14,8,14,11}, false, {"str","dex"}, "str", 17));
    std::shared_ptr<dndSim::npc> AshariFiretamer = std::make_shared<dndSim::npc>(dndSim::character("asharifiretamer", 7, {8,15,14,12,18,11}, true, {}, "wis", 17));
    std::shared_ptr<dndSim::npc> AshariSkydancer = std::make_shared<dndSim::npc>(dndSim::character("ashariskydancer", 5, {10,18,10,12,16,11}, true, {"dex"}, "wis", 14));
    std::shared_ptr<dndSim::npc> AshariStoneguard = std::make_shared<dndSim::npc>(dndSim::character("asharistoneguard", 7, {18,10,20,10,14,9}, true, {"str","con","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> AshariWaverider = std::make_shared<dndSim::npc>(dndSim::character("ashariwaverider", 5, {15,14,12,10,16,13}, true, {"con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> CentaurSkeleton = std::make_shared<dndSim::npc>(dndSim::character("centaurskeleton", 2, {17,14,14,6,9,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> CinderslagElemental = std::make_shared<dndSim::npc>(dndSim::character("cinderslagelemental", 8, {15,12,17,1,10,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> ClaspCutthroat = std::make_shared<dndSim::npc>(dndSim::character("claspcutthroat", 3, {10,18,12,8,14,9}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ClaspEnforcer = std::make_shared<dndSim::npc>(dndSim::character("claspenforcer", 5, {16,12,18,8,11,14}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> CobaltGolem = std::make_shared<dndSim::npc>(dndSim::character("cobaltgolem", 18, {28,9,22,3,11,1}, false, {}, "str", 21));
    std::shared_ptr<dndSim::npc> ColdSnapSpirit = std::make_shared<dndSim::npc>(dndSim::character("coldsnapspirit", 5, {10,20,14,2,7,3}, false, {"dex","wis"}, "dex", 18));
    std::shared_ptr<dndSim::npc> CyclopsStormcaller = std::make_shared<dndSim::npc>(dndSim::character("cyclopsstormcaller", 10, {16,10,18,15,8,20}, true, {"str","dex","con","int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> DemonfeedSpider = std::make_shared<dndSim::npc>(dndSim::character("demonfeedspider", 8, {16,18,15,6,10,6}, false, {"dex"}, "dex", 16));
    std::shared_ptr<dndSim::npc> DemonfeedSpiderling = std::make_shared<dndSim::npc>(dndSim::character("demonfeedspiderling", 1, {10,12,12,2,7,3}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> DotyX = std::make_shared<dndSim::npc>(dndSim::character("dotyx", 6, {14,12,14,4,10,6}, false, {"dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> EmberRoc = std::make_shared<dndSim::npc>(dndSim::character("emberroc", 14, {26,10,18,4,11,9}, false, {"dex","con","wis","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> GrogStrongjaw = std::make_shared<dndSim::npc>(dndSim::character("grogstrongjaw", 18, {26,15,22,8,10,13}, false, {"str","con"}, "str", 19));
    std::shared_ptr<dndSim::npc> JourraeltheCaedogeist = std::make_shared<dndSim::npc>(dndSim::character("jourraelthecaedogeist", 15, {13,24,20,14,17,15}, true, {"dex","con","wis"}, "wis", 19));
    std::shared_ptr<dndSim::npc> KeylethVoiceoftheTempest = std::make_shared<dndSim::npc>(dndSim::character("keylethvoiceofthetempest", 18, {14,15,16,15,22,15}, true, {"str","dex","con","int","wis","cha"}, "wis", 17));
    std::shared_ptr<dndSim::npc> KraghammerGoat_Knight = std::make_shared<dndSim::npc>(dndSim::character("kraghammergoat_knight", 3, {17,8,14,10,11,16}, true, {"str","dex","con","int","wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> MageHunterGolem = std::make_shared<dndSim::npc>(dndSim::character("magehuntergolem", 15, {24,9,26,3,11,1}, false, {"wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> MagmaLandshark = std::make_shared<dndSim::npc>(dndSim::character("magmalandshark", 14, {22,11,22,2,14,5}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> PercivaldeRolo = std::make_shared<dndSim::npc>(dndSim::character("percivalderolo", 18, {12,22,14,20,16,14}, false, {"str","con"}, "dex", 18));
    std::shared_ptr<dndSim::npc> PikeTrickfoot = std::make_shared<dndSim::npc>(dndSim::character("piketrickfoot", 17, {19,12,18,14,20,14}, true, {"wis","cha"}, "wis", 23));
    std::shared_ptr<dndSim::npc> Plainscow = std::make_shared<dndSim::npc>(dndSim::character("plainscow", 2, {18,8,16,2,10,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> PlatinumGolem = std::make_shared<dndSim::npc>(dndSim::character("platinumgolem", 16, {22,10,21,3,12,1}, false, {}, "str", 21));
    std::shared_ptr<dndSim::npc> RavagerSlaughterLord = std::make_shared<dndSim::npc>(dndSim::character("ravagerslaughterlord", 9, {22,14,20,12,16,16}, true, {"str","con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> RavagerStabby_Stabber = std::make_shared<dndSim::npc>(dndSim::character("ravagerstabby_stabber", 3, {10,16,12,10,8,7}, false, {"wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> RemnantChosen = std::make_shared<dndSim::npc>(dndSim::character("remnantchosen", 12, {10,14,14,15,16,20}, true, {"cha","wis"}, "cha", 12));
    std::shared_ptr<dndSim::npc> RemnantCultist = std::make_shared<dndSim::npc>(dndSim::character("remnantcultist", 7, {10,16,12,18,8,8}, true, {"wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> RivermawBrawler = std::make_shared<dndSim::npc>(dndSim::character("rivermawbrawler", 4, {17,14,15,14,16,8}, false, {"str","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> RivermawStormborn = std::make_shared<dndSim::npc>(dndSim::character("rivermawstormborn", 5, {18,12,18,11,10,12}, true, {"con","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> ScanlanShorthalt = std::make_shared<dndSim::npc>(dndSim::character("scanlanshorthalt", 15, {13,11,16,16,7,22}, true, {"str","dex","con","int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> TaryonDarrington = std::make_shared<dndSim::npc>(dndSim::character("taryondarrington", 9, {12,11,14,18,8,15}, true, {"con","int"}, "int", 15));
    std::shared_ptr<dndSim::npc> Trinket = std::make_shared<dndSim::npc>(dndSim::character("trinket", 5, {19,10,16,5,13,7}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Vexahlia = std::make_shared<dndSim::npc>(dndSim::character("vexahlia", 18, {7,20,12,14,16,17}, true, {"str","dex","con","int","wis","cha"}, "cha", 21));
    std::shared_ptr<dndSim::npc> VosskyrissSerpentfolk = std::make_shared<dndSim::npc>(dndSim::character("vosskyrissserpentfolk", 3, {16,15,15,12,10,14}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> VosskyrissSerpentfolkGhost = std::make_shared<dndSim::npc>(dndSim::character("vosskyrissserpentfolkghost", 4, {7,16,10,12,10,16}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> WraithrootTree = std::make_shared<dndSim::npc>(dndSim::character("wraithroottree", 14, {23,8,24,12,16,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> YoungMagmaLandshark = std::make_shared<dndSim::npc>(dndSim::character("youngmagmalandshark", 9, {20,11,21,2,10,5}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> ArdwynElderofMeadowfen = std::make_shared<dndSim::npc>(dndSim::character("ardwynelderofmeadowfen", 2, {10,11,12,13,18,13}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Ashsnake = std::make_shared<dndSim::npc>(dndSim::character("ashsnake", 4, {16,12,16,4,12,4}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> AspectofFire = std::make_shared<dndSim::npc>(dndSim::character("aspectoffire", 12, {21,13,18,6,15,14}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> BennaSeridan = std::make_shared<dndSim::npc>(dndSim::character("bennaseridan", 2, {14,17,14,14,11,14}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> BirdfolkDockmaster = std::make_shared<dndSim::npc>(dndSim::character("birdfolkdockmaster", 2, {10,16,13,8,13,15}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> CervanBanditGeneral = std::make_shared<dndSim::npc>(dndSim::character("cervanbanditgeneral", 2, {14,17,14,14,11,14}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Cobblefright = std::make_shared<dndSim::npc>(dndSim::character("cobblefright", 5, {19,11,16,6,8,5}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> CorvaxRevayne = std::make_shared<dndSim::npc>(dndSim::character("corvaxrevayne", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> CorvumAssassin = std::make_shared<dndSim::npc>(dndSim::character("corvumassassin", 5, {10,16,11,14,14,10}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> CorvumDiviner = std::make_shared<dndSim::npc>(dndSim::character("corvumdiviner", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> CorvumNecromancer = std::make_shared<dndSim::npc>(dndSim::character("corvumnecromancer", 6, {9,14,12,18,10,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> ForestProwler = std::make_shared<dndSim::npc>(dndSim::character("forestprowler", 4, {15,18,14,4,14,9}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> FrayMerridan = std::make_shared<dndSim::npc>(dndSim::character("fraymerridan", 1, {13,15,12,14,14,12}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> GabeWindsworth = std::make_shared<dndSim::npc>(dndSim::character("gabewindsworth", 6, {8,15,12,18,12,15}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GallusDruid = std::make_shared<dndSim::npc>(dndSim::character("gallusdruid", 4, {12,13,14,10,18,10}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> GallusMonk = std::make_shared<dndSim::npc>(dndSim::character("gallusmonk", 5, {11,18,14,11,16,10}, false, {"dex"}, "dex", 17));
    std::shared_ptr<dndSim::npc> GallusNecromancer = std::make_shared<dndSim::npc>(dndSim::character("gallusnecromancer", 6, {9,14,12,18,14,10}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> GlindaNightseed = std::make_shared<dndSim::npc>(dndSim::character("glindanightseed", 6, {9,14,12,18,14,10}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> HaveloftheAutumnMoon = std::make_shared<dndSim::npc>(dndSim::character("haveloftheautumnmoon", 2, {6,10,12,10,16,10}, true, {"int","wis"}, "wis", 10));
    std::shared_ptr<dndSim::npc> HedgeBard = std::make_shared<dndSim::npc>(dndSim::character("hedgebard", 2, {11,14,12,10,13,16}, true, {"dex","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> HedgeWitch = std::make_shared<dndSim::npc>(dndSim::character("hedgewitch", 1, {8,10,10,14,15,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> JerbeenSwashbuckler = std::make_shared<dndSim::npc>(dndSim::character("jerbeenswashbuckler", 3, {12,18,12,14,11,15}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> KralltheScavengerKing = std::make_shared<dndSim::npc>(dndSim::character("krallthescavengerking", 3, {14,17,16,12,14,14}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> LesserDemon = std::make_shared<dndSim::npc>(dndSim::character("lesserdemon", 1, {11,15,14,5,8,3}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> LumaClericofArdea = std::make_shared<dndSim::npc>(dndSim::character("lumaclericofardea", 2, {10,13,12,10,16,14}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> LumaWizard = std::make_shared<dndSim::npc>(dndSim::character("lumawizard", 6, {8,15,12,18,12,15}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> MapachBrute = std::make_shared<dndSim::npc>(dndSim::character("mapachbrute", 3, {14,17,16,12,14,14}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> MountainLion = std::make_shared<dndSim::npc>(dndSim::character("mountainlion", 1, {17,15,14,3,14,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Oakheart = std::make_shared<dndSim::npc>(dndSim::character("oakheart", 8, {20,8,21,12,16,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> OdwaldEbonhart = std::make_shared<dndSim::npc>(dndSim::character("odwaldebonhart", 6, {9,14,12,18,10,14}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> RaptorRanger = std::make_shared<dndSim::npc>(dndSim::character("raptorranger", 4, {12,16,14,10,16,8}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> RiffintheAsh_Knight = std::make_shared<dndSim::npc>(dndSim::character("riffintheash_knight", 3, {16,10,16,8,13,12}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> ShylaDenn = std::make_shared<dndSim::npc>(dndSim::character("shyladenn", 2, {10,14,12,15,16,13}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> StrigKnight = std::make_shared<dndSim::npc>(dndSim::character("strigknight", 3, {16,10,16,8,13,12}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> StrigTracker = std::make_shared<dndSim::npc>(dndSim::character("strigtracker", 3, {16,14,14,11,15,10}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> SusanoftheSwamp = std::make_shared<dndSim::npc>(dndSim::character("susanoftheswamp", 1, {8,10,10,14,15,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> VulpinCaptain = std::make_shared<dndSim::npc>(dndSim::character("vulpincaptain", 1, {13,15,12,14,14,12}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> VulpinPriestofKren = std::make_shared<dndSim::npc>(dndSim::character("vulpinpriestofkren", 2, {10,14,12,15,16,13}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> Wakewyrm = std::make_shared<dndSim::npc>(dndSim::character("wakewyrm", 6, {20,14,18,3,12,3}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> ArchonofBoundaries = std::make_shared<dndSim::npc>(dndSim::character("archonofboundaries", 15, {23,17,20,14,18,18}, true, {"con","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> BeanstalkWurm = std::make_shared<dndSim::npc>(dndSim::character("beanstalkwurm", 18, {27,18,22,4,14,10}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> DeathlessRider = std::make_shared<dndSim::npc>(dndSim::character("deathlessrider", 5, {18,10,14,6,6,5}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> DunbarrowWitch = std::make_shared<dndSim::npc>(dndSim::character("dunbarrowwitch", 5, {12,14,11,16,15,20}, true, {"wis","cha"}, "cha", 12));
    std::shared_ptr<dndSim::npc> FaeriePathlighter = std::make_shared<dndSim::npc>(dndSim::character("faeriepathlighter", 2, {10,14,12,13,17,18}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> FaeriePest = std::make_shared<dndSim::npc>(dndSim::character("faeriepest", 1, {8,16,12,10,12,14}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> GooseMother = std::make_shared<dndSim::npc>(dndSim::character("goosemother", 7, {17,15,17,12,18,15}, false, {"str","int"}, "str", 12));
    std::shared_ptr<dndSim::npc> HighFaeImpostor = std::make_shared<dndSim::npc>(dndSim::character("highfaeimpostor", 11, {13,21,15,18,16,23}, true, {"dex","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> HighFaeKindguard = std::make_shared<dndSim::npc>(dndSim::character("highfaekindguard", 12, {22,23,15,14,17,13}, false, {"str","dex"}, "dex", 17));
    std::shared_ptr<dndSim::npc> HighFaeMage = std::make_shared<dndSim::npc>(dndSim::character("highfaemage", 12, {11,18,12,17,15,24}, true, {"int","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> HighFaeNoble = std::make_shared<dndSim::npc>(dndSim::character("highfaenoble", 13, {13,25,15,19,18,22}, true, {"dex","int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> KnightofEldraine = std::make_shared<dndSim::npc>(dndSim::character("knightofeldraine", 3, {16,12,14,13,11,13}, false, {"con","wis"}, "str", 20));
    std::shared_ptr<dndSim::npc> NightmareHaunt = std::make_shared<dndSim::npc>(dndSim::character("nightmarehaunt", 5, {14,17,13,9,12,17}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> OgreChitterlord = std::make_shared<dndSim::npc>(dndSim::character("ogrechitterlord", 3, {19,10,15,5,12,9}, true, {"wis"}, "wis", 12));
    std::shared_ptr<dndSim::npc> RedtoothWerefox = std::make_shared<dndSim::npc>(dndSim::character("redtoothwerefox", 3, {16,17,12,11,13,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SewerKing = std::make_shared<dndSim::npc>(dndSim::character("sewerking", 2, {18,13,14,8,12,11}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SnappingHydra = std::make_shared<dndSim::npc>(dndSim::character("snappinghydra", 11, {21,5,21,2,16,7}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> SpecterofNight = std::make_shared<dndSim::npc>(dndSim::character("specterofnight", 12, {22,18,17,12,13,12}, false, {"dex","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> SweettoothHorror = std::make_shared<dndSim::npc>(dndSim::character("sweettoothhorror", 4, {15,18,12,6,8,12}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> TempestHart = std::make_shared<dndSim::npc>(dndSim::character("tempesthart", 11, {21,17,18,3,18,14}, false, {"dex","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> Treefolk = std::make_shared<dndSim::npc>(dndSim::character("treefolk", 11, {23,12,18,10,20,11}, true, {"con","int","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> Witchkite = std::make_shared<dndSim::npc>(dndSim::character("witchkite", 15, {23,10,18,15,17,19}, true, {"dex","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> Witchstalker = std::make_shared<dndSim::npc>(dndSim::character("witchstalker", 6, {18,16,15,8,12,6}, false, {"str","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> AnimatedTable = std::make_shared<dndSim::npc>(dndSim::character("animatedtable", 2, {18,8,13,1,3,1}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> BelaktheOutcast = std::make_shared<dndSim::npc>(dndSim::character("belaktheoutcast", 2, {10,12,13,12,15,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> Calcryx = std::make_shared<dndSim::npc>(dndSim::character("calcryx", 2, {14,10,14,5,10,11}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> CentaurMummy = std::make_shared<dndSim::npc>(dndSim::character("centaurmummy", 6, {20,12,16,5,14,12}, false, {"wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> DreadWarrior = std::make_shared<dndSim::npc>(dndSim::character("dreadwarrior", 1, {15,11,16,10,12,10}, false, {"wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> DuergarSpy = std::make_shared<dndSim::npc>(dndSim::character("duergarspy", 2, {10,16,12,12,10,13}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Durnn = std::make_shared<dndSim::npc>(dndSim::character("durnn", 1, {15,12,12,10,10,9}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> Four_ArmedGargoyle = std::make_shared<dndSim::npc>(dndSim::character("four_armedgargoyle", 2, {15,11,16,6,11,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GiantCrayfish = std::make_shared<dndSim::npc>(dndSim::character("giantcrayfish", 2, {15,13,13,1,9,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> GiantIceToad = std::make_shared<dndSim::npc>(dndSim::character("gianticetoad", 3, {16,13,14,8,10,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantLightningEel = std::make_shared<dndSim::npc>(dndSim::character("giantlightningeel", 3, {11,17,16,2,12,3}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GiantSkeleton = std::make_shared<dndSim::npc>(dndSim::character("giantskeleton", 7, {21,10,20,4,6,6}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> GiantSubterraneanLizard = std::make_shared<dndSim::npc>(dndSim::character("giantsubterraneanlizard", 4, {21,9,17,2,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> GreaterZombie = std::make_shared<dndSim::npc>(dndSim::character("greaterzombie", 5, {18,10,17,4,6,6}, false, {"wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> HugeGiantCrab = std::make_shared<dndSim::npc>(dndSim::character("hugegiantcrab", 8, {20,15,20,1,9,3}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Kaarghaz = std::make_shared<dndSim::npc>(dndSim::character("kaarghaz", 2, {14,10,14,6,10,15}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> Kalka_Kylla = std::make_shared<dndSim::npc>(dndSim::character("kalka_kylla", 3, {17,12,16,15,16,12}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Kelpie = std::make_shared<dndSim::npc>(dndSim::character("kelpie", 4, {14,14,16,7,12,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> MalformedKraken = std::make_shared<dndSim::npc>(dndSim::character("malformedkraken", 10, {25,11,20,11,15,15}, false, {"str","con","int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> Nahual = std::make_shared<dndSim::npc>(dndSim::character("nahual", 3, {11,18,14,11,12,14}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Nereid = std::make_shared<dndSim::npc>(dndSim::character("nereid", 2, {10,17,12,13,14,16}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> OozeMaster = std::make_shared<dndSim::npc>(dndSim::character("oozemaster", 10, {16,1,20,17,10,16}, true, {"int","wis"}, "int", 9));
    std::shared_ptr<dndSim::npc> SeaLion = std::make_shared<dndSim::npc>(dndSim::character("sealion", 5, {17,15,15,3,12,8}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Siren = std::make_shared<dndSim::npc>(dndSim::character("siren", 3, {10,18,12,13,14,16}, true, {}, "cha", 14));
    std::shared_ptr<dndSim::npc> Snarla = std::make_shared<dndSim::npc>(dndSim::character("snarla", 5, {15,13,14,16,11,10}, true, {}, "int", 11));
    std::shared_ptr<dndSim::npc> Snurrevin = std::make_shared<dndSim::npc>(dndSim::character("snurrevin", 2, {14,11,14,14,10,9}, true, {}, "int", 16));
    std::shared_ptr<dndSim::npc> TarulVar = std::make_shared<dndSim::npc>(dndSim::character("tarulvar", 13, {11,16,16,19,14,16}, true, {"con","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> Tecuziztecatl = std::make_shared<dndSim::npc>(dndSim::character("tecuziztecatl", 4, {17,10,16,15,16,13}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> ThayanApprentice = std::make_shared<dndSim::npc>(dndSim::character("thayanapprentice", 2, {10,14,12,15,13,11}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> ThayanWarrior = std::make_shared<dndSim::npc>(dndSim::character("thayanwarrior", 2, {16,13,14,10,11,11}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Tloques_Popolocas = std::make_shared<dndSim::npc>(dndSim::character("tloques_popolocas", 5, {16,16,16,11,10,12}, true, {"dex","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> WhiteMaw = std::make_shared<dndSim::npc>(dndSim::character("whitemaw", 10, {18,1,20,12,10,3}, false, {}, "str", 5));
    std::shared_ptr<dndSim::npc> Yusdrayl = std::make_shared<dndSim::npc>(dndSim::character("yusdrayl", 1, {8,15,14,10,10,16}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> AberrantZealot = std::make_shared<dndSim::npc>(dndSim::character("aberrantzealot", 8, {15,18,12,13,8,19}, true, {"dex","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> CloakerMutate = std::make_shared<dndSim::npc>(dndSim::character("cloakermutate", 10, {19,15,12,18,13,11}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> EncephalonCluster = std::make_shared<dndSim::npc>(dndSim::character("encephaloncluster", 10, {23,10,13,5,17,7}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> EncephalonGemmule = std::make_shared<dndSim::npc>(dndSim::character("encephalongemmule", 3, {1,18,14,5,12,7}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> FeralAshenwight = std::make_shared<dndSim::npc>(dndSim::character("feralashenwight", 5, {19,13,15,4,14,6}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> FiendishAuger = std::make_shared<dndSim::npc>(dndSim::character("fiendishauger", 5, {23,10,17,6,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> FleshMeld = std::make_shared<dndSim::npc>(dndSim::character("fleshmeld", 7, {21,14,17,7,13,5}, false, {"str","dex"}, "str", 12));
    std::shared_ptr<dndSim::npc> GoblinPsiBrawler = std::make_shared<dndSim::npc>(dndSim::character("goblinpsibrawler", 2, {9,17,12,16,15,10}, false, {"int","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> GoblinPsiCommander = std::make_shared<dndSim::npc>(dndSim::character("goblinpsicommander", 4, {12,19,13,17,15,10}, true, {"int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> GrellPsychic = std::make_shared<dndSim::npc>(dndSim::character("grellpsychic", 4, {17,14,13,12,11,14}, true, {}, "cha", 12));
    std::shared_ptr<dndSim::npc> HumanoidMutate = std::make_shared<dndSim::npc>(dndSim::character("humanoidmutate", 4, {12,18,14,11,13,15}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> IarnoGlasstaffAlbrek = std::make_shared<dndSim::npc>(dndSim::character("iarnoglasstaffalbrek", 1, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> InfectedElderBrain = std::make_shared<dndSim::npc>(dndSim::character("infectedelderbrain", 11, {15,10,20,21,19,20}, true, {"int","wis","cha"}, "int", 10));
    std::shared_ptr<dndSim::npc> IntellectSnare = std::make_shared<dndSim::npc>(dndSim::character("intellectsnare", 8, {13,18,15,23,17,11}, false, {"int","wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Lowarnizel = std::make_shared<dndSim::npc>(dndSim::character("lowarnizel", 9, {21,12,21,18,15,19}, true, {"dex","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> MindFlayerClairvoyant = std::make_shared<dndSim::npc>(dndSim::character("mindflayerclairvoyant", 11, {11,12,15,21,17,18}, true, {"int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> MindFlayerProphet = std::make_shared<dndSim::npc>(dndSim::character("mindflayerprophet", 8, {15,14,14,20,17,17}, true, {"int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> NezznartheSpider = std::make_shared<dndSim::npc>(dndSim::character("nezznarthespider", 2, {9,13,10,16,14,13}, true, {"int","wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> Oculorb = std::make_shared<dndSim::npc>(dndSim::character("oculorb", 9, {13,10,17,14,15,19}, false, {"int","wis","cha"}, "str", 13));
    std::shared_ptr<dndSim::npc> OshundotheAlhoon = std::make_shared<dndSim::npc>(dndSim::character("oshundothealhoon", 10, {11,12,16,19,17,17}, true, {"con","int","wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> OtyughMutate = std::make_shared<dndSim::npc>(dndSim::character("otyughmutate", 6, {19,11,18,10,15,6}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> PsionicAshenwight = std::make_shared<dndSim::npc>(dndSim::character("psionicashenwight", 7, {19,13,15,17,14,6}, true, {"str","con","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> Qunbraxel = std::make_shared<dndSim::npc>(dndSim::character("qunbraxel", 9, {11,14,17,19,15,19}, true, {"int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> RefractionofIlvaash = std::make_shared<dndSim::npc>(dndSim::character("refractionofilvaash", 15, {17,10,17,23,20,22}, true, {"int","wis"}, "int", 11));
    std::shared_ptr<dndSim::npc> RuxithidtheChosen = std::make_shared<dndSim::npc>(dndSim::character("ruxithidthechosen", 5, {14,19,12,18,15,12}, false, {"int","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ScarletSentinel = std::make_shared<dndSim::npc>(dndSim::character("scarletsentinel", 1, {15,6,14,1,6,1}, false, {}, "str", 8));
    std::shared_ptr<dndSim::npc> Ebondeath = std::make_shared<dndSim::npc>(dndSim::character("ebondeath", 4, {7,13,10,10,12,17}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Blaze = std::make_shared<dndSim::npc>(dndSim::character("blaze", 5, {16,17,16,6,10,7}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> EnderDragon = std::make_shared<dndSim::npc>(dndSim::character("enderdragon", 19, {27,14,25,10,15,19}, false, {"con","int","wis"}, "str", 22));
    std::shared_ptr<dndSim::npc> Enderman = std::make_shared<dndSim::npc>(dndSim::character("enderman", 6, {15,18,15,10,18,11}, false, {"str","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Aurumvorax = std::make_shared<dndSim::npc>(dndSim::character("aurumvorax", 2, {14,13,12,3,12,6}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> AurumvoraxDenLeader = std::make_shared<dndSim::npc>(dndSim::character("aurumvoraxdenleader", 4, {18,14,14,3,13,8}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> Bakunawa = std::make_shared<dndSim::npc>(dndSim::character("bakunawa", 12, {21,12,15,14,17,16}, false, {"dex","con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Haint = std::make_shared<dndSim::npc>(dndSim::character("haint", 7, {7,15,17,10,13,17}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> Pari = std::make_shared<dndSim::npc>(dndSim::character("pari", 13, {20,20,20,20,22,22}, true, {"con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> Riverine = std::make_shared<dndSim::npc>(dndSim::character("riverine", 12, {20,19,17,12,16,21}, true, {"int","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> SoulShaker = std::make_shared<dndSim::npc>(dndSim::character("soulshaker", 4, {20,8,18,8,11,14}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Tlacatecolo = std::make_shared<dndSim::npc>(dndSim::character("tlacatecolo", 5, {12,17,14,10,15,10}, false, {"dex","con"}, "dex", 13));
    std::shared_ptr<dndSim::npc> Tlexolotl = std::make_shared<dndSim::npc>(dndSim::character("tlexolotl", 10, {25,10,17,7,13,9}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Whistler = std::make_shared<dndSim::npc>(dndSim::character("whistler", 9, {13,16,14,15,16,18}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Amble = std::make_shared<dndSim::npc>(dndSim::character("amble", 10, {14,10,16,10,18,14}, true, {"str","dex","con","int","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> YoungKraken = std::make_shared<dndSim::npc>(dndSim::character("youngkraken", 14, {24,11,20,19,15,17}, false, {"str","dex","con","int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> AbhorrentOverlord = std::make_shared<dndSim::npc>(dndSim::character("abhorrentoverlord", 9, {20,18,16,15,14,16}, true, {"con","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> AkroanHoplite = std::make_shared<dndSim::npc>(dndSim::character("akroanhoplite", 3, {16,16,14,11,14,13}, false, {"str","dex"}, "str", 18));
    std::shared_ptr<dndSim::npc> Alseid = std::make_shared<dndSim::npc>(dndSim::character("alseid", 1, {15,10,12,13,14,18}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> Aphemia = std::make_shared<dndSim::npc>(dndSim::character("aphemia", 5, {13,16,15,13,14,16}, false, {"dex","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> ArchonofFallingStars = std::make_shared<dndSim::npc>(dndSim::character("archonoffallingstars", 12, {20,15,19,15,21,19}, true, {"str","con","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> AshenRider = std::make_shared<dndSim::npc>(dndSim::character("ashenrider", 16, {20,16,19,15,21,18}, true, {"str","con","wis","cha"}, "wis", 18));
    std::shared_ptr<dndSim::npc> BrokenKingAntigonos = std::make_shared<dndSim::npc>(dndSim::character("brokenkingantigonos", 3, {18,11,16,6,16,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> BronzeSable = std::make_shared<dndSim::npc>(dndSim::character("bronzesable", 1, {13,16,15,3,14,1}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> BurnishedHart = std::make_shared<dndSim::npc>(dndSim::character("burnishedhart", 2, {17,14,16,3,15,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> DoomwakeGiant = std::make_shared<dndSim::npc>(dndSim::character("doomwakegiant", 11, {24,12,22,12,14,16}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> EaterofHope = std::make_shared<dndSim::npc>(dndSim::character("eaterofhope", 6, {19,17,14,12,11,16}, false, {"con","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> FleecemaneLion = std::make_shared<dndSim::npc>(dndSim::character("fleecemanelion", 3, {19,16,14,6,14,10}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> FlitterstepEidolon = std::make_shared<dndSim::npc>(dndSim::character("flitterstepeidolon", 3, {8,18,13,11,12,10}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> GhostbladeEidolon = std::make_shared<dndSim::npc>(dndSim::character("ghostbladeeidolon", 5, {16,15,12,13,12,14}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Gold_ForgedSentinel = std::make_shared<dndSim::npc>(dndSim::character("gold_forgedsentinel", 5, {18,13,19,3,16,10}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Hundred_HandedOne = std::make_shared<dndSim::npc>(dndSim::character("hundred_handedone", 15, {26,15,25,14,16,16}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Hythonia = std::make_shared<dndSim::npc>(dndSim::character("hythonia", 17, {21,17,19,14,16,18}, true, {"str","con","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> IronscaleHydra = std::make_shared<dndSim::npc>(dndSim::character("ironscalehydra", 12, {22,10,22,2,10,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Lampad = std::make_shared<dndSim::npc>(dndSim::character("lampad", 3, {12,13,14,11,12,18}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> LeoninIconoclast = std::make_shared<dndSim::npc>(dndSim::character("leoniniconoclast", 5, {14,18,16,13,17,10}, true, {"dex","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> MeletianHoplite = std::make_shared<dndSim::npc>(dndSim::character("meletianhoplite", 3, {16,14,12,16,13,11}, true, {"dex","int"}, "int", 18));
    std::shared_ptr<dndSim::npc> Naiad = std::make_shared<dndSim::npc>(dndSim::character("naiad", 2, {10,16,11,15,10,18}, true, {}, "cha", 15));
    std::shared_ptr<dndSim::npc> NightmareShepherd = std::make_shared<dndSim::npc>(dndSim::character("nightmareshepherd", 11, {19,15,18,14,17,20}, true, {"con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Nyx_FleeceRam = std::make_shared<dndSim::npc>(dndSim::character("nyx_fleeceram", 1, {16,14,12,3,13,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Oracle = std::make_shared<dndSim::npc>(dndSim::character("oracle", 4, {10,14,12,13,16,15}, true, {"wis","cha"}, "wis", 15));
    std::shared_ptr<dndSim::npc> Oread = std::make_shared<dndSim::npc>(dndSim::character("oread", 4, {14,14,12,11,13,18}, true, {}, "cha", 16));
    std::shared_ptr<dndSim::npc> Phylaskia = std::make_shared<dndSim::npc>(dndSim::character("phylaskia", 9, {20,15,18,10,16,14}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> Polukranos = std::make_shared<dndSim::npc>(dndSim::character("polukranos", 19, {25,15,21,4,14,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> ReturnedKakomantis = std::make_shared<dndSim::npc>(dndSim::character("returnedkakomantis", 4, {10,17,14,13,12,15}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> ReturnedPalamnite = std::make_shared<dndSim::npc>(dndSim::character("returnedpalamnite", 4, {10,17,14,13,12,15}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> ReturnedSentry = std::make_shared<dndSim::npc>(dndSim::character("returnedsentry", 1, {16,15,12,10,12,11}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SatyrReveler = std::make_shared<dndSim::npc>(dndSim::character("satyrreveler", 1, {12,16,13,12,10,16}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SatyrThornbearer = std::make_shared<dndSim::npc>(dndSim::character("satyrthornbearer", 2, {12,18,12,11,13,14}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> SetessanHoplite = std::make_shared<dndSim::npc>(dndSim::character("setessanhoplite", 4, {14,16,14,13,16,11}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> TheranChimera = std::make_shared<dndSim::npc>(dndSim::character("theranchimera", 7, {18,13,19,3,14,10}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> TritonMasterofWaves = std::make_shared<dndSim::npc>(dndSim::character("tritonmasterofwaves", 8, {16,11,16,10,12,19}, true, {"dex","int","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> TritonShorestalker = std::make_shared<dndSim::npc>(dndSim::character("tritonshorestalker", 2, {11,16,14,10,15,11}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> Two_HeadedCerberus = std::make_shared<dndSim::npc>(dndSim::character("two_headedcerberus", 2, {15,14,14,3,13,6}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Typhon = std::make_shared<dndSim::npc>(dndSim::character("typhon", 15, {24,10,20,7,12,13}, false, {"con"}, "str", 17));
    std::shared_ptr<dndSim::npc> UnderworldCerberus = std::make_shared<dndSim::npc>(dndSim::character("underworldcerberus", 6, {19,12,18,10,16,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> WingedBull = std::make_shared<dndSim::npc>(dndSim::character("wingedbull", 4, {20,14,18,6,10,5}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> WingedLion = std::make_shared<dndSim::npc>(dndSim::character("wingedlion", 4, {20,16,18,6,14,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> WoeStrider = std::make_shared<dndSim::npc>(dndSim::character("woestrider", 7, {18,15,16,8,14,14}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Criosphinx = std::make_shared<dndSim::npc>(dndSim::character("criosphinx", 13, {18,15,18,16,16,16}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> ManticoreHeart_Piercer = std::make_shared<dndSim::npc>(dndSim::character("manticoreheart_piercer", 5, {19,14,16,5,12,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> Krenko = std::make_shared<dndSim::npc>(dndSim::character("krenko", 1, {10,14,10,10,8,14}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> LoadingRig = std::make_shared<dndSim::npc>(dndSim::character("loadingrig", 1, {18,11,13,1,3,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> AstralBlight = std::make_shared<dndSim::npc>(dndSim::character("astralblight", 1, {16,8,14,6,10,3}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> ChiefGuh = std::make_shared<dndSim::npc>(dndSim::character("chiefguh", 5, {21,1,19,5,9,6}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> CountessSansuri = std::make_shared<dndSim::npc>(dndSim::character("countesssansuri", 11, {27,10,22,16,16,16}, true, {"con","wis","cha"}, "int", 14));
    std::shared_ptr<dndSim::npc> CragCat = std::make_shared<dndSim::npc>(dndSim::character("cragcat", 1, {16,17,16,4,14,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> DukeZalto = std::make_shared<dndSim::npc>(dndSim::character("dukezalto", 9, {25,9,23,10,14,13}, false, {"dex","con","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Harshnag = std::make_shared<dndSim::npc>(dndSim::character("harshnag", 9, {23,9,21,9,10,12}, false, {"con","wis","cha"}, "str", 21));
    std::shared_ptr<dndSim::npc> HulkingCrab = std::make_shared<dndSim::npc>(dndSim::character("hulkingcrab", 5, {19,8,16,3,11,3}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> JarlStorvald = std::make_shared<dndSim::npc>(dndSim::character("jarlstorvald", 8, {23,9,21,9,16,16}, true, {"con","wis","cha"}, "wis", 15));
    std::shared_ptr<dndSim::npc> KingHekaton = std::make_shared<dndSim::npc>(dndSim::character("kinghekaton", 13, {29,14,20,16,18,18}, true, {"str","con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> PurpleWormling = std::make_shared<dndSim::npc>(dndSim::character("purplewormling", 2, {16,7,16,1,6,2}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> ThaneKayalithica = std::make_shared<dndSim::npc>(dndSim::character("thanekayalithica", 7, {23,15,20,10,12,14}, true, {"dex","con","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> ThunderbeastSkeleton = std::make_shared<dndSim::npc>(dndSim::character("thunderbeastskeleton", 3, {19,11,15,2,12,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> UthgardtShaman = std::make_shared<dndSim::npc>(dndSim::character("uthgardtshaman", 2, {14,12,13,10,15,12}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> YakfolkPriest = std::make_shared<dndSim::npc>(dndSim::character("yakfolkpriest", 4, {16,11,15,14,18,14}, true, {}, "wis", 12));
    std::shared_ptr<dndSim::npc> YakfolkWarrior = std::make_shared<dndSim::npc>(dndSim::character("yakfolkwarrior", 3, {18,11,15,14,15,14}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Zaltember = std::make_shared<dndSim::npc>(dndSim::character("zaltember", 1, {17,10,14,10,10,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Zephyros = std::make_shared<dndSim::npc>(dndSim::character("zephyros", 13, {27,10,22,18,16,16}, true, {"con","wis","cha"}, "int", 14));
    std::shared_ptr<dndSim::npc> BullywugCroaker = std::make_shared<dndSim::npc>(dndSim::character("bullywugcroaker", 2, {14,12,12,7,15,10}, false, {"con"}, "str", 15));
    std::shared_ptr<dndSim::npc> BullywugRoyal = std::make_shared<dndSim::npc>(dndSim::character("bullywugroyal", 3, {16,12,14,10,11,14}, false, {"str","dex"}, "str", 15));
    std::shared_ptr<dndSim::npc> DrownedAscetic = std::make_shared<dndSim::npc>(dndSim::character("drownedascetic", 3, {12,16,16,3,9,5}, false, {"dex"}, "dex", 13));
    std::shared_ptr<dndSim::npc> DrownedAssassin = std::make_shared<dndSim::npc>(dndSim::character("drownedassassin", 4, {15,16,16,9,9,16}, false, {"dex","con"}, "dex", 14));
    std::shared_ptr<dndSim::npc> DrownedBlade = std::make_shared<dndSim::npc>(dndSim::character("drownedblade", 2, {16,8,16,3,9,5}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> DrownedMaster = std::make_shared<dndSim::npc>(dndSim::character("drownedmaster", 9, {17,12,16,9,14,12}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> GiantCoralSnake = std::make_shared<dndSim::npc>(dndSim::character("giantcoralsnake", 4, {12,16,14,2,10,3}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> HarpyMatriarch = std::make_shared<dndSim::npc>(dndSim::character("harpymatriarch", 5, {13,16,12,9,10,16}, false, {"dex","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> JuvenileKraken = std::make_shared<dndSim::npc>(dndSim::character("juvenilekraken", 14, {24,11,20,19,15,17}, false, {"str","dex","con","int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> KoalinthSergeant = std::make_shared<dndSim::npc>(dndSim::character("koalinthsergeant", 2, {14,11,12,11,10,12}, false, {"dex","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> Kysh = std::make_shared<dndSim::npc>(dndSim::character("kysh", 1, {14,16,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> LivingIronStatue = std::make_shared<dndSim::npc>(dndSim::character("livingironstatue", 5, {16,14,18,6,10,5}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> LizardfolkRender = std::make_shared<dndSim::npc>(dndSim::character("lizardfolkrender", 3, {16,10,14,7,12,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> LizardfolkScaleshield = std::make_shared<dndSim::npc>(dndSim::character("lizardfolkscaleshield", 1, {15,10,14,7,12,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> LizardfolkSubchief = std::make_shared<dndSim::npc>(dndSim::character("lizardfolksubchief", 3, {14,12,14,10,16,12}, true, {"wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> LocathahHunter = std::make_shared<dndSim::npc>(dndSim::character("locathahhunter", 2, {13,14,12,11,14,11}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> MawofSekolah = std::make_shared<dndSim::npc>(dndSim::character("mawofsekolah", 7, {21,12,17,2,14,7}, false, {"str","con"}, "str", 12));
    std::shared_ptr<dndSim::npc> MerfolkSalvager = std::make_shared<dndSim::npc>(dndSim::character("merfolksalvager", 1, {12,14,12,11,10,13}, false, {"dex"}, "dex", 12));
    std::shared_ptr<dndSim::npc> MinotaurLivingCrystalStatue = std::make_shared<dndSim::npc>(dndSim::character("minotaurlivingcrystalstatue", 6, {18,9,16,6,10,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> MonstrousPeryton = std::make_shared<dndSim::npc>(dndSim::character("monstrousperyton", 11, {19,14,16,9,14,10}, false, {"str","dex","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> MrDory = std::make_shared<dndSim::npc>(dndSim::character("mrdory", 10, {13,20,19,14,14,16}, true, {"con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> PirateCaptain = std::make_shared<dndSim::npc>(dndSim::character("piratecaptain", 2, {16,14,14,11,10,14}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> PirateDeckWizard = std::make_shared<dndSim::npc>(dndSim::character("piratedeckwizard", 1, {10,14,14,16,13,11}, true, {}, "int", 12));
    std::shared_ptr<dndSim::npc> PirateFirstMate = std::make_shared<dndSim::npc>(dndSim::character("piratefirstmate", 1, {14,11,14,11,10,13}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> RipTidePriest = std::make_shared<dndSim::npc>(dndSim::character("riptidepriest", 2, {15,11,14,10,11,16}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> SahuaginBlademaster = std::make_shared<dndSim::npc>(dndSim::character("sahuaginblademaster", 6, {16,12,14,12,11,12}, false, {"str","con"}, "str", 20));
    std::shared_ptr<dndSim::npc> SahuaginChampion = std::make_shared<dndSim::npc>(dndSim::character("sahuaginchampion", 3, {16,14,12,12,13,9}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> SahuaginCoralSmasher = std::make_shared<dndSim::npc>(dndSim::character("sahuagincoralsmasher", 1, {16,12,12,12,13,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> SahuaginDeepDiver = std::make_shared<dndSim::npc>(dndSim::character("sahuagindeepdiver", 4, {14,16,15,12,13,9}, false, {"con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> SahuaginHatchlingSwarm = std::make_shared<dndSim::npc>(dndSim::character("sahuaginhatchlingswarm", 3, {9,18,12,3,10,3}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> SahuaginHighPriestess = std::make_shared<dndSim::npc>(dndSim::character("sahuaginhighpriestess", 5, {14,12,14,12,16,10}, true, {"wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> SahuaginWaveShaper = std::make_shared<dndSim::npc>(dndSim::character("sahuaginwaveshaper", 5, {10,12,12,16,14,12}, true, {"int"}, "int", 14));
    std::shared_ptr<dndSim::npc> Sanbalet = std::make_shared<dndSim::npc>(dndSim::character("sanbalet", 1, {10,12,11,16,13,14}, true, {}, "int", 11));
    std::shared_ptr<dndSim::npc> ShellShark = std::make_shared<dndSim::npc>(dndSim::character("shellshark", 2, {15,12,14,3,10,7}, false, {"str"}, "str", 18));
    std::shared_ptr<dndSim::npc> SkeletalJuggernaut = std::make_shared<dndSim::npc>(dndSim::character("skeletaljuggernaut", 5, {16,14,15,6,8,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> SkeletalSwarm = std::make_shared<dndSim::npc>(dndSim::character("skeletalswarm", 2, {12,14,15,6,8,5}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Skum = std::make_shared<dndSim::npc>(dndSim::character("skum", 5, {19,11,18,7,12,9}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> ThousandTeeth = std::make_shared<dndSim::npc>(dndSim::character("thousandteeth", 6, {19,10,17,2,10,7}, false, {"str","con"}, "str", 12));
    std::shared_ptr<dndSim::npc> VampiricJadeStatue = std::make_shared<dndSim::npc>(dndSim::character("vampiricjadestatue", 8, {16,14,18,6,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Yarnspinner = std::make_shared<dndSim::npc>(dndSim::character("yarnspinner", 10, {24,16,21,18,21,19}, true, {"con","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> BoneKnight = std::make_shared<dndSim::npc>(dndSim::character("boneknight", 5, {18,13,14,12,14,16}, true, {"wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> Clawfoot = std::make_shared<dndSim::npc>(dndSim::character("clawfoot", 1, {12,16,14,4,12,10}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> Dolgaunt = std::make_shared<dndSim::npc>(dndSim::character("dolgaunt", 3, {14,18,12,13,14,11}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> DuskHag = std::make_shared<dndSim::npc>(dndSim::character("duskhag", 6, {11,14,12,17,16,18}, true, {"int","wis"}, "cha", 17));
    std::shared_ptr<dndSim::npc> HashalaqQuori = std::make_shared<dndSim::npc>(dndSim::character("hashalaqquori", 9, {12,14,13,18,16,18}, true, {"wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> Inspired = std::make_shared<dndSim::npc>(dndSim::character("inspired", 2, {11,14,10,16,10,16}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> IronDefender = std::make_shared<dndSim::npc>(dndSim::character("irondefender", 1, {16,14,16,8,11,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> KalaraqQuori = std::make_shared<dndSim::npc>(dndSim::character("kalaraqquori", 19, {12,21,18,23,24,25}, true, {"int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> KarrnathiUndeadSoldier = std::make_shared<dndSim::npc>(dndSim::character("karrnathiundeadsoldier", 3, {16,14,16,12,13,5}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> LivingBurningHands = std::make_shared<dndSim::npc>(dndSim::character("livingburninghands", 1, {10,12,16,3,6,6}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> LivingCloudkill = std::make_shared<dndSim::npc>(dndSim::character("livingcloudkill", 7, {10,15,20,3,11,6}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> LivingLightningBolt = std::make_shared<dndSim::npc>(dndSim::character("livinglightningbolt", 5, {10,15,18,3,10,6}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Mordakhesh = std::make_shared<dndSim::npc>(dndSim::character("mordakhesh", 15, {20,16,18,15,17,20}, true, {"str","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> RadiantIdol = std::make_shared<dndSim::npc>(dndSim::character("radiantidol", 11, {23,18,19,17,20,21}, true, {"wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> TarkananAssassin = std::make_shared<dndSim::npc>(dndSim::character("tarkananassassin", 2, {12,16,14,10,14,11}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> TheLordofBlades = std::make_shared<dndSim::npc>(dndSim::character("thelordofblades", 18, {20,15,18,19,17,18}, true, {"str","con","int","wis"}, "int", 19));
    std::shared_ptr<dndSim::npc> TsucoraQuori = std::make_shared<dndSim::npc>(dndSim::character("tsucoraquori", 7, {17,14,18,14,14,16}, true, {"wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> UndyingCouncilor = std::make_shared<dndSim::npc>(dndSim::character("undyingcouncilor", 10, {16,10,14,17,21,16}, true, {"con","int","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> UndyingSoldier = std::make_shared<dndSim::npc>(dndSim::character("undyingsoldier", 2, {16,12,14,11,13,14}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> WarforgedSoldier = std::make_shared<dndSim::npc>(dndSim::character("warforgedsoldier", 1, {16,12,16,10,14,11}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> WarforgedTitan = std::make_shared<dndSim::npc>(dndSim::character("warforgedtitan", 8, {23,8,22,3,11,1}, false, {}, "str", 20));
    std::shared_ptr<dndSim::npc> ZakyaRakshasa = std::make_shared<dndSim::npc>(dndSim::character("zakyarakshasa", 5, {18,14,18,12,13,11}, true, {}, "wis", 18));
    std::shared_ptr<dndSim::npc> Aerosaur = std::make_shared<dndSim::npc>(dndSim::character("aerosaur", 10, {26,10,21,3,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Altisaur = std::make_shared<dndSim::npc>(dndSim::character("altisaur", 13, {28,6,23,3,12,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> BagJelly = std::make_shared<dndSim::npc>(dndSim::character("bagjelly", 1, {13,6,19,2,7,2}, false, {}, "str", 8));
    std::shared_ptr<dndSim::npc> Barrowghast = std::make_shared<dndSim::npc>(dndSim::character("barrowghast", 7, {21,8,20,5,9,6}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Cairnwight = std::make_shared<dndSim::npc>(dndSim::character("cairnwight", 9, {23,10,21,10,12,9}, false, {"con","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> Ceratops = std::make_shared<dndSim::npc>(dndSim::character("ceratops", 9, {24,8,21,4,10,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> CinderHulk = std::make_shared<dndSim::npc>(dndSim::character("cinderhulk", 7, {20,12,20,9,14,10}, false, {"dex","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> CloudGiantDestinyGambler = std::make_shared<dndSim::npc>(dndSim::character("cloudgiantdestinygambler", 19, {27,12,22,19,16,22}, true, {"con","int","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> CloudGiantofEvilAir = std::make_shared<dndSim::npc>(dndSim::character("cloudgiantofevilair", 12, {27,10,22,12,16,19}, true, {"con","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> DeathGiantReaper = std::make_shared<dndSim::npc>(dndSim::character("deathgiantreaper", 12, {27,14,20,18,16,16}, false, {"con","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> DeathGiantShroudedOne = std::make_shared<dndSim::npc>(dndSim::character("deathgiantshroudedone", 15, {27,14,20,23,16,16}, true, {"con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> DustHulk = std::make_shared<dndSim::npc>(dndSim::character("dusthulk", 5, {15,19,16,10,12,8}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> EchoofDemogorgon = std::make_shared<dndSim::npc>(dndSim::character("echoofdemogorgon", 6, {22,10,17,10,12,14}, false, {"str","cha"}, "str", 14));
    std::shared_ptr<dndSim::npc> EttinCeremorph = std::make_shared<dndSim::npc>(dndSim::character("ettinceremorph", 8, {18,14,18,18,15,14}, false, {"int","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> FensirDevourer = std::make_shared<dndSim::npc>(dndSim::character("fensirdevourer", 8, {20,10,21,10,14,11}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> FensirSkirmisher = std::make_shared<dndSim::npc>(dndSim::character("fensirskirmisher", 6, {18,15,20,14,11,12}, true, {"int","wis"}, "int", 15));
    std::shared_ptr<dndSim::npc> FirbolgPrimevalWarden = std::make_shared<dndSim::npc>(dndSim::character("firbolgprimevalwarden", 4, {16,14,14,12,16,11}, true, {"int","wis"}, "wis", 16));
    std::shared_ptr<dndSim::npc> FirbolgWanderer = std::make_shared<dndSim::npc>(dndSim::character("firbolgwanderer", 5, {16,14,16,14,17,16}, true, {"dex","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> FireGiantForgecaller = std::make_shared<dndSim::npc>(dndSim::character("firegiantforgecaller", 18, {25,11,23,16,21,18}, false, {"dex","int","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> FireGiantofEvilFire = std::make_shared<dndSim::npc>(dndSim::character("firegiantofevilfire", 10, {25,9,23,10,19,14}, false, {"con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> FireHellion = std::make_shared<dndSim::npc>(dndSim::character("firehellion", 11, {25,10,23,16,14,21}, false, {"wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> Firegaunt = std::make_shared<dndSim::npc>(dndSim::character("firegaunt", 11, {25,7,23,10,14,13}, false, {"dex","con","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> FleshColossus = std::make_shared<dndSim::npc>(dndSim::character("fleshcolossus", 20, {24,9,24,6,10,5}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> FomorianDeepCrawler = std::make_shared<dndSim::npc>(dndSim::character("fomoriandeepcrawler", 10, {23,15,20,9,17,6}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> FomorianNoble = std::make_shared<dndSim::npc>(dndSim::character("fomoriannoble", 15, {23,18,20,19,14,16}, true, {"int","wis","cha"}, "int", 14));
    std::shared_ptr<dndSim::npc> FomorianWarlockoftheDark = std::make_shared<dndSim::npc>(dndSim::character("fomorianwarlockofthedark", 12, {23,13,20,9,14,18}, true, {"wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> FrostGiantIceShaper = std::make_shared<dndSim::npc>(dndSim::character("frostgianticeshaper", 17, {23,10,21,11,19,16}, false, {"str","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> FrostGiantofEvilWater = std::make_shared<dndSim::npc>(dndSim::character("frostgiantofevilwater", 11, {23,16,21,9,14,12}, false, {"dex","con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Frostmourn = std::make_shared<dndSim::npc>(dndSim::character("frostmourn", 10, {23,9,21,9,11,18}, false, {"con","wis"}, "str", 13));
    std::shared_ptr<dndSim::npc> FuryofKostchtchie = std::make_shared<dndSim::npc>(dndSim::character("furyofkostchtchie", 14, {26,10,25,10,12,11}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> GiantGoose = std::make_shared<dndSim::npc>(dndSim::character("giantgoose", 3, {14,16,15,6,14,11}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> GiantOx = std::make_shared<dndSim::npc>(dndSim::character("giantox", 3, {22,10,19,4,11,9}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiantRam = std::make_shared<dndSim::npc>(dndSim::character("giantram", 1, {19,12,18,3,14,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> GiantTick = std::make_shared<dndSim::npc>(dndSim::character("gianttick", 2, {16,10,16,2,10,2}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Gigant = std::make_shared<dndSim::npc>(dndSim::character("gigant", 20, {24,14,21,3,14,11}, false, {"dex","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> GoliathGiant_Kin = std::make_shared<dndSim::npc>(dndSim::character("goliathgiant_kin", 3, {18,13,16,10,12,12}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> GrinningCat = std::make_shared<dndSim::npc>(dndSim::character("grinningcat", 1, {14,15,13,15,14,16}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> HillGiantAvalancher = std::make_shared<dndSim::npc>(dndSim::character("hillgiantavalancher", 12, {21,8,19,9,18,10}, true, {"str","con","wis"}, "wis", 15));
    std::shared_ptr<dndSim::npc> LightningHulk = std::make_shared<dndSim::npc>(dndSim::character("lightninghulk", 9, {18,21,16,14,14,15}, false, {"dex","con","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> MawofYeenoghu = std::make_shared<dndSim::npc>(dndSim::character("mawofyeenoghu", 10, {23,10,21,8,14,10}, false, {"con","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> MistHulk = std::make_shared<dndSim::npc>(dndSim::character("misthulk", 6, {18,21,20,11,13,16}, false, {"con","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> MudHulk = std::make_shared<dndSim::npc>(dndSim::character("mudhulk", 3, {16,8,16,5,9,6}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> Regisaur = std::make_shared<dndSim::npc>(dndSim::character("regisaur", 14, {27,8,23,4,12,6}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> RimeHulk = std::make_shared<dndSim::npc>(dndSim::character("rimehulk", 5, {18,10,18,8,9,6}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> SpectralCloud = std::make_shared<dndSim::npc>(dndSim::character("spectralcloud", 13, {24,12,18,12,17,16}, false, {"dex","cha"}, "str", 11));
    std::shared_ptr<dndSim::npc> SpottedLion = std::make_shared<dndSim::npc>(dndSim::character("spottedlion", 3, {23,14,17,5,13,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> StalkerofBaphomet = std::make_shared<dndSim::npc>(dndSim::character("stalkerofbaphomet", 12, {25,17,22,13,16,12}, true, {"dex","wis"}, "wis", 17));
    std::shared_ptr<dndSim::npc> StoneGiantofEvilEarth = std::make_shared<dndSim::npc>(dndSim::character("stonegiantofevilearth", 9, {23,13,22,10,12,9}, false, {"str","con"}, "str", 20));
    std::shared_ptr<dndSim::npc> StoneGiantRockspeaker = std::make_shared<dndSim::npc>(dndSim::character("stonegiantrockspeaker", 16, {23,15,20,19,14,10}, false, {"dex","con","int","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> StormCrab = std::make_shared<dndSim::npc>(dndSim::character("stormcrab", 11, {23,10,21,5,14,9}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> StormGiantTempestCaller = std::make_shared<dndSim::npc>(dndSim::character("stormgianttempestcaller", 20, {29,14,20,21,18,25}, true, {"str","con","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> StormHerald = std::make_shared<dndSim::npc>(dndSim::character("stormherald", 17, {27,14,22,24,18,18}, true, {"wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> TempestSpirit = std::make_shared<dndSim::npc>(dndSim::character("tempestspirit", 15, {24,14,20,16,18,19}, false, {"con","int","wis","cha"}, "str", 12));
    std::shared_ptr<dndSim::npc> Titanothere = std::make_shared<dndSim::npc>(dndSim::character("titanothere", 5, {25,10,19,2,12,6}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> TrollAmalgam = std::make_shared<dndSim::npc>(dndSim::character("trollamalgam", 17, {25,14,21,9,16,5}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> TrollMutate = std::make_shared<dndSim::npc>(dndSim::character("trollmutate", 7, {19,13,18,17,9,12}, false, {"con","int"}, "str", 16));
    std::shared_ptr<dndSim::npc> Ahmaergo = std::make_shared<dndSim::npc>(dndSim::character("ahmaergo", 9, {20,15,14,15,14,12}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> AmmaliaCassalanter = std::make_shared<dndSim::npc>(dndSim::character("ammaliacassalanter", 5, {9,14,11,17,12,15}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> BarnibusBlastwind = std::make_shared<dndSim::npc>(dndSim::character("barnibusblastwind", 2, {9,10,9,17,15,11}, true, {"int","wis"}, "int", 10));
    std::shared_ptr<dndSim::npc> BlackViper = std::make_shared<dndSim::npc>(dndSim::character("blackviper", 5, {11,18,14,11,11,12}, false, {"dex","int"}, "dex", 16));
    std::shared_ptr<dndSim::npc> DavilStarsong = std::make_shared<dndSim::npc>(dndSim::character("davilstarsong", 6, {10,14,12,16,12,17}, true, {"dex","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> DiningTableMimic = std::make_shared<dndSim::npc>(dndSim::character("diningtablemimic", 3, {17,12,15,5,13,8}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> DrowGunslinger = std::make_shared<dndSim::npc>(dndSim::character("drowgunslinger", 4, {13,18,14,11,13,14}, true, {"dex","con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> Durnan = std::make_shared<dndSim::npc>(dndSim::character("durnan", 9, {18,15,18,13,12,10}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> FalaLefaliir = std::make_shared<dndSim::npc>(dndSim::character("falalefaliir", 2, {10,12,13,12,15,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> GriffonCavalryRider = std::make_shared<dndSim::npc>(dndSim::character("griffoncavalryrider", 2, {14,15,14,10,12,10}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> Hlam = std::make_shared<dndSim::npc>(dndSim::character("hlam", 16, {11,24,13,14,21,14}, true, {"str","dex"}, "wis", 22));
    std::shared_ptr<dndSim::npc> Hrabbaz = std::make_shared<dndSim::npc>(dndSim::character("hrabbaz", 5, {20,15,17,10,14,12}, false, {"str","con"}, "str", 12));
    std::shared_ptr<dndSim::npc> IstridHorn = std::make_shared<dndSim::npc>(dndSim::character("istridhorn", 8, {12,10,14,11,17,13}, true, {"con","wis"}, "wis", 18));
    std::shared_ptr<dndSim::npc> JalesterSilvermane = std::make_shared<dndSim::npc>(dndSim::character("jalestersilvermane", 4, {14,14,13,12,14,13}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> JandarChergoba = std::make_shared<dndSim::npc>(dndSim::character("jandarchergoba", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> JarlaxleBaenre = std::make_shared<dndSim::npc>(dndSim::character("jarlaxlebaenre", 15, {12,22,14,20,16,19}, true, {"dex","wis"}, "int", 24));
    std::shared_ptr<dndSim::npc> KaevjaCynavern = std::make_shared<dndSim::npc>(dndSim::character("kaevjacynavern", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Kalain = std::make_shared<dndSim::npc>(dndSim::character("kalain", 2, {11,14,12,10,13,14}, true, {"dex","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> LadyGondafrey = std::make_shared<dndSim::npc>(dndSim::character("ladygondafrey", 2, {15,11,16,10,11,7}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> LaeralSilverhand = std::make_shared<dndSim::npc>(dndSim::character("laeralsilverhand", 17, {13,17,20,20,20,19}, true, {"int","wis"}, "int", 18));
    std::shared_ptr<dndSim::npc> LaibaNanaRosse = std::make_shared<dndSim::npc>(dndSim::character("laibananarosse", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> LosserMirklav = std::make_shared<dndSim::npc>(dndSim::character("lossermirklav", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> ManafretCherryport = std::make_shared<dndSim::npc>(dndSim::character("manafretcherryport", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> Manshoon = std::make_shared<dndSim::npc>(dndSim::character("manshoon", 13, {10,14,12,23,15,16}, true, {"str","dex","con","int","wis","cha"}, "int", 19));
    std::shared_ptr<dndSim::npc> ManshoonSimulacrum = std::make_shared<dndSim::npc>(dndSim::character("manshoonsimulacrum", 8, {10,14,12,23,15,16}, true, {"str","dex","con","int","wis","cha"}, "int", 12));
    std::shared_ptr<dndSim::npc> MelannorFellbranch = std::make_shared<dndSim::npc>(dndSim::character("melannorfellbranch", 2, {10,12,13,12,15,11}, true, {}, "wis", 11));
    std::shared_ptr<dndSim::npc> MeloonWardragon = std::make_shared<dndSim::npc>(dndSim::character("meloonwardragon", 9, {20,15,14,10,14,15}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Mirt = std::make_shared<dndSim::npc>(dndSim::character("mirt", 9, {18,18,18,15,12,15}, false, {"dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Nimblewright = std::make_shared<dndSim::npc>(dndSim::character("nimblewright", 4, {12,18,17,8,10,6}, false, {"dex"}, "dex", 18));
    std::shared_ptr<dndSim::npc> Obliteros = std::make_shared<dndSim::npc>(dndSim::character("obliteros", 5, {23,11,21,10,10,5}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> RemalliaHaventree = std::make_shared<dndSim::npc>(dndSim::character("remalliahaventree", 9, {10,14,13,18,15,17}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> RenaerNeverember = std::make_shared<dndSim::npc>(dndSim::character("renaerneverember", 3, {12,18,12,14,11,15}, false, {}, "dex", 17));
    std::shared_ptr<dndSim::npc> RishaalthePage_Turner = std::make_shared<dndSim::npc>(dndSim::character("rishaalthepage_turner", 6, {9,14,11,17,12,11}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> SaethCromley = std::make_shared<dndSim::npc>(dndSim::character("saethcromley", 3, {16,13,14,10,11,14}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> ShardShunner = std::make_shared<dndSim::npc>(dndSim::character("shardshunner", 2, {10,15,12,11,10,8}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SkeemoWeirdbottle = std::make_shared<dndSim::npc>(dndSim::character("skeemoweirdbottle", 6, {9,14,12,17,12,15}, true, {"int","wis"}, "int", 12));
    std::shared_ptr<dndSim::npc> SoluunXibrindas = std::make_shared<dndSim::npc>(dndSim::character("soluunxibrindas", 4, {13,18,14,11,13,14}, true, {"dex","con","wis"}, "cha", 18));
    std::shared_ptr<dndSim::npc> TashlynYafeera = std::make_shared<dndSim::npc>(dndSim::character("tashlynyafeera", 9, {18,15,14,10,14,12}, false, {"str","con"}, "str", 18));
    std::shared_ptr<dndSim::npc> Thrakkus = std::make_shared<dndSim::npc>(dndSim::character("thrakkus", 2, {16,12,17,9,11,9}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> TissinaKhyret = std::make_shared<dndSim::npc>(dndSim::character("tissinakhyret", 2, {11,14,12,10,13,14}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> UrstulFloxin = std::make_shared<dndSim::npc>(dndSim::character("urstulfloxin", 8, {11,16,14,13,11,10}, false, {"dex","int"}, "dex", 15));
    std::shared_ptr<dndSim::npc> VajraSafahr = std::make_shared<dndSim::npc>(dndSim::character("vajrasafahr", 13, {10,14,12,20,11,16}, true, {"str","dex","con","int","wis","cha"}, "int", 14));
    std::shared_ptr<dndSim::npc> Valetta = std::make_shared<dndSim::npc>(dndSim::character("valetta", 2, {10,10,12,13,16,13}, true, {}, "wis", 13));
    std::shared_ptr<dndSim::npc> VictoroCassalanter = std::make_shared<dndSim::npc>(dndSim::character("victorocassalanter", 10, {13,13,14,16,17,18}, true, {"con","wis"}, "cha", 15));
    std::shared_ptr<dndSim::npc> WalkingStatueofWaterdeep = std::make_shared<dndSim::npc>(dndSim::character("walkingstatueofwaterdeep", 18, {30,8,27,1,10,1}, false, {"con"}, "str", 17));
    std::shared_ptr<dndSim::npc> ZhentMartialArtsAdept = std::make_shared<dndSim::npc>(dndSim::character("zhentmartialartsadept", 3, {11,17,13,11,16,10}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> ZirajtheHunter = std::make_shared<dndSim::npc>(dndSim::character("zirajthehunter", 8, {18,18,18,11,14,15}, true, {"wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> AdultAmethystDragon = std::make_shared<dndSim::npc>(dndSim::character("adultamethystdragon", 16, {25,14,25,20,17,21}, true, {"dex","con","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> AdultCrystalDragon = std::make_shared<dndSim::npc>(dndSim::character("adultcrystaldragon", 12, {21,12,21,18,15,19}, true, {"dex","con","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> AdultDeepDragon = std::make_shared<dndSim::npc>(dndSim::character("adultdeepdragon", 11, {20,14,18,16,16,18}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> AdultEmeraldDragon = std::make_shared<dndSim::npc>(dndSim::character("adultemeralddragon", 14, {23,12,21,18,16,18}, true, {"dex","con","wis","cha"}, "int", 18));
    std::shared_ptr<dndSim::npc> AdultMoonstoneDragon = std::make_shared<dndSim::npc>(dndSim::character("adultmoonstonedragon", 15, {20,18,20,22,20,23}, true, {"int","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> AdultTopazDragon = std::make_shared<dndSim::npc>(dndSim::character("adulttopazdragon", 13, {19,12,19,18,17,18}, true, {"dex","con","wis","cha"}, "int", 18));
    std::shared_ptr<dndSim::npc> AmethystDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("amethystdragonwyrmling", 4, {19,10,17,16,13,17}, true, {"dex","con","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> AncientCrystalDragon = std::make_shared<dndSim::npc>(dndSim::character("ancientcrystaldragon", 19, {25,12,26,20,16,21}, true, {"dex","con","wis","cha"}, "cha", 20));
    std::shared_ptr<dndSim::npc> AncientDeepDragon = std::make_shared<dndSim::npc>(dndSim::character("ancientdeepdragon", 18, {23,16,20,19,18,21}, false, {"dex","con","wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> AncientSeaSerpent = std::make_shared<dndSim::npc>(dndSim::character("ancientseaserpent", 14, {24,15,20,13,16,12}, false, {"str","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> AncientTopazDragon = std::make_shared<dndSim::npc>(dndSim::character("ancienttopazdragon", 20, {23,12,23,20,19,20}, true, {"dex","con","wis","cha"}, "int", 20));
    std::shared_ptr<dndSim::npc> AnimatedBreath = std::make_shared<dndSim::npc>(dndSim::character("animatedbreath", 6, {19,11,18,6,10,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> CrystalDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("crystaldragonwyrmling", 2, {14,12,14,14,13,15}, true, {"dex","con","wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> DeepDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("deepdragonwyrmling", 1, {14,11,12,11,12,13}, false, {"dex","con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Dracohydra = std::make_shared<dndSim::npc>(dndSim::character("dracohydra", 11, {20,12,20,6,12,12}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> DraconianDreadnought = std::make_shared<dndSim::npc>(dndSim::character("draconiandreadnought", 4, {18,10,18,10,10,10}, false, {"str","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> DraconianInfiltrator = std::make_shared<dndSim::npc>(dndSim::character("draconianinfiltrator", 3, {11,17,14,9,13,11}, false, {"dex"}, "dex", 15));
    std::shared_ptr<dndSim::npc> DraconianMage = std::make_shared<dndSim::npc>(dndSim::character("draconianmage", 2, {14,10,11,11,10,14}, true, {"int","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> DraconianMastermind = std::make_shared<dndSim::npc>(dndSim::character("draconianmastermind", 6, {13,14,16,15,11,17}, true, {"int","wis","cha"}, "cha", 17));
    std::shared_ptr<dndSim::npc> DraconicShard = std::make_shared<dndSim::npc>(dndSim::character("draconicshard", 17, {1,12,18,22,18,22}, true, {"dex","int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> DragonBlessed = std::make_shared<dndSim::npc>(dndSim::character("dragonblessed", 5, {12,10,16,14,17,10}, true, {"con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> DragonChosen = std::make_shared<dndSim::npc>(dndSim::character("dragonchosen", 3, {18,18,14,10,13,14}, false, {"str","dex","con"}, "str", 17));
    std::shared_ptr<dndSim::npc> DragonSpeaker = std::make_shared<dndSim::npc>(dndSim::character("dragonspeaker", 2, {10,14,12,13,11,17}, true, {"dex","cha"}, "cha", 13));
    std::shared_ptr<dndSim::npc> DragonTurtleWyrmling = std::make_shared<dndSim::npc>(dndSim::character("dragonturtlewyrmling", 4, {17,10,15,8,10,10}, false, {"dex","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> DragonbloodOoze = std::make_shared<dndSim::npc>(dndSim::character("dragonbloodooze", 5, {18,6,17,2,12,10}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> DragonboneGolem = std::make_shared<dndSim::npc>(dndSim::character("dragonbonegolem", 11, {20,10,17,3,11,10}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> DragonbornofBahamut = std::make_shared<dndSim::npc>(dndSim::character("dragonbornofbahamut", 8, {19,13,18,12,14,17}, false, {"con","int","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> DragonbornofSardior = std::make_shared<dndSim::npc>(dndSim::character("dragonbornofsardior", 6, {14,16,17,18,14,12}, true, {"con","int","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> DragonbornofTiamat = std::make_shared<dndSim::npc>(dndSim::character("dragonbornoftiamat", 7, {20,11,18,10,12,16}, false, {"str","con","wis","cha"}, "str", 18));
    std::shared_ptr<dndSim::npc> DragonfleshAbomination = std::make_shared<dndSim::npc>(dndSim::character("dragonfleshabomination", 6, {18,14,17,5,12,6}, false, {"str","con"}, "str", 15));
    std::shared_ptr<dndSim::npc> DragonfleshGrafter = std::make_shared<dndSim::npc>(dndSim::character("dragonfleshgrafter", 3, {16,11,14,10,10,6}, false, {"str","con"}, "str", 14));
    std::shared_ptr<dndSim::npc> Dragonnel = std::make_shared<dndSim::npc>(dndSim::character("dragonnel", 2, {16,15,12,8,13,10}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> EggHunterAdult = std::make_shared<dndSim::npc>(dndSim::character("egghunteradult", 5, {14,20,16,3,13,5}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> EggHunterHatchling = std::make_shared<dndSim::npc>(dndSim::character("egghunterhatchling", 2, {8,17,13,1,10,5}, false, {"dex","wis"}, "dex", 14));
    std::shared_ptr<dndSim::npc> EmeraldDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("emeralddragonwyrmling", 2, {15,12,15,14,12,14}, true, {"dex","con","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> Eyedrake = std::make_shared<dndSim::npc>(dndSim::character("eyedrake", 8, {16,10,16,14,14,16}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> GemStalker = std::make_shared<dndSim::npc>(dndSim::character("gemstalker", 5, {17,15,14,15,10,6}, false, {"dex","int"}, "str", 17));
    std::shared_ptr<dndSim::npc> GhostDragon = std::make_shared<dndSim::npc>(dndSim::character("ghostdragon", 17, {20,10,25,16,15,19}, false, {"con","wis","cha"}, "str", 10));
    std::shared_ptr<dndSim::npc> HoardMimic = std::make_shared<dndSim::npc>(dndSim::character("hoardmimic", 8, {21,12,17,10,16,10}, false, {"con","wis"}, "str", 14));
    std::shared_ptr<dndSim::npc> HollowDragon = std::make_shared<dndSim::npc>(dndSim::character("hollowdragon", 18, {23,12,21,16,13,21}, false, {"con","int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> Liondrake = std::make_shared<dndSim::npc>(dndSim::character("liondrake", 7, {19,15,17,6,12,12}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> MetallicPeacekeeper = std::make_shared<dndSim::npc>(dndSim::character("metallicpeacekeeper", 4, {17,10,18,14,12,11}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> MoonstoneDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("moonstonedragonwyrmling", 2, {16,14,14,16,14,17}, false, {"int","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> SapphireDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("sapphiredragonwyrmling", 3, {17,14,16,14,13,14}, true, {"dex","con","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> SwarmofHoardScarabs = std::make_shared<dndSim::npc>(dndSim::character("swarmofhoardscarabs", 2, {6,16,11,3,8,6}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> TopazDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("topazdragonwyrmling", 2, {15,12,13,14,13,14}, true, {"dex","con","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> YoungAmethystDragon = std::make_shared<dndSim::npc>(dndSim::character("youngamethystdragon", 9, {21,12,21,18,15,19}, true, {"dex","con","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> YoungCrystalDragon = std::make_shared<dndSim::npc>(dndSim::character("youngcrystaldragon", 5, {17,12,18,16,14,17}, true, {"dex","con","wis","cha"}, "cha", 15));
    std::shared_ptr<dndSim::npc> YoungDeepDragon = std::make_shared<dndSim::npc>(dndSim::character("youngdeepdragon", 5, {18,13,16,12,14,16}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> YoungDragonTurtle = std::make_shared<dndSim::npc>(dndSim::character("youngdragonturtle", 10, {21,10,19,10,12,12}, false, {"dex","con","wis"}, "str", 19));
    std::shared_ptr<dndSim::npc> YoungEmeraldDragon = std::make_shared<dndSim::npc>(dndSim::character("youngemeralddragon", 8, {21,12,19,16,14,16}, true, {"dex","con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> YoungMoonstoneDragon = std::make_shared<dndSim::npc>(dndSim::character("youngmoonstonedragon", 8, {18,16,17,18,17,19}, true, {"con","int","wis","cha"}, "cha", 18));
    std::shared_ptr<dndSim::npc> YoungSapphireDragon = std::make_shared<dndSim::npc>(dndSim::character("youngsapphiredragon", 9, {21,14,20,16,15,16}, true, {"dex","con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> YoungSeaSerpent = std::make_shared<dndSim::npc>(dndSim::character("youngseaserpent", 8, {19,12,17,11,13,10}, false, {"str","con"}, "str", 16));
    std::shared_ptr<dndSim::npc> YoungTopazDragon = std::make_shared<dndSim::npc>(dndSim::character("youngtopazdragon", 7, {17,12,15,16,15,16}, true, {"dex","con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> AartukElder = std::make_shared<dndSim::npc>(dndSim::character("aartukelder", 3, {18,10,15,12,14,12}, true, {}, "wis", 16));
    std::shared_ptr<dndSim::npc> AartukStarhorror = std::make_shared<dndSim::npc>(dndSim::character("aartukstarhorror", 2, {12,10,14,13,16,10}, true, {}, "wis", 14));
    std::shared_ptr<dndSim::npc> AartukWeedling = std::make_shared<dndSim::npc>(dndSim::character("aartukweedling", 2, {14,12,13,10,13,10}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> AdultLunarDragon = std::make_shared<dndSim::npc>(dndSim::character("adultlunardragon", 13, {23,12,20,10,13,15}, false, {"con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> AdultSolarDragon = std::make_shared<dndSim::npc>(dndSim::character("adultsolardragon", 14, {24,15,22,15,16,14}, false, {"dex","con","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> AncientLunarDragon = std::make_shared<dndSim::npc>(dndSim::character("ancientlunardragon", 19, {27,12,24,12,15,17}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> AstralElfAristocrat = std::make_shared<dndSim::npc>(dndSim::character("astralelfaristocrat", 8, {11,14,10,21,18,18}, true, {"int","wis","cha"}, "int", 16));
    std::shared_ptr<dndSim::npc> AstralElfCommander = std::make_shared<dndSim::npc>(dndSim::character("astralelfcommander", 7, {12,15,13,18,18,18}, true, {"dex","con","wis","cha"}, "int", 17));
    std::shared_ptr<dndSim::npc> AstralElfHonorGuard = std::make_shared<dndSim::npc>(dndSim::character("astralelfhonorguard", 5, {14,15,12,17,16,16}, false, {"wis","cha"}, "dex", 17));
    std::shared_ptr<dndSim::npc> AstralElfStarPriest = std::make_shared<dndSim::npc>(dndSim::character("astralelfstarpriest", 5, {11,11,10,16,20,17}, true, {"int","wis","cha"}, "wis", 13));
    std::shared_ptr<dndSim::npc> AstralElfWarrior = std::make_shared<dndSim::npc>(dndSim::character("astralelfwarrior", 3, {12,15,10,16,16,15}, false, {"dex","wis"}, "dex", 16));
    std::shared_ptr<dndSim::npc> Autognome = std::make_shared<dndSim::npc>(dndSim::character("autognome", 2, {13,6,16,4,11,6}, false, {"con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Brohg = std::make_shared<dndSim::npc>(dndSim::character("brohg", 6, {21,14,21,5,10,7}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> Braxat = std::make_shared<dndSim::npc>(dndSim::character("braxat", 9, {26,8,22,14,13,7}, true, {}, "int", 18));
    std::shared_ptr<dndSim::npc> BrownScavver = std::make_shared<dndSim::npc>(dndSim::character("brownscavver", 4, {18,15,17,1,10,1}, false, {}, "str", 13));
    std::shared_ptr<dndSim::npc> CosmicHorror = std::make_shared<dndSim::npc>(dndSim::character("cosmichorror", 18, {27,10,25,24,15,24}, false, {"int","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Esthetic = std::make_shared<dndSim::npc>(dndSim::character("esthetic", 12, {24,8,20,1,10,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> EyeMonger = std::make_shared<dndSim::npc>(dndSim::character("eyemonger", 10, {21,6,23,7,13,7}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> Feyr = std::make_shared<dndSim::npc>(dndSim::character("feyr", 5, {16,16,11,14,14,11}, false, {"int","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> Gaj = std::make_shared<dndSim::npc>(dndSim::character("gaj", 4, {16,10,15,12,15,7}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> GiffShipmate = std::make_shared<dndSim::npc>(dndSim::character("giffshipmate", 3, {18,14,17,11,12,12}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> GiffShockTrooper = std::make_shared<dndSim::npc>(dndSim::character("giffshocktrooper", 6, {20,14,18,11,12,13}, false, {"str","con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> GiffWarlord = std::make_shared<dndSim::npc>(dndSim::character("giffwarlord", 10, {22,15,18,14,14,18}, false, {"str","dex","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> GithyankiBuccaneer = std::make_shared<dndSim::npc>(dndSim::character("githyankibuccaneer", 3, {16,14,14,16,13,13}, true, {"con","int","wis"}, "int", 16));
    std::shared_ptr<dndSim::npc> GithyankiStarSeer = std::make_shared<dndSim::npc>(dndSim::character("githyankistarseer", 7, {11,11,14,19,16,14}, true, {"con","int","wis"}, "int", 13));
    std::shared_ptr<dndSim::npc> GithyankiXenomancer = std::make_shared<dndSim::npc>(dndSim::character("githyankixenomancer", 9, {14,18,17,15,18,13}, true, {"dex","con","wis"}, "wis", 14));
    std::shared_ptr<dndSim::npc> HadozeeExplorer = std::make_shared<dndSim::npc>(dndSim::character("hadozeeexplorer", 2, {11,17,13,13,17,14}, false, {"con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> JammerLeech = std::make_shared<dndSim::npc>(dndSim::character("jammerleech", 1, {11,1,16,1,10,1}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> Kindori = std::make_shared<dndSim::npc>(dndSim::character("kindori", 7, {25,7,17,6,14,7}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> LunarDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("lunardragonwyrmling", 2, {15,12,16,6,10,9}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Megapede = std::make_shared<dndSim::npc>(dndSim::character("megapede", 11, {22,10,17,1,10,3}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> Mercane = std::make_shared<dndSim::npc>(dndSim::character("mercane", 5, {16,10,15,18,16,15}, true, {"int","wis","cha"}, "int", 13));
    std::shared_ptr<dndSim::npc> MurderComet = std::make_shared<dndSim::npc>(dndSim::character("murdercomet", 5, {15,15,20,6,10,6}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> Neh_thalggu = std::make_shared<dndSim::npc>(dndSim::character("neh_thalggu", 4, {15,8,18,12,11,7}, true, {}, "int", 14));
    std::shared_ptr<dndSim::npc> NeogiHatchlingSwarm = std::make_shared<dndSim::npc>(dndSim::character("neogihatchlingswarm", 3, {12,13,14,6,10,9}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> NeogiPirate = std::make_shared<dndSim::npc>(dndSim::character("neogipirate", 3, {6,15,14,13,12,15}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> NeogiVoidHunter = std::make_shared<dndSim::npc>(dndSim::character("neogivoidhunter", 4, {6,16,14,16,12,18}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> NightScavver = std::make_shared<dndSim::npc>(dndSim::character("nightscavver", 5, {20,15,17,1,10,1}, false, {}, "str", 14));
    std::shared_ptr<dndSim::npc> PlasmoidBoss = std::make_shared<dndSim::npc>(dndSim::character("plasmoidboss", 4, {18,12,14,14,13,15}, false, {"con","wis"}, "str", 11));
    std::shared_ptr<dndSim::npc> PlasmoidWarrior = std::make_shared<dndSim::npc>(dndSim::character("plasmoidwarrior", 3, {16,14,14,10,11,10}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Psurlon = std::make_shared<dndSim::npc>(dndSim::character("psurlon", 2, {14,14,14,17,11,7}, true, {}, "int", 15));
    std::shared_ptr<dndSim::npc> PsurlonLeader = std::make_shared<dndSim::npc>(dndSim::character("psurlonleader", 6, {16,14,16,20,11,7}, true, {"wis","cha"}, "int", 15));
    std::shared_ptr<dndSim::npc> PsurlonRinger = std::make_shared<dndSim::npc>(dndSim::character("psurlonringer", 1, {10,11,10,17,11,7}, true, {}, "int", 13));
    std::shared_ptr<dndSim::npc> Reigar = std::make_shared<dndSim::npc>(dndSim::character("reigar", 8, {18,15,12,19,16,24}, true, {"dex","con","wis","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> SolarDragonWyrmling = std::make_shared<dndSim::npc>(dndSim::character("solardragonwyrmling", 3, {16,15,18,11,12,10}, false, {"dex","con","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> SpaceClown = std::make_shared<dndSim::npc>(dndSim::character("spaceclown", 2, {16,16,14,11,11,16}, true, {}, "cha", 13));
    std::shared_ptr<dndSim::npc> SsurranDefiler = std::make_shared<dndSim::npc>(dndSim::character("ssurrandefiler", 3, {13,12,16,15,15,7}, true, {"con","int"}, "int", 16));
    std::shared_ptr<dndSim::npc> StarlightApparition = std::make_shared<dndSim::npc>(dndSim::character("starlightapparition", 5, {1,11,10,18,16,16}, false, {}, "dex", 10));
    std::shared_ptr<dndSim::npc> Thri_kreenGladiator = std::make_shared<dndSim::npc>(dndSim::character("thri_kreengladiator", 7, {18,18,16,10,15,11}, false, {"str","dex","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> Thri_kreenHunter = std::make_shared<dndSim::npc>(dndSim::character("thri_kreenhunter", 2, {15,16,13,10,14,9}, false, {}, "dex", 16));
    std::shared_ptr<dndSim::npc> Thri_kreenMystic = std::make_shared<dndSim::npc>(dndSim::character("thri_kreenmystic", 5, {12,15,13,12,16,10}, true, {}, "wis", 15));
    std::shared_ptr<dndSim::npc> Vampirate = std::make_shared<dndSim::npc>(dndSim::character("vampirate", 2, {12,14,18,10,11,12}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> VampirateCaptain = std::make_shared<dndSim::npc>(dndSim::character("vampiratecaptain", 6, {15,16,18,12,13,16}, false, {"con","wis","cha"}, "dex", 15));
    std::shared_ptr<dndSim::npc> VampirateMage = std::make_shared<dndSim::npc>(dndSim::character("vampiratemage", 5, {12,14,18,13,14,15}, true, {"wis","cha"}, "cha", 14));
    std::shared_ptr<dndSim::npc> VoidScavver = std::make_shared<dndSim::npc>(dndSim::character("voidscavver", 11, {22,16,19,4,13,5}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> YoungLunarDragon = std::make_shared<dndSim::npc>(dndSim::character("younglunardragon", 7, {19,12,18,8,10,13}, false, {"con","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> YoungSolarDragon = std::make_shared<dndSim::npc>(dndSim::character("youngsolardragon", 9, {20,15,20,13,14,12}, false, {"dex","con","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Zodar = std::make_shared<dndSim::npc>(dndSim::character("zodar", 16, {30,10,26,12,15,18}, false, {"con","int","wis","cha"}, "str", 20));
    std::shared_ptr<dndSim::npc> BodytakerPlant = std::make_shared<dndSim::npc>(dndSim::character("bodytakerplant", 7, {18,8,20,14,14,18}, false, {}, "str", 16));
    std::shared_ptr<dndSim::npc> Boneless = std::make_shared<dndSim::npc>(dndSim::character("boneless", 1, {16,14,15,1,10,1}, false, {}, "str", 12));
    std::shared_ptr<dndSim::npc> CarrionStalker = std::make_shared<dndSim::npc>(dndSim::character("carrionstalker", 3, {6,16,12,2,13,6}, false, {}, "dex", 14));
    std::shared_ptr<dndSim::npc> Carrionette = std::make_shared<dndSim::npc>(dndSim::character("carrionette", 1, {10,15,12,8,14,14}, false, {}, "dex", 15));
    std::shared_ptr<dndSim::npc> Elise = std::make_shared<dndSim::npc>(dndSim::character("elise", 5, {19,9,18,6,10,5}, false, {}, "str", 9));
    std::shared_ptr<dndSim::npc> GallowsSpeaker = std::make_shared<dndSim::npc>(dndSim::character("gallowsspeaker", 6, {8,14,10,10,12,18}, false, {"wis"}, "dex", 12));
    std::shared_ptr<dndSim::npc> InquisitoroftheMindFire = std::make_shared<dndSim::npc>(dndSim::character("inquisitorofthemindfire", 8, {10,14,12,17,16,19}, true, {"int","wis","cha"}, "cha", 16));
    std::shared_ptr<dndSim::npc> InquisitoroftheSword = std::make_shared<dndSim::npc>(dndSim::character("inquisitorofthesword", 8, {12,14,14,15,18,16}, true, {"int","wis","cha"}, "wis", 16));
    std::shared_ptr<dndSim::npc> InquisitoroftheTome = std::make_shared<dndSim::npc>(dndSim::character("inquisitorofthetome", 8, {10,12,12,19,16,15}, true, {"int","wis","cha"}, "int", 11));
    std::shared_ptr<dndSim::npc> Isolde = std::make_shared<dndSim::npc>(dndSim::character("isolde", 5, {18,18,16,14,12,16}, true, {"str","con","int","cha"}, "cha", 19));
    std::shared_ptr<dndSim::npc> Jiangshi = std::make_shared<dndSim::npc>(dndSim::character("jiangshi", 9, {18,3,18,17,14,12}, false, {"con","int","wis","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> LesserStarSpawnEmissary = std::make_shared<dndSim::npc>(dndSim::character("lesserstarspawnemissary", 19, {21,18,24,25,20,23}, false, {"int","wis","cha"}, "str", 19));
    std::shared_ptr<dndSim::npc> LoupGarou = std::make_shared<dndSim::npc>(dndSim::character("loupgarou", 13, {18,18,18,14,16,16}, false, {"dex","con","cha"}, "str", 16));
    std::shared_ptr<dndSim::npc> Necrichor = std::make_shared<dndSim::npc>(dndSim::character("necrichor", 7, {8,15,17,17,13,10}, false, {"con","int","wis"}, "dex", 12));
    std::shared_ptr<dndSim::npc> Nosferatu = std::make_shared<dndSim::npc>(dndSim::character("nosferatu", 8, {20,18,21,6,17,14}, false, {"dex","con","wis"}, "str", 17));
    std::shared_ptr<dndSim::npc> PriestofOsybus = std::make_shared<dndSim::npc>(dndSim::character("priestofosybus", 6, {10,14,16,18,17,11}, false, {"int","wis","cha"}, "dex", 14));
    std::shared_ptr<dndSim::npc> RelentlessJuggernaut = std::make_shared<dndSim::npc>(dndSim::character("relentlessjuggernaut", 12, {22,12,22,8,15,16}, false, {"dex","wis","cha"}, "str", 17));
    std::shared_ptr<dndSim::npc> RelentlessSlasher = std::make_shared<dndSim::npc>(dndSim::character("relentlessslasher", 8, {12,18,14,14,15,16}, false, {"str","dex","con","wis"}, "dex", 15));
    std::shared_ptr<dndSim::npc> Strigoi = std::make_shared<dndSim::npc>(dndSim::character("strigoi", 4, {17,14,16,11,17,10}, false, {"str","dex","wis"}, "str", 16));
    std::shared_ptr<dndSim::npc> SwarmofGremishkas = std::make_shared<dndSim::npc>(dndSim::character("swarmofgremishkas", 2, {12,14,10,12,14,4}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> SwarmofMaggots = std::make_shared<dndSim::npc>(dndSim::character("swarmofmaggots", 2, {3,12,10,1,7,1}, false, {}, "dex", 11));
    std::shared_ptr<dndSim::npc> SwarmofScarabs = std::make_shared<dndSim::npc>(dndSim::character("swarmofscarabs", 3, {3,14,13,1,12,1}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> SwarmofZombieLimbs = std::make_shared<dndSim::npc>(dndSim::character("swarmofzombielimbs", 1, {14,10,10,3,8,5}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> UnspeakableHorror = std::make_shared<dndSim::npc>(dndSim::character("unspeakablehorror", 8, {21,13,19,3,14,17}, false, {"con","wis"}, "str", 15));
    std::shared_ptr<dndSim::npc> VampiricMindFlayer = std::make_shared<dndSim::npc>(dndSim::character("vampiricmindflayer", 5, {18,18,18,5,15,18}, false, {"dex","int","wis","cha"}, "str", 15));
    std::shared_ptr<dndSim::npc> Wereraven = std::make_shared<dndSim::npc>(dndSim::character("wereraven", 2, {10,15,11,13,15,14}, false, {}, "dex", 12));
    std::shared_ptr<dndSim::npc> ZombieClot = std::make_shared<dndSim::npc>(dndSim::character("zombieclot", 6, {20,10,16,3,8,10}, false, {"con"}, "str", 12));
    std::shared_ptr<dndSim::npc> ZombiePlagueSpreader = std::make_shared<dndSim::npc>(dndSim::character("zombieplaguespreader", 4, {16,10,15,3,5,5}, false, {}, "str", 10));
    std::shared_ptr<dndSim::npc> AnimatedBallista = std::make_shared<dndSim::npc>(dndSim::character("animatedballista", 2, {14,10,10,3,3,1}, false, {}, "str", 15));
    std::shared_ptr<dndSim::npc> AnimatedStove = std::make_shared<dndSim::npc>(dndSim::character("animatedstove", 3, {14,10,10,3,3,1}, false, {}, "str", 17));
    std::shared_ptr<dndSim::npc> BoreWorm = std::make_shared<dndSim::npc>(dndSim::character("boreworm", 16, {28,7,22,1,8,4}, false, {"con","wis"}, "str", 18));
    std::shared_ptr<dndSim::npc> LavaChild = std::make_shared<dndSim::npc>(dndSim::character("lavachild", 3, {18,13,16,11,10,10}, false, {}, "str", 11));
    std::shared_ptr<dndSim::npc> Muiral = std::make_shared<dndSim::npc>(dndSim::character("muiral", 13, {19,11,16,18,13,18}, true, {"con","int"}, "int", 16));
    std::shared_ptr<dndSim::npc> Scaladar = std::make_shared<dndSim::npc>(dndSim::character("scaladar", 8, {19,10,25,1,12,1}, false, {}, "str", 19));
    std::shared_ptr<dndSim::npc> ShadowAssassin = std::make_shared<dndSim::npc>(dndSim::character("shadowassassin", 9, {6,19,14,13,12,14}, false, {"dex","int"}, "dex", 14));
    std::shared_ptr<dndSim::npc> Shockerstomper = std::make_shared<dndSim::npc>(dndSim::character("shockerstomper", 14, {23,10,20,1,1,1}, false, {}, "str", 18));
    std::shared_ptr<dndSim::npc> Werebat = std::make_shared<dndSim::npc>(dndSim::character("werebat", 2, {8,17,10,10,12,8}, false, {}, "dex", 13));
    std::shared_ptr<dndSim::npc> ZorakLightdrinker = std::make_shared<dndSim::npc>(dndSim::character("zoraklightdrinker", 13, {18,18,18,17,15,18}, false, {"dex","wis","cha"}, "str", 18));



    std::vector<std::vector<std::shared_ptr<dndSim::npc>>> monsters = {
        {dndSim::Homarid, dndSim::GiantSwan, dndSim::KettlesteamtheKenku, dndSim::Raezil, dndSim::SwarmofCampestris, dndSim::TinSoldier, dndSim::GuardianPortrait, dndSim::StrahdZombie, dndSim::Choker, dndSim::ClockworkBronzeScout, dndSim::Deinonychus, dndSim::DuergarSoulblade, dndSim::FemaleSteeder, dndSim::FirenewtWarlockofImix, dndSim::GiantStrider, dndSim::GnollFleshGnawer, dndSim::GrungWildling, dndSim::KoboldDragonshield, dndSim::KoboldScaleSorcerer, dndSim::MawDemon, dndSim::Meazel, dndSim::Nilbog, dndSim::Quickling, dndSim::SeaSpawn, dndSim::StoneCursed, dndSim::ThornyVegepygmy, dndSim::Vargouille, dndSim::XvartWarlockofRaxivort, dndSim::AlbinoDwarfSpiritWarrior, dndSim::AldanilLobsterfolkr, dndSim::Eblis, dndSim::Mantrap, dndSim::Pterafolk, dndSim::Su_monster, dndSim::TabaxiHunter, dndSim::IrdaSeeker, dndSim::ThanoiHunter, dndSim::AnimatedArmor, dndSim::BrassDragonWyrmling, dndSim::BrownBear, dndSim::Bugbear, dndSim::CopperDragonWyrmling, dndSim::DeathDog, dndSim::DireWolf, dndSim::Dryad, dndSim::Duergar, dndSim::FaerieDragonlOranger, dndSim::FaerieDragonlRedr, dndSim::FaerieDragonlYellowr, dndSim::FireSnake, dndSim::Ghoul, dndSim::GiantEagle, dndSim::GiantHyena, dndSim::GiantOctopus, dndSim::GiantSpider, dndSim::GiantToad, dndSim::GiantVulture, dndSim::GoblinBoss, dndSim::Half_OgrelOgrillonr, dndSim::Harpy, dndSim::Hippogriff, dndSim::Imp, dndSim::Kuo_toaWhip, dndSim::Lion, dndSim::Quadrone, dndSim::QuaggothSporeServant, dndSim::Quasit, dndSim::Scarecrow, dndSim::Specter, dndSim::Spy, dndSim::SwarmofQuippers, dndSim::Thri_kreen, dndSim::Tiger, dndSim::Yuan_tiPureblood, dndSim::LordsAllianceSpy, dndSim::ClockworkDefender, dndSim::TasloiSniper, dndSim::BoneTrader, dndSim::LupiliskWhelp, dndSim::MalikirianImp, dndSim::OblivionLeaper, dndSim::ShatterCorpse, dndSim::SlothGalloper, dndSim::VenomousGnoll, dndSim::BustertheBear, dndSim::LaylatheLizard, dndSim::SkullLasherofMyrkul, dndSim::HedgeMage, dndSim::HypnoticEldritchBlossom, dndSim::MercenaryEnvoy, dndSim::Category1Krasis, dndSim::GalvaniceWeird, dndSim::Horncaller, dndSim::HybridPoisoner, dndSim::HybridShocker, dndSim::IndenturedSpirit, dndSim::RakdosPerformerBladeJuggler, dndSim::RakdosPerformerFireEater, dndSim::RakdosPerformerHigh_WireAcrobat, dndSim::ThoughtSpy, dndSim::AlehouseDrake, dndSim::Ashwalker, dndSim::BastetTempleCat, dndSim::Boloti, dndSim::Broodiken, dndSim::Chernomoi, dndSim::ChildoftheBriar, dndSim::ClockworkWeavingSpider, dndSim::CrimsonDrake, dndSim::Dogmole, dndSim::EmeraldEye, dndSim::EonicDrifter, dndSim::ErinaDefender, dndSim::Gerridae, dndSim::GlassGator, dndSim::Leshy, dndSim::MithralDragonWyrmling, dndSim::MossLurker, dndSim::NihilethicZombie, dndSim::RatfolkRogue, dndSim::RimeWormGrub, dndSim::SharkjawSkeleton, dndSim::WampusCat, dndSim::WindDragonWyrmling, dndSim::ZanskaranViper, dndSim::Two_HeadedCrocodile, dndSim::Dragonclaw, dndSim::JamnaGleamsilver, dndSim::Thorny, dndSim::DzaansSimulacrum, dndSim::HypnosMagen, dndSim::Prisoner237, dndSim::StrixhavenCampusGuide, dndSim::EvilMage, dndSim::ScreamingDevilkin, dndSim::MerrowExtortionist, dndSim::SporeServantOctopus, dndSim::Tarak, dndSim::AnimatedGlassStatue, dndSim::ScholarlyAgent, dndSim::HarrowHawk, dndSim::BronzeScout, dndSim::DragonArmySoldier, dndSim::RazorvineBlight, dndSim::SwarmofSunflies, dndSim::VargouilleReflection, dndSim::CoreSpawnCrawler, dndSim::HuskZombie, dndSim::Moorbounder, dndSim::SkenZabriss, dndSim::AnimatedChainedLibrary, dndSim::IceToad, dndSim::SildarHallwinter, dndSim::FeathergaleKnight, dndSim::DankwoodGrung, dndSim::ClockworkDragon, dndSim::DemonfeedSpiderling, dndSim::FrayMerridan, dndSim::HedgeWitch, dndSim::LesserDemon, dndSim::MountainLion, dndSim::SusanoftheSwamp, dndSim::VulpinCaptain, dndSim::FaeriePest, dndSim::DreadWarrior, dndSim::Durnn, dndSim::Yusdrayl, dndSim::IarnoGlasstaffAlbrek, dndSim::ScarletSentinel, dndSim::Alseid, dndSim::BronzeSable, dndSim::Nyx_FleeceRam, dndSim::ReturnedSentry, dndSim::SatyrReveler, dndSim::Krenko, dndSim::LoadingRig, dndSim::AstralBlight, dndSim::CragCat, dndSim::Zaltember, dndSim::Kysh, dndSim::LizardfolkScaleshield, dndSim::MerfolkSalvager, dndSim::PirateDeckWizard, dndSim::PirateFirstMate, dndSim::SahuaginCoralSmasher, dndSim::Sanbalet, dndSim::Clawfoot, dndSim::IronDefender, dndSim::LivingBurningHands, dndSim::WarforgedSoldier, dndSim::BagJelly, dndSim::GiantRam, dndSim::GrinningCat, dndSim::DeepDragonWyrmling, dndSim::JammerLeech, dndSim::PsurlonRinger, dndSim::Boneless, dndSim::Carrionette, dndSim::SwarmofZombieLimbs},
        {dndSim::KavuPredator, dndSim::AgdonLongscarf, dndSim::Elkhorn, dndSim::GlassPegasus, dndSim::GlassworkGolem, dndSim::LivingDoll, dndSim::SelenelionTwin, dndSim::SirTalavar, dndSim::Skylla, dndSim::TreantSapling, dndSim::Zarak, dndSim::Aeshma, dndSim::AdultKruthik, dndSim::Aurochs, dndSim::Bard, dndSim::Berbalang, dndSim::DarklingElder, dndSim::DuergarHammerer, dndSim::DuergarKavalrachni, dndSim::DuergarMindMaster, dndSim::DuergarStoneGuard, dndSim::DuergarXarrorn, dndSim::GrungEliteWarrior, dndSim::GuardDrake, dndSim::HobgoblinIronShadow, dndSim::Meenlock, dndSim::OgreBoltLauncher, dndSim::OgreHowdah, dndSim::Quetzalcoatlus, dndSim::Rutterkin, dndSim::ShadowMastiff, dndSim::TortleDruid, dndSim::VegepygmyChief, dndSim::Yuan_tiBroodguard, dndSim::ClockworkHorror, dndSim::StarLancer, dndSim::Asharra, dndSim::HewHackinstone, dndSim::YellowMuskCreeper, dndSim::NevermindGnomeInventor, dndSim::Allosaurus, dndSim::Ankheg, dndSim::AwakenedTree, dndSim::Azer, dndSim::BanditCaptain, dndSim::Berserker, dndSim::BlackDragonWyrmling, dndSim::BronzeDragonWyrmling, dndSim::CarrionCrawler, dndSim::CaveBear, dndSim::Centaur, dndSim::CultFanatic, dndSim::Druid, dndSim::Ettercap, dndSim::FaerieDragonlBluer, dndSim::FaerieDragonlGreenr, dndSim::FaerieDragonlIndigor, dndSim::FaerieDragonlVioletr, dndSim::Gargoyle, dndSim::GelatinousCube, dndSim::Ghast, dndSim::GiantBoar, dndSim::GiantConstrictorSnake, dndSim::GiantElk, dndSim::GibberingMouther, dndSim::GithzeraiMonk, dndSim::GnollPackLord, dndSim::GreenDragonWyrmling, dndSim::Grick, dndSim::Griffon, dndSim::HunterShark, dndSim::IntellectDevourer, dndSim::LizardfolkShaman, dndSim::Merrow, dndSim::Mimic, dndSim::MinotaurSkeleton, dndSim::MyconidSovereign, dndSim::Nothic, dndSim::OchreJelly, dndSim::Ogre, dndSim::OgreZombie, dndSim::OrcEyeofGruumsh, dndSim::Orog, dndSim::Pegasus, dndSim::Pentadrone, dndSim::Peryton, dndSim::Plesiosaurus, dndSim::PolarBear, dndSim::Poltergeist, dndSim::Priest, dndSim::Quaggoth, dndSim::Rhinoceros, dndSim::RugofSmothering, dndSim::Saber_ToothedTiger, dndSim::SahuaginPriestess, dndSim::SeaHag, dndSim::SilverDragonWyrmling, dndSim::SpinedDevil, dndSim::SwarmofPoisonousSnakes, dndSim::Wererat, dndSim::WhiteDragonWyrmling, dndSim::Will_o_Wisp, dndSim::AwakenedZurkhwood, dndSim::ChamberlainofZuggtmoy, dndSim::Droki, dndSim::DuergarDarkhaft, dndSim::DuergarKeeperoftheFlame, dndSim::Grisha, dndSim::Narrak, dndSim::VampiricIxitxachitl, dndSim::VampiricIxitxachitlCleric, dndSim::Hamadryad, dndSim::EldritchPriest, dndSim::GnollBrute, dndSim::HorrorFlitHunter, dndSim::MjorkSootlingSwarm, dndSim::OblivionWhistler, dndSim::OozingVulture, dndSim::SeaDrake, dndSim::SkeletonCannoneer, dndSim::SpythronarSwarm, dndSim::SpythronarWeb, dndSim::Vitebriate, dndSim::ThomasTToad, dndSim::IronConsul, dndSim::ReaperofBhaal, dndSim::WarlockoftheRatGod, dndSim::CounterfluxBlastseeker, dndSim::HybridBrute, dndSim::HybridFlier, dndSim::RakdosLampooner, dndSim::SkyjekRoc, dndSim::Anubian, dndSim::Behtu, dndSim::Beli, dndSim::CaveDragonWyrmling, dndSim::ClockworkHound, dndSim::Cobbleswarm, dndSim::DeepOne, dndSim::Doppelrat, dndSim::Eala, dndSim::EelHound, dndSim::Firegeist, dndSim::FlameDragonWyrmling, dndSim::FolkofLeng, dndSim::GiantAnt, dndSim::GrayThirster, dndSim::InkDevil, dndSim::KoboldAlchemist, dndSim::KoboldTrapsmith, dndSim::Myling, dndSim::Noctiny, dndSim::PaperDrake, dndSim::PutridHaunt, dndSim::RoachlingLord, dndSim::Shadhavar, dndSim::Shellycoat, dndSim::SpiderThief, dndSim::TendrilPuppet, dndSim::Uraeus, dndSim::VileBarber, dndSim::VoidDragonWyrmling, dndSim::Imelda, dndSim::Dragonwing, dndSim::FrulamMondath, dndSim::BlackGuardDrake, dndSim::BlueGuardDrake, dndSim::GreenGuardDrake, dndSim::OrcClawofLuthic, dndSim::OrcHandofYurtrus, dndSim::RedGuardDrake, dndSim::WhiteGuardDrake, dndSim::DemosMagen, dndSim::GrandolphaMuzgardt, dndSim::GarretLevistusson, dndSim::MaryGreymalkin, dndSim::LoreholdApprentice, dndSim::PrismariApprentice, dndSim::QuandrixApprentice, dndSim::RelicSloth, dndSim::SilverquillApprentice, dndSim::WitherbloomApprentice, dndSim::Blindheim, dndSim::Varnoth, dndSim::LaurinOphidas, dndSim::OccultInitiate, dndSim::CreepyDoll, dndSim::MinotaurInfiltrator, dndSim::Oddlewin, dndSim::BozakDraconian, dndSim::FewmasterGholcag, dndSim::Dabus, dndSim::LanternArchon, dndSim::MustevalGuardinal, dndSim::Gingwatzim, dndSim::KTulah, dndSim::MimicChair, dndSim::RamSugar, dndSim::NezznartheBlackSpider, dndSim::BlackEarthGuard, dndSim::CrushingWavePriest, dndSim::EternalFlameGuardian, dndSim::Fathomer, dndSim::HowlingHatredPriest, dndSim::Hurricane, dndSim::Oreioth, dndSim::WigganNettlebee, dndSim::DankwoodDuergar, dndSim::KingRobbittheSlimy, dndSim::AuspiciaDran, dndSim::BrahmaLutier, dndSim::KegRobot, dndSim::OakTruestrike, dndSim::PendragonBeestinger, dndSim::PhoenixAnvil, dndSim::ProphetessDran, dndSim::SplugoththeReturned, dndSim::CentaurSkeleton, dndSim::Plainscow, dndSim::ArdwynElderofMeadowfen, dndSim::BennaSeridan, dndSim::BirdfolkDockmaster, dndSim::CervanBanditGeneral, dndSim::HaveloftheAutumnMoon, dndSim::HedgeBard, dndSim::LumaClericofArdea, dndSim::ShylaDenn, dndSim::VulpinPriestofKren, dndSim::FaeriePathlighter, dndSim::SewerKing, dndSim::AnimatedTable, dndSim::BelaktheOutcast, dndSim::Calcryx, dndSim::DuergarSpy, dndSim::Four_ArmedGargoyle, dndSim::GiantCrayfish, dndSim::Kaarghaz, dndSim::Nereid, dndSim::Snurrevin, dndSim::ThayanApprentice, dndSim::ThayanWarrior, dndSim::GoblinPsiBrawler, dndSim::NezznartheSpider, dndSim::Aurumvorax, dndSim::BurnishedHart, dndSim::Naiad, dndSim::SatyrThornbearer, dndSim::TritonShorestalker, dndSim::Two_HeadedCerberus, dndSim::PurpleWormling, dndSim::UthgardtShaman, dndSim::BullywugCroaker, dndSim::DrownedBlade, dndSim::KoalinthSergeant, dndSim::LocathahHunter, dndSim::PirateCaptain, dndSim::RipTidePriest, dndSim::ShellShark, dndSim::SkeletalSwarm, dndSim::Inspired, dndSim::TarkananAssassin, dndSim::UndyingSoldier, dndSim::GiantTick, dndSim::BarnibusBlastwind, dndSim::FalaLefaliir, dndSim::GriffonCavalryRider, dndSim::JandarChergoba, dndSim::Kalain, dndSim::LadyGondafrey, dndSim::LaibaNanaRosse, dndSim::MelannorFellbranch, dndSim::ShardShunner, dndSim::Thrakkus, dndSim::TissinaKhyret, dndSim::Valetta, dndSim::CrystalDragonWyrmling, dndSim::DraconianMage, dndSim::DragonSpeaker, dndSim::Dragonnel, dndSim::EggHunterHatchling, dndSim::EmeraldDragonWyrmling, dndSim::MoonstoneDragonWyrmling, dndSim::SwarmofHoardScarabs, dndSim::TopazDragonWyrmling, dndSim::AartukStarhorror, dndSim::AartukWeedling, dndSim::Autognome, dndSim::HadozeeExplorer, dndSim::LunarDragonWyrmling, dndSim::Psurlon, dndSim::SpaceClown, dndSim::Thri_kreenHunter, dndSim::Vampirate, dndSim::SwarmofGremishkas, dndSim::SwarmofMaggots, dndSim::Wereraven, dndSim::AnimatedBallista, dndSim::Werebat},
        {dndSim::Alagarthas, dndSim::BullywugKnight, dndSim::Mercion, dndSim::MisterLight, dndSim::MisterWitch, dndSim::Molliver, dndSim::Zargash, dndSim::PhantomWarrior, dndSim::BigWaterSlurpent, dndSim::DankwoodHag, dndSim::Archer, dndSim::Bulezau, dndSim::CaveFisher, dndSim::Choldrith, dndSim::DeathlockWight, dndSim::DeepScion, dndSim::DerroSavant, dndSim::DolphinDelighter, dndSim::DuergarScreamer, dndSim::FlailSnail, dndSim::Giff, dndSim::IllusionistWizard, dndSim::Leucrotta, dndSim::MartialArtsAdept, dndSim::Merrenoloth, dndSim::Neogi, dndSim::OgreChainBrute, dndSim::Redcap, dndSim::ShadowMastiffAlpha, dndSim::SlitheringTracker, dndSim::Swashbuckler, dndSim::SwordWraithWarrior, dndSim::Trapper, dndSim::VampiricMist, dndSim::PuppeteerParasite, dndSim::AnkylosaurusZombie, dndSim::AssassinVine, dndSim::GiantSnappingTurtle, dndSim::GirallonZombie, dndSim::TombDwarf, dndSim::Ankylosaurus, dndSim::Basilisk, dndSim::BeardedDevil, dndSim::BlueDragonWyrmling, dndSim::BugbearChief, dndSim::DisplacerBeast, dndSim::Doppelganger, dndSim::GiantScorpion, dndSim::GithyankiWarrior, dndSim::GoldDragonWyrmling, dndSim::GreenHag, dndSim::Grell, dndSim::HellHound, dndSim::HobgoblinCaptain, dndSim::HookHorror, dndSim::KillerWhale, dndSim::Knight, dndSim::Kuo_toaMonitor, dndSim::Manticore, dndSim::Minotaur, dndSim::Mummy, dndSim::Nightmare, dndSim::Owlbear, dndSim::PhaseSpider, dndSim::QuaggothThonot, dndSim::Spectator, dndSim::Veteran, dndSim::WaterWeird, dndSim::Werewolf, dndSim::Wight, dndSim::WinterWolf, dndSim::Yeti, dndSim::Yuan_tiMalisonlType1r, dndSim::Yuan_tiMalisonlType2r, dndSim::Yuan_tiMalisonlType3r, dndSim::DeepkingHorgarSteelshadowV, dndSim::HookHorrorSporeServant, dndSim::TroglodyteChampionofLaogzed, dndSim::VeteranoftheGauntlet, dndSim::MarkosDelphi, dndSim::Sirene, dndSim::SwordSpider, dndSim::Lupilisk, dndSim::Mjork, dndSim::PanjaianIlharan, dndSim::PsychicFragmentSwarm, dndSim::ScreamThief, dndSim::SkeletonCommander, dndSim::Skinweaver, dndSim::BillyBeaver, dndSim::AmrikVanthampur, dndSim::MortlockVanthampur, dndSim::RilsaRael, dndSim::AnimatedCoffin, dndSim::RatPrince, dndSim::Scoundrel, dndSim::UrbanRanger, dndSim::FlyingHorror, dndSim::PrecognitiveMage, dndSim::Amphiptere, dndSim::Bagiennik, dndSim::Bearfolk, dndSim::Cactid, dndSim::Citrullus, dndSim::ClockworkBeetleSwarm, dndSim::ClockworkHuntsman, dndSim::Darakhul, dndSim::DuskthornDryad, dndSim::ElvishVeteranArcher, dndSim::FarDarrig, dndSim::GnollHavocRunner, dndSim::Goat_Man, dndSim::Greyfur, dndSim::JbaFofiSpider, dndSim::Jaculus, dndSim::KotBayun, dndSim::Mahoru, dndSim::MbieluDinosaur, dndSim::Millitaur, dndSim::MindrotThrall, dndSim::Mirager, dndSim::MonolithFootman, dndSim::NightScorpion, dndSim::Pombero, dndSim::RavenfolkWarrior, dndSim::SeaDragonWyrmling, dndSim::SpireWalker, dndSim::Strife, dndSim::StygianFat_TailedScorpion, dndSim::SwarmofPrismaticBeetles, dndSim::SwarmofSluaghs, dndSim::SwarmofWharflings, dndSim::Thursir, dndSim::TosculiWarrior, dndSim::VenomousMummy, dndSim::WolfReaverDwarf, dndSim::Tooth_N_Claw, dndSim::Two_HeadedOwlbear, dndSim::DralmorrerBorngray, dndSim::PharblexSpattergoo, dndSim::Illusionist, dndSim::OrcRedFangofShargaas, dndSim::Yuan_tiMalisonlType4r, dndSim::Yuan_tiMalisonlType5r, dndSim::AwakenedWhiteMoose, dndSim::GalvanMagen, dndSim::GoliathWarrior, dndSim::KoboldVampireSpawn, dndSim::SephekKaltro, dndSim::SnowGolem, dndSim::Chupacabra, dndSim::BrackishTrudge, dndSim::GiantSlug, dndSim::AssassinBug, dndSim::CrabFolk, dndSim::Forlarren, dndSim::NeedleLord, dndSim::NorkerWarLeader, dndSim::Xill, dndSim::AyoJabelTier1r, dndSim::DermotWurderlTier1r, dndSim::GalsariadArdythlTier1r, dndSim::IrvanWastewalkerlTier1r, dndSim::MaggieKeeneyeslTier1r, dndSim::ScholarlyExcavator, dndSim::YoungHorizonbackTortoise, dndSim::WerewolflKrallenhorder, dndSim::Brusipha, dndSim::HarrowHound, dndSim::LivingPortent, dndSim::DragonArmyDragonnel, dndSim::DragonArmyOfficer, dndSim::KapakDraconian, dndSim::WastelandDragonnel, dndSim::BariaurWanderer, dndSim::BleakCabalVoidSoother, dndSim::GithzeraiTraveler, dndSim::HarmoniumPeacekeeper, dndSim::SocietyofSensationMuse, dndSim::TranscendentOrderInstinct, dndSim::Bolbara, dndSim::BristledMoorbounder, dndSim::Nergaliid, dndSim::SahuaginWarlockofUkotoa, dndSim::MormesktheWraith, dndSim::BlackEarthPriest, dndSim::DarkTideKnight, dndSim::EternalFlamePriest, dndSim::One_EyedShiver, dndSim::Skyweaver, dndSim::ThurlMerosska, dndSim::Windharrow, dndSim::AnchoriteofTalos, dndSim::SludgeHag, dndSim::DonaarBlitzen, dndSim::KthrissDrowb, dndSim::PortentiaDran, dndSim::RosieBeestinger, dndSim::WalnutDankgrass, dndSim::ClaspCutthroat, dndSim::KraghammerGoat_Knight, dndSim::RavagerStabby_Stabber, dndSim::VosskyrissSerpentfolk, dndSim::JerbeenSwashbuckler, dndSim::KralltheScavengerKing, dndSim::MapachBrute, dndSim::RiffintheAsh_Knight, dndSim::StrigKnight, dndSim::StrigTracker, dndSim::KnightofEldraine, dndSim::OgreChitterlord, dndSim::RedtoothWerefox, dndSim::GiantIceToad, dndSim::GiantLightningEel, dndSim::Kalka_Kylla, dndSim::Nahual, dndSim::Siren, dndSim::EncephalonGemmule, dndSim::AkroanHoplite, dndSim::BrokenKingAntigonos, dndSim::FleecemaneLion, dndSim::FlitterstepEidolon, dndSim::Lampad, dndSim::MeletianHoplite, dndSim::ThunderbeastSkeleton, dndSim::YakfolkWarrior, dndSim::BullywugRoyal, dndSim::DrownedAscetic, dndSim::LizardfolkRender, dndSim::LizardfolkSubchief, dndSim::SahuaginChampion, dndSim::SahuaginHatchlingSwarm, dndSim::Dolgaunt, dndSim::KarrnathiUndeadSoldier, dndSim::GiantGoose, dndSim::GiantOx, dndSim::GoliathGiant_Kin, dndSim::MudHulk, dndSim::SpottedLion, dndSim::DiningTableMimic, dndSim::RenaerNeverember, dndSim::SaethCromley, dndSim::ZhentMartialArtsAdept, dndSim::DraconianInfiltrator, dndSim::DragonChosen, dndSim::DragonfleshGrafter, dndSim::SapphireDragonWyrmling, dndSim::AartukElder, dndSim::AstralElfWarrior, dndSim::GiffShipmate, dndSim::GithyankiBuccaneer, dndSim::NeogiHatchlingSwarm, dndSim::NeogiPirate, dndSim::PlasmoidWarrior, dndSim::SolarDragonWyrmling, dndSim::SsurranDefiler, dndSim::CarrionStalker, dndSim::SwarmofScarabs, dndSim::AnimatedStove, dndSim::LavaChild},
        {dndSim::SteelLeafKavu, dndSim::Strongheart, dndSim::HillGiantBlorbo, dndSim::SaleeththeCouatl, dndSim::FiendishFormian, dndSim::Babau, dndSim::Barghest, dndSim::ClockworkIronCobra, dndSim::ClockworkStoneDefender, dndSim::Deathlock, dndSim::Dybbuk, dndSim::Girallon, dndSim::HobgoblinDevastator, dndSim::Merregon, dndSim::NeogiMaster, dndSim::OgreBatteringRam, dndSim::Stegosaurus, dndSim::WarlockoftheArchfey, dndSim::YethHound, dndSim::Yuan_tiMindWhisperer, dndSim::Yuan_tiNightmareSpeaker, dndSim::Kamadan, dndSim::LiaraPortyr, dndSim::Withers, dndSim::IrdaVeilKeeper, dndSim::Banshee, dndSim::BlackPudding, dndSim::BoneNagalGuardianr, dndSim::BoneNagalSpiritr, dndSim::Chuul, dndSim::Couatl, dndSim::Elephant, dndSim::Ettin, dndSim::Flameskull, dndSim::Ghost, dndSim::GnollFangofYeenoghu, dndSim::HelmedHorror, dndSim::Incubus, dndSim::Lamia, dndSim::LizardKing, dndSim::LizardQueen, dndSim::OrcWarChief, dndSim::RedDragonWyrmling, dndSim::ShadowDemon, dndSim::Succubus, dndSim::Wereboar, dndSim::Weretiger, dndSim::ChuulSporeServant, dndSim::ThePuddingKing, dndSim::Yestabrod, dndSim::Dagryn, dndSim::Wolfwere, dndSim::Bloodbonded, dndSim::ChappedBrute, dndSim::ShadowsteelGhoul, dndSim::SkyDrake, dndSim::ZombieTroll, dndSim::DukeThalamraVanthampur, dndSim::MasterofSouls, dndSim::Pech, dndSim::HazeHulk, dndSim::BlistercoilWeird, dndSim::CosmotronicBlastseeker, dndSim::KraulDeathPriest, dndSim::MindDrinkerVampire, dndSim::Reckoner, dndSim::AccursedDefiler, dndSim::AnglerWorm, dndSim::ArborealGrappler, dndSim::AshDrake, dndSim::BanditLord, dndSim::BeheadedVengefulSpirit, dndSim::Bereginyas, dndSim::CarrionBeetle, dndSim::CavelightMoss, dndSim::CityWatchCaptain, dndSim::Dau, dndSim::DeathButterflySwarm, dndSim::DeathcapMyconid, dndSim::DeepOnePriest, dndSim::DerroFetalSavant, dndSim::Domovoi, dndSim::Dorreq, dndSim::Edimmu, dndSim::Firebird, dndSim::FlabGiant, dndSim::ForestMarauder, dndSim::Frostveil, dndSim::ImperialGhoul, dndSim::LichHound, dndSim::Mngwa, dndSim::NkosiPridelord, dndSim::OculoSwarm, dndSim::Ostinato, dndSim::Ratatosk, dndSim::SapDemon, dndSim::Selang, dndSim::Serpopard, dndSim::ShadowFeyGuardian, dndSim::Skitterhaunt, dndSim::SwarmofManabaneScarabs, dndSim::TrollkinReaver, dndSim::TuskedSkyfish, dndSim::Volguloth, dndSim::Vættir, dndSim::WaterLeaper, dndSim::AzbaraJos, dndSim::LangdedrosaCyanwrath, dndSim::OrcBladeofIlneval, dndSim::ChardalynBerserker, dndSim::GiantWalrus, dndSim::LivingBigbysHand, dndSim::VellynneHarpell, dndSim::VerbeegMarauder, dndSim::CogworkArchivist, dndSim::Groff, dndSim::LoreholdPledgemage, dndSim::OriqRecruiter, dndSim::PrismariPledgemage, dndSim::QuandrixPledgemage, dndSim::SilverquillPledgemage, dndSim::WitherbloomPledgemage, dndSim::Decapus, dndSim::Demogorgon, dndSim::Thessalhydra, dndSim::DancingFlame, dndSim::ScuttlingSerpentmaw, dndSim::Geist, dndSim::FateHag, dndSim::InitiateoftheComet, dndSim::Werevulture, dndSim::IronCobra, dndSim::StoneDefender, dndSim::Leedara, dndSim::SivakDraconian, dndSim::HandsofHavocFireStarter, dndSim::HeraldsofDustRemnant, dndSim::HoundArchon, dndSim::MindsEyeMatterSmith, dndSim::GuardianWolf, dndSim::MerrowShallowpriest, dndSim::Shemshime, dndSim::Burrowshark, dndSim::ShoalarQuanderil, dndSim::Stonemelder, dndSim::FalcontheHunter, dndSim::ChaosQuadrapod, dndSim::Flabbergast, dndSim::Môrgæn, dndSim::RivermawBrawler, dndSim::VosskyrissSerpentfolkGhost, dndSim::Ashsnake, dndSim::ForestProwler, dndSim::GallusDruid, dndSim::RaptorRanger, dndSim::SweettoothHorror, dndSim::GiantSubterraneanLizard, dndSim::Kelpie, dndSim::Tecuziztecatl, dndSim::GoblinPsiCommander, dndSim::GrellPsychic, dndSim::HumanoidMutate, dndSim::Ebondeath, dndSim::AurumvoraxDenLeader, dndSim::SoulShaker, dndSim::Oracle, dndSim::Oread, dndSim::ReturnedKakomantis, dndSim::ReturnedPalamnite, dndSim::SetessanHoplite, dndSim::WingedBull, dndSim::WingedLion, dndSim::YakfolkPriest, dndSim::DrownedAssassin, dndSim::GiantCoralSnake, dndSim::SahuaginDeepDiver, dndSim::FirbolgPrimevalWarden, dndSim::DrowGunslinger, dndSim::JalesterSilvermane, dndSim::Nimblewright, dndSim::SoluunXibrindas, dndSim::AmethystDragonWyrmling, dndSim::DraconianDreadnought, dndSim::DragonTurtleWyrmling, dndSim::MetallicPeacekeeper, dndSim::BrownScavver, dndSim::Gaj, dndSim::Neh_thalggu, dndSim::NeogiVoidHunter, dndSim::PlasmoidBoss, dndSim::Strigoi, dndSim::ZombiePlagueSpreader},
        {dndSim::Doric, dndSim::EdginDarvis, dndSim::HolgaKilgore, dndSim::SimonAumar, dndSim::Envy, dndSim::Kelek, dndSim::Ringlerun, dndSim::Warduke, dndSim::IzekStrazni, dndSim::Rictavio, dndSim::HangryOtyugh, dndSim::AdultOblex, dndSim::Allip, dndSim::Banderhobb, dndSim::Brontosaurus, dndSim::Catoblepas, dndSim::ClockworkOakenBolter, dndSim::EnchanterWizard, dndSim::KrakenPriest, dndSim::KruthikHiveLord, dndSim::MasterThief, dndSim::Mindwitness, dndSim::SpawnofKyuss, dndSim::StarSpawnMangler, dndSim::SwarmofCraniumRats, dndSim::Tanarukk, dndSim::Tlincalli, dndSim::TransmuterWizard, dndSim::WoodWoad, dndSim::Yuan_tiPitMaster, dndSim::HamishHewland, dndSim::Rotter, dndSim::ClayGladiator, dndSim::Dragonbait, dndSim::TombGuardian, dndSim::NevermindGnomeMastermind, dndSim::TraagDraconian, dndSim::AirElemental, dndSim::BarbedDevil, dndSim::Barlgura, dndSim::BeholderZombie, dndSim::Bulette, dndSim::Cambion, dndSim::DrowEliteWarrior, dndSim::EarthElemental, dndSim::FireElemental, dndSim::FleshGolem, dndSim::GiantCrocodile, dndSim::GiantShark, dndSim::Gladiator, dndSim::Gorgon, dndSim::Half_RedDragonVeteran, dndSim::HillGiant, dndSim::Mezzoloth, dndSim::NightHag, dndSim::Otyugh, dndSim::RedSlaad, dndSim::Revenant, dndSim::Roper, dndSim::SahuaginBaron, dndSim::Salamander, dndSim::ShamblingMound, dndSim::Triceratops, dndSim::Troll, dndSim::UmberHulk, dndSim::Unicorn, dndSim::VampireSpawn, dndSim::WaterElemental, dndSim::Werebear, dndSim::Wraith, dndSim::Xorn, dndSim::YoungRemorhaz, dndSim::Prisoner13, dndSim::MrGreystone, dndSim::MorwenaVeilmist, dndSim::Usagt, dndSim::Achaierai, dndSim::DreadDoppelganger, dndSim::SkeletonWarrior, dndSim::Dawndrinker, dndSim::DowncastMercenary, dndSim::EldritchHerald, dndSim::Ithjar, dndSim::Lenchtahg, dndSim::OblivionBrute, dndSim::Snapjaw, dndSim::DeathsHeadofBhaal, dndSim::Hellwasp, dndSim::Hollyphant, dndSim::Nine_FingersKeene, dndSim::UlderRavengard, dndSim::AnimatedDeleriumSludge, dndSim::Cavalier, dndSim::EntropicFlame, dndSim::LivingDeepHaze, dndSim::WalkingDeleriumGeode, dndSim::BattleforceAngel, dndSim::Felidar, dndSim::FluxBlastseeker, dndSim::GalvanicBlastseeker, dndSim::GolgariShaman, dndSim::MindMage, dndSim::Aridni, dndSim::Asanbosam, dndSim::BlackKnightCommander, dndSim::Bouda, dndSim::ClockworkAbomination, dndSim::CorruptedUshabti, dndSim::CorruptingOoze, dndSim::DerroShadowAntipaladin, dndSim::DogmoleJuggernaut, dndSim::Drakon, dndSim::DrownedMaiden, dndSim::Fellforged, dndSim::FideleAngel, dndSim::GiantAntQueen, dndSim::HoundoftheNight, dndSim::HulkingWhelp, dndSim::IronGhoul, dndSim::Kikimora, dndSim::KoboldChieftain, dndSim::Likho, dndSim::Lorelei, dndSim::Mi_go, dndSim::NgobouDinosaur, dndSim::NihilethicDominator, dndSim::OwlHarpy, dndSim::QuicksilverSiegeOrb, dndSim::RatKing, dndSim::Ravenala, dndSim::RavenfolkDoomCroaker, dndSim::RiftSwine, dndSim::Sandman, dndSim::SarcophagusSlime, dndSim::ShadowFeyForestHunter, dndSim::SpawnofAkyishigal, dndSim::SpawnofArbeyach, dndSim::Subek, dndSim::TempleDog, dndSim::TosculiEliteBowRaider, dndSim::VaporLynx, dndSim::Vila, dndSim::WormheartedSuffragan, dndSim::YoungSpinosaurusDinosaur, dndSim::Zimwi, dndSim::ZmeyHeadling, dndSim::LynxCreatlach, dndSim::SirUrsas, dndSim::CaptainOthelstan, dndSim::TalistheWhite, dndSim::Enchanter, dndSim::Transmuter, dndSim::Rain, dndSim::BjornhildSolvigsdottir, dndSim::ColdlightWalker, dndSim::FrostDruid, dndSim::GnomeCeremorph, dndSim::GunvaldHalraggson, dndSim::JarundElkhardt, dndSim::SpittingMimic, dndSim::VerbeegLongstrider, dndSim::XardorokSunblight, dndSim::MageHunter, dndSim::RuinGrinder, dndSim::AbolethSpawn, dndSim::AyoJabelTier2r, dndSim::DermotWurderlTier2r, dndSim::GalsariadArdythlTier2r, dndSim::InsightAcuere, dndSim::IrvanWastewalkerlTier2r, dndSim::MaggieKeeneyeslTier2r, dndSim::MonasticOperative, dndSim::ScholarlyMastermind, dndSim::VerinThelyss, dndSim::VampireNeonate, dndSim::GiantSharkSkeleton, dndSim::AmbitiousAssassin, dndSim::Riffler, dndSim::RuinSpider, dndSim::SirJared, dndSim::OakenBolter, dndSim::AtharNull, dndSim::CraniumRatSqueakerSwarm, dndSim::FatedShaker, dndSim::TimeDragonWyrmling, dndSim::BloodHunter, dndSim::Shadowghast, dndSim::ImmortalLotusMonk, dndSim::LightningGolem, dndSim::MasterSage, dndSim::Skitterwidget, dndSim::Dragonfang, dndSim::ElizarDryflagon, dndSim::Hellenrae, dndSim::Razerblast, dndSim::JimDarkmagic, dndSim::OminDran, dndSim::Viari, dndSim::AshariSkydancer, dndSim::AshariWaverider, dndSim::ClaspEnforcer, dndSim::ColdSnapSpirit, dndSim::RivermawStormborn, dndSim::Trinket, dndSim::Cobblefright, dndSim::CorvumAssassin, dndSim::GallusMonk, dndSim::DeathlessRider, dndSim::DunbarrowWitch, dndSim::NightmareHaunt, dndSim::GreaterZombie, dndSim::SeaLion, dndSim::Snarla, dndSim::Tloques_Popolocas, dndSim::FeralAshenwight, dndSim::FiendishAuger, dndSim::RuxithidtheChosen, dndSim::Blaze, dndSim::Tlacatecolo, dndSim::Aphemia, dndSim::GhostbladeEidolon, dndSim::Gold_ForgedSentinel, dndSim::LeoninIconoclast, dndSim::ManticoreHeart_Piercer, dndSim::ChiefGuh, dndSim::HulkingCrab, dndSim::HarpyMatriarch, dndSim::LivingIronStatue, dndSim::SahuaginHighPriestess, dndSim::SahuaginWaveShaper, dndSim::SkeletalJuggernaut, dndSim::Skum, dndSim::BoneKnight, dndSim::LivingLightningBolt, dndSim::ZakyaRakshasa, dndSim::DustHulk, dndSim::FirbolgWanderer, dndSim::RimeHulk, dndSim::Titanothere, dndSim::AmmaliaCassalanter, dndSim::BlackViper, dndSim::Hrabbaz, dndSim::Obliteros, dndSim::DragonBlessed, dndSim::DragonbloodOoze, dndSim::EggHunterAdult, dndSim::GemStalker, dndSim::YoungCrystalDragon, dndSim::YoungDeepDragon, dndSim::AstralElfHonorGuard, dndSim::AstralElfStarPriest, dndSim::Feyr, dndSim::Mercane, dndSim::MurderComet, dndSim::NightScavver, dndSim::StarlightApparition, dndSim::Thri_kreenMystic, dndSim::VampirateMage, dndSim::Elise, dndSim::Isolde, dndSim::VampiricMindFlayer},
        {dndSim::EndelynMoongrave, dndSim::StrahdsAnimatedArmor, dndSim::AnnisHag, dndSim::Bodak, dndSim::ConjurerWizard, dndSim::DuergarWarlord, dndSim::Gauth, dndSim::MouthofGrolantor, dndSim::WarlockoftheGreatOldOne, dndSim::WhiteAbishai, dndSim::SkeletalHorror, dndSim::Malivar, dndSim::SpikedTombGuardian, dndSim::Foresworn, dndSim::Chasme, dndSim::Chimera, dndSim::Cyclops, dndSim::Drider, dndSim::GalebDuhr, dndSim::GithzeraiZerth, dndSim::HobgoblinWarlord, dndSim::InvisibleStalker, dndSim::Kuo_toaArchpriest, dndSim::Mage, dndSim::Mammoth, dndSim::Medusa, dndSim::Vrock, dndSim::Wyvern, dndSim::YoungBrassDragon, dndSim::YoungWhiteDragon, dndSim::WolfwereAlpha, dndSim::CorpseWalker, dndSim::InfernalTormentor, dndSim::LupiliskElder, dndSim::MjorkAsher, dndSim::MjorkBurner, dndSim::BlackGauntletofBane, dndSim::GideonLightward, dndSim::Krull, dndSim::HeraldsofDustExorcist, dndSim::Chaplain, dndSim::OscarYoren, dndSim::ProteanAbomination, dndSim::SaintGresha, dndSim::BloodfrayGiant, dndSim::Category2Krasis, dndSim::Lawmage, dndSim::OrzhovGiant, dndSim::UndercityMedusa, dndSim::Angatra, dndSim::ApauPerapeDemon, dndSim::ClockworkMyrmidon, dndSim::CrystallineDevil, dndSim::FateEater, dndSim::Fext, dndSim::Gbahali, dndSim::GearforgedTemplar, dndSim::Gnarljak, dndSim::GreaterDeathButterflySwarm, dndSim::IceMaiden, dndSim::Kongamato, dndSim::Lindwurm, dndSim::Loxoda, dndSim::Malphas, dndSim::Mamura, dndSim::MirrorHag, dndSim::Nichny, dndSim::Nightgarm, dndSim::RimeWorm, dndSim::RottingWind, dndSim::SaltDevil, dndSim::SandHag, dndSim::SandSilhouette, dndSim::Sandwyrm, dndSim::Scheznyki, dndSim::ShadowFeyDuelist, dndSim::SpectralGuardian, dndSim::SwarmofWolfSpirits, dndSim::WeepingTreant, dndSim::WhiteApe, dndSim::YoungWindDragon, dndSim::Barbatos, dndSim::RathModar, dndSim::Trepsin, dndSim::Conjurer, dndSim::Dandylion, dndSim::FrostGiantSkeleton, dndSim::NassLantomirsGhost, dndSim::BraininaJar, dndSim::Galeokaerda, dndSim::LightDevourer, dndSim::MonasticInfiltrator, dndSim::OccultExtollant, dndSim::SwarmofSorrowfish, dndSim::AurakDraconian, dndSim::IstarianDrone, dndSim::DoomguardRotBlade, dndSim::EaterofKnowledge, dndSim::EquinalGuardinal, dndSim::CoreSpawnEmissary, dndSim::Gloomstalker, dndSim::Flamewrath, dndSim::MirajVizann, dndSim::GorthoktheThunderBoar, dndSim::DotyX, dndSim::CorvaxRevayne, dndSim::CorvumDiviner, dndSim::CorvumNecromancer, dndSim::GabeWindsworth, dndSim::GallusNecromancer, dndSim::GlindaNightseed, dndSim::LumaWizard, dndSim::OdwaldEbonhart, dndSim::Wakewyrm, dndSim::Witchstalker, dndSim::CentaurMummy, dndSim::OtyughMutate, dndSim::Enderman, dndSim::EaterofHope, dndSim::UnderworldCerberus, dndSim::MinotaurLivingCrystalStatue, dndSim::SahuaginBlademaster, dndSim::ThousandTeeth, dndSim::DuskHag, dndSim::EchoofDemogorgon, dndSim::FensirSkirmisher, dndSim::MistHulk, dndSim::DavilStarsong, dndSim::KaevjaCynavern, dndSim::LosserMirklav, dndSim::ManafretCherryport, dndSim::RishaalthePage_Turner, dndSim::SkeemoWeirdbottle, dndSim::AnimatedBreath, dndSim::DraconianMastermind, dndSim::DragonbornofSardior, dndSim::DragonfleshAbomination, dndSim::Brohg, dndSim::GiffShockTrooper, dndSim::PsurlonLeader, dndSim::VampirateCaptain, dndSim::GallowsSpeaker, dndSim::PriestofOsybus, dndSim::ZombieClot},
        {dndSim::BavlornaBlightstraw, dndSim::TreeBlight, dndSim::VladimirHorngaard, dndSim::Halog, dndSim::AirElementalMyrmidon, dndSim::Armanite, dndSim::BheurHag, dndSim::BlackAbishai, dndSim::Dhergoloth, dndSim::Draegloth, dndSim::EarthElementalMyrmidon, dndSim::FireElementalMyrmidon, dndSim::Korred, dndSim::LostSorrowsworn, dndSim::Maurezhi, dndSim::Shadar_kaiShadowDancer, dndSim::VenomTroll, dndSim::WarlockoftheFiend, dndSim::WaterElementalMyrmidon, dndSim::Yggdrasti, dndSim::Dirt_Under_Nails, dndSim::ArtusCimber, dndSim::RasNsi, dndSim::Xandala, dndSim::DreamEater, dndSim::BlueSlaad, dndSim::DrowMage, dndSim::GiantApe, dndSim::GrickAlpha, dndSim::MindFlayer, dndSim::Oni, dndSim::ShieldGuardian, dndSim::StoneGiant, dndSim::YoungBlackDragon, dndSim::YoungCopperDragon, dndSim::Yuan_tiAbomination, dndSim::SythianSkalderang, dndSim::TixieTockworth, dndSim::DeepSpider, dndSim::DemodandFarastu, dndSim::Kivan, dndSim::AwakenedChappedBrute, dndSim::Fzeglaich, dndSim::LesserAvariceSeraph, dndSim::LesserGluttonySeraph, dndSim::MjorkCharger, dndSim::ShadowsteelGhast, dndSim::WerewolfRavager, dndSim::SmilertheDefiler, dndSim::BloodWitch, dndSim::DruidoftheOldWays, dndSim::Firefist, dndSim::Fluxcharger, dndSim::CausticCharger, dndSim::Chelicerae, dndSim::CoralDrake, dndSim::Deathwisp, dndSim::Dissimortuum, dndSim::DwarvenRingmage, dndSim::Einherjar, dndSim::ElderShadowDrake, dndSim::GhostKnight, dndSim::GildedDevil, dndSim::HeraldofDarkness, dndSim::LakeTroll, dndSim::OgreCorruptedChieftain, dndSim::PossessedPillar, dndSim::PsoglavDemon, dndSim::RedHag, dndSim::RisenReaver, dndSim::SandSpider, dndSim::ShadowBeast, dndSim::ShadowFeyEnchantress, dndSim::SoulEater, dndSim::Spark, dndSim::SpiderofLeng, dndSim::SwarmofFireDancers, dndSim::UmbralVampire, dndSim::YoungMithralDragon, dndSim::Neo_Otyugh, dndSim::Rezmir, dndSim::SheldontheBlueberryDragon, dndSim::Avarice, dndSim::LoreholdProfessorofChaos, dndSim::LoreholdProfessorofOrder, dndSim::PrismariProfessorofExpression, dndSim::PrismariProfessorofPerfection, dndSim::QuandrixProfessorofSubstance, dndSim::QuandrixProfessorofTheory, dndSim::SilverquillProfessorofRadiance, dndSim::SilverquillProfessorofShadow, dndSim::WitherbloomProfessorofDecay, dndSim::WitherbloomProfessorofGrowth, dndSim::TalonBeast, dndSim::ShadowDancer, dndSim::TheLost, dndSim::SkeletalKnight, dndSim::GithzeraiUniter, dndSim::MercykillerBloodhound, dndSim::SwavainBasilisk, dndSim::Dragonsoul, dndSim::AerisiKalinoth, dndSim::DranninSplithelm, dndSim::Ghald, dndSim::AshariFiretamer, dndSim::AshariStoneguard, dndSim::RemnantCultist, dndSim::GooseMother, dndSim::GiantSkeleton, dndSim::FleshMeld, dndSim::PsionicAshenwight, dndSim::Haint, dndSim::TheranChimera, dndSim::WoeStrider, dndSim::ThaneKayalithica, dndSim::MawofSekolah, dndSim::LivingCloudkill, dndSim::TsucoraQuori, dndSim::Barrowghast, dndSim::CinderHulk, dndSim::TrollMutate, dndSim::DragonbornofTiamat, dndSim::Liondrake, dndSim::YoungTopazDragon, dndSim::AstralElfCommander, dndSim::GithyankiStarSeer, dndSim::Kindori, dndSim::Thri_kreenGladiator, dndSim::YoungLunarDragon, dndSim::BodytakerPlant, dndSim::Necrichor},
        {dndSim::ForgeFitzwilliam, dndSim::SkabathaNightshade, dndSim::EzmereldadAvenir, dndSim::Blackguard, dndSim::Canoloth, dndSim::CorpseFlower, dndSim::DeathlockMastermind, dndSim::DivinerWizard, dndSim::Howler, dndSim::Shoosuva, dndSim::SwordWraithCommander, dndSim::GiantZombieConstrictorSnake, dndSim::BagofNails, dndSim::KingofFeathers, dndSim::TyrannosaurusZombie, dndSim::Zindar, dndSim::ForestMaster, dndSim::Assassin, dndSim::ChainDevil, dndSim::Cloaker, dndSim::DrowPriestessofLolth, dndSim::Fomorian, dndSim::FrostGiant, dndSim::GithyankiKnight, dndSim::GreenSlaad, dndSim::Hezrou, dndSim::Hydra, dndSim::MindFlayerArcanist, dndSim::SpiritNaga, dndSim::TyrannosaurusRex, dndSim::YoungBronzeDragon, dndSim::YoungGreenDragon, dndSim::Imoen, dndSim::XanMoonblade, dndSim::OblivionJuggernaut, dndSim::Xakalonus, dndSim::YoungBlightscaleDragon, dndSim::FiendishFleshGolem, dndSim::CrimsonCountess, dndSim::BloodDrinkerVampire, dndSim::Gloamwing, dndSim::GuardianGiant, dndSim::NivixCyclops, dndSim::ObzedatGhost, dndSim::Ala, dndSim::ArcaneGuardian, dndSim::Blemmyes, dndSim::BoneCollective, dndSim::ChainedAngel, dndSim::Chronalmental, dndSim::DeepOneArchimandrite, dndSim::DegenerateTitan, dndSim::DragonleafTree, dndSim::DuneMimic, dndSim::EmeraldOrderCultLeader, dndSim::FeywardTree, dndSim::IdolicDeity, dndSim::KishiDemon, dndSim::LunarDevil, dndSim::Mallqui, dndSim::MonolithChampion, dndSim::Qwyllion, dndSim::RustDrake, dndSim::Savager, dndSim::Tophet, dndSim::Ushabti, dndSim::YoungFlameDragon, dndSim::TheDemogorgon, dndSim::Diviner, dndSim::MindFlayerPsion, dndSim::Scrapper, dndSim::GnollVampire, dndSim::GoliathWerebear, dndSim::IceTroll, dndSim::IsarrKronenstrom, dndSim::LivingBladeofDisaster, dndSim::SpermWhale, dndSim::AyoJabelTier3r, dndSim::DermotWurderlTier3r, dndSim::GalsariadArdythlTier3r, dndSim::IrvanWastewalkerlTier3r, dndSim::MaggieKeeneyeslTier3r, dndSim::OccultSilvertongue, dndSim::RuidiumElephant, dndSim::Caradoc, dndSim::DecatonModron, dndSim::HarmoniumCaptain, dndSim::TranscendentOrderConduit, dndSim::WardenArchon, dndSim::AeorianReverser, dndSim::HorizonbackTortoise, dndSim::CorruptedAvatarofLurue, dndSim::JadeTigress, dndSim::SteelCrane, dndSim::BastianThermandar, dndSim::MarlosUrnrayle, dndSim::CinderslagElemental, dndSim::DemonfeedSpider, dndSim::Oakheart, dndSim::HugeGiantCrab, dndSim::AberrantZealot, dndSim::IntellectSnare, dndSim::MindFlayerProphet, dndSim::TritonMasterofWaves, dndSim::JarlStorvald, dndSim::VampiricJadeStatue, dndSim::WarforgedTitan, dndSim::EttinCeremorph, dndSim::FensirDevourer, dndSim::IstridHorn, dndSim::ManshoonSimulacrum, dndSim::UrstulFloxin, dndSim::ZirajtheHunter, dndSim::DragonbornofBahamut, dndSim::Eyedrake, dndSim::HoardMimic, dndSim::YoungEmeraldDragon, dndSim::YoungMoonstoneDragon, dndSim::YoungSeaSerpent, dndSim::AstralElfAristocrat, dndSim::Reigar, dndSim::InquisitoroftheMindFire, dndSim::InquisitoroftheSword, dndSim::InquisitoroftheTome, dndSim::Nosferatu, dndSim::RelentlessSlasher, dndSim::UnspeakableHorror, dndSim::Scaladar},
        {dndSim::DisplacerFiend, dndSim::Tiax, dndSim::AbjurerWizard, dndSim::Champion, dndSim::DrowHouseCaptain, dndSim::EvokerWizard, dndSim::Flind, dndSim::FrostSalamander, dndSim::Hydroloth, dndSim::LonelySorrowsworn, dndSim::NecromancerWizard, dndSim::RotTroll, dndSim::Shadar_kaiGloomWeaver, dndSim::Ulitharid, dndSim::WarPriest, dndSim::Fractine, dndSim::AbominableYeti, dndSim::BoneDevil, dndSim::ClayGolem, dndSim::CloudGiant, dndSim::FireGiant, dndSim::Glabrezu, dndSim::GraySlaad, dndSim::Nycaloth, dndSim::Treant, dndSim::YoungBlueDragon, dndSim::YoungSilverDragon, dndSim::Darien, dndSim::FlimpShagglecran, dndSim::Lothar, dndSim::Nauk, dndSim::PelyiousAvhoste, dndSim::SkeletonLord, dndSim::TiberiusInuus, dndSim::Valygar, dndSim::VellinFarstride, dndSim::Viktor, dndSim::ChappedBruteAbomination, dndSim::HarvesterofLies, dndSim::StormbornIthjar, dndSim::BigLinda, dndSim::ConclaveDryad, dndSim::MasterofCruelties, dndSim::ShadowHorror, dndSim::Al_AeshmaGenie, dndSim::Arx, dndSim::Bukavac, dndSim::DeepDrake, dndSim::DesertGiant, dndSim::DevilboundGnome, dndSim::EaterofDust, dndSim::GhostwalkSpider, dndSim::Horakh, dndSim::MalakbelDemon, dndSim::Necrohydra, dndSim::Oozasis, dndSim::VineLord, dndSim::VineTrollSkeleton, dndSim::Xhkarsh, dndSim::YoungCaveDragon, dndSim::YoungSeaDragon, dndSim::YoungVoidDragon, dndSim::Blagothkus, dndSim::Abjurer, dndSim::Evoker, dndSim::Necromancer, dndSim::Coral, dndSim::AurillFirstFormr, dndSim::Murgaxor, dndSim::OriqBloodMage, dndSim::Ydemi, dndSim::EyeofFearandFlame, dndSim::CorruptedGiantShark, dndSim::SlitheringBloodfin, dndSim::BossAugustus, dndSim::BossDelour, dndSim::GremorlysGhost, dndSim::SolarBastionKnight, dndSim::GloomWeaver, dndSim::TheLonely, dndSim::Anhkolox, dndSim::AvoralGuardinal, dndSim::FerrumachRilmani, dndSim::FraternityofOrderLawBender, dndSim::GithzeraiFuturist, dndSim::FrostGiantZombie, dndSim::CloudGiantGhost, dndSim::Neronvain, dndSim::GarShatterkeel, dndSim::Vanifer, dndSim::DeepCrow, dndSim::RavagerSlaughterLord, dndSim::TaryonDarrington, dndSim::YoungMagmaLandshark, dndSim::Lowarnizel, dndSim::Oculorb, dndSim::Qunbraxel, dndSim::Whistler, dndSim::AbhorrentOverlord, dndSim::Phylaskia, dndSim::DukeZalto, dndSim::Harshnag, dndSim::DrownedMaster, dndSim::HashalaqQuori, dndSim::Cairnwight, dndSim::Ceratops, dndSim::LightningHulk, dndSim::StoneGiantofEvilEarth, dndSim::Ahmaergo, dndSim::Durnan, dndSim::MeloonWardragon, dndSim::Mirt, dndSim::RemalliaHaventree, dndSim::TashlynYafeera, dndSim::YoungAmethystDragon, dndSim::YoungSapphireDragon, dndSim::Braxat, dndSim::GithyankiXenomancer, dndSim::YoungSolarDragon, dndSim::Jiangshi, dndSim::ShadowAssassin},
        {dndSim::XenkYendar, dndSim::MadamEva, dndSim::Rahadin, dndSim::AfflictionDevillKocrachonr, dndSim::HellcatlBezekirar, dndSim::KohTam, dndSim::LesserTyrantShadow, dndSim::Alhoon, dndSim::AutumnEladrin, dndSim::DeathKiss, dndSim::ElderOblex, dndSim::Froghemoth, dndSim::GithyankiGish, dndSim::GithzeraiEnlightened, dndSim::Orthon, dndSim::SpringEladrin, dndSim::StarSpawnHulk, dndSim::StoneGiantDreamwalker, dndSim::SummerEladrin, dndSim::WinterEladrin, dndSim::KyrillaAccursedGorgon, dndSim::GiantFour_ArmedGargoyle, dndSim::Aboleth, dndSim::DeathSlaad, dndSim::Deva, dndSim::GuardianNaga, dndSim::StoneGolem, dndSim::Yochlol, dndSim::YoungGoldDragon, dndSim::YoungRedDragon, dndSim::CharmayneDaymore, dndSim::AribethdeTylmarande, dndSim::BorivikWindheim, dndSim::MinscandBoo, dndSim::SaemonHavarian, dndSim::SuldilBaldoriel, dndSim::AncientCorpseWalker, dndSim::EmpyreanBrazenBull, dndSim::Biomancer, dndSim::NightveilSpecter, dndSim::SunderShaman, dndSim::Algorith, dndSim::AutomataDevil, dndSim::BoneSwarm, dndSim::FearSmith, dndSim::Liosalfar, dndSim::Planewatcher, dndSim::RubezahlDemon, dndSim::SaltGolem, dndSim::SathaqWorm, dndSim::StatueofTalos, dndSim::SeththeShapeshiftingDragon, dndSim::AurillSecondFormr, dndSim::TombTapper, dndSim::ClockworkKraken, dndSim::GishathSunsAvatar, dndSim::Daemogoth, dndSim::AlyxiantheHunter, dndSim::MonasticHighCurator, dndSim::ArchonofRedemption, dndSim::SkyLeviathan, dndSim::LesserDeathDragon, dndSim::RedRuin, dndSim::Darkweaver, dndSim::Maelephant, dndSim::NonatonModron, dndSim::AeorianAbsorber, dndSim::GearkeeperConstruct, dndSim::SapphireSentinel, dndSim::CyclopsStormcaller, dndSim::MalformedKraken, dndSim::OozeMaster, dndSim::WhiteMaw, dndSim::CloakerMutate, dndSim::EncephalonCluster, dndSim::OshundotheAlhoon, dndSim::Tlexolotl, dndSim::Amble, dndSim::MrDory, dndSim::Yarnspinner, dndSim::UndyingCouncilor, dndSim::Aerosaur, dndSim::FireGiantofEvilFire, dndSim::FomorianDeepCrawler, dndSim::Frostmourn, dndSim::MawofYeenoghu, dndSim::VictoroCassalanter, dndSim::YoungDragonTurtle, dndSim::EyeMonger, dndSim::GiffWarlord},
        {dndSim::BabaLysaga, dndSim::BabaLysagasCreepingHut, dndSim::Oneirovore, dndSim::Alkilith, dndSim::Balhannoth, dndSim::CloudGiantSmilingOne, dndSim::DrowShadowblade, dndSim::HungrySorrowsworn, dndSim::Morkoth, dndSim::Shadar_kaiSoulMonger, dndSim::SpiritTroll, dndSim::Yagnoloth, dndSim::Exul, dndSim::Behir, dndSim::Dao, dndSim::Djinni, dndSim::Efreeti, dndSim::Gynosphinx, dndSim::HornedDevil, dndSim::Marid, dndSim::Remorhaz, dndSim::Roc, dndSim::DemodandKelubar, dndSim::EoAshmajiir, dndSim::Kagain, dndSim::MontaronandtheLaughingSkull, dndSim::XzartheChaosClone, dndSim::CandlelightDaemon, dndSim::DowncastApostate, dndSim::TorogarSteelfist, dndSim::AbominableBeauty, dndSim::BabaYagasHorsemen, dndSim::BerstucDemon, dndSim::BloodHag, dndSim::Buraq, dndSim::CorpseMound, dndSim::Dullahan, dndSim::EyeGolem, dndSim::GrimJester, dndSim::KoralkDevil, dndSim::Naina, dndSim::Valkyrie, dndSim::Vesiculosa, dndSim::Voidling, dndSim::YchenBannog, dndSim::AurillThirdFormr, dndSim::ChardalynDragon, dndSim::FogGiant, dndSim::AlyxiantheTormented, dndSim::DeathEmbrace, dndSim::EnchantingInfiltrator, dndSim::HierophantoftheComet, dndSim::SoulMonger, dndSim::TheHungry, dndSim::KansaldiFire_Eyes, dndSim::FarastuDemodand, dndSim::OctonModron, dndSim::YoungTimeDragon, dndSim::ArrantQuill, dndSim::Parasite_infestedBehir, dndSim::NaergothBladelord, dndSim::Severin, dndSim::HighFaeImpostor, dndSim::SnappingHydra, dndSim::TempestHart, dndSim::Treefolk, dndSim::InfectedElderBrain, dndSim::MindFlayerClairvoyant, dndSim::DoomwakeGiant, dndSim::NightmareShepherd, dndSim::CountessSansuri, dndSim::MonstrousPeryton, dndSim::RadiantIdol, dndSim::FireHellion, dndSim::Firegaunt, dndSim::FrostGiantofEvilWater, dndSim::StormCrab, dndSim::AdultDeepDragon, dndSim::Dracohydra, dndSim::DragonboneGolem, dndSim::Megapede, dndSim::VoidScavver},
        {dndSim::AyperoboSwarm, dndSim::PainDevillExcruciarchr, dndSim::Shredwing, dndSim::Slayer, dndSim::Archdruid, dndSim::Boneclaw, dndSim::DuergarDespot, dndSim::Eidolon, dndSim::FrostGiantEverlastingOne, dndSim::GithyankiKithrak, dndSim::GrayRender, dndSim::Ki_rin, dndSim::Oinoloth, dndSim::Warlord, dndSim::Yuan_tiAnathema, dndSim::StoneJuggernaut, dndSim::Arcanaloth, dndSim::Archmage, dndSim::Erinyes, dndSim::GreaterShadowHorror, dndSim::Bebilith, dndSim::CorneliusWatson, dndSim::OrdealTree, dndSim::WerebearAscetic, dndSim::EoghanGhostweaver, dndSim::ArclightPhoenix, dndSim::FiremaneAngel, dndSim::SireofInsanity, dndSim::AncientTitan, dndSim::Annelidast, dndSim::BearKing, dndSim::BonepowderGhoul, dndSim::ChortDevil, dndSim::DemonLordAkyishigal, dndSim::DragonEel, dndSim::Flutterflesh, dndSim::Gug, dndSim::HeraldofBlood, dndSim::HoardGolem, dndSim::Hundun, dndSim::Mavka, dndSim::SkeinWitch, dndSim::SonofFenris, dndSim::Thuellai, dndSim::Titanoboa, dndSim::TosculiHiveQueen, dndSim::Moghadam, dndSim::Thessalar, dndSim::AlyxianAboleth, dndSim::AlyxiantheCallous, dndSim::Lohezet, dndSim::CuprilachRilmani, dndSim::DoomguardDoomLord, dndSim::SeptonModron, dndSim::AeorianNullifier, dndSim::SeaFury, dndSim::Adranach, dndSim::RemnantChosen, dndSim::AspectofFire, dndSim::HighFaeKindguard, dndSim::HighFaeMage, dndSim::SpecterofNight, dndSim::Bakunawa, dndSim::Riverine, dndSim::ArchonofFallingStars, dndSim::IronscaleHydra, dndSim::CloudGiantofEvilAir, dndSim::DeathGiantReaper, dndSim::FomorianWarlockoftheDark, dndSim::HillGiantAvalancher, dndSim::StalkerofBaphomet, dndSim::AdultCrystalDragon, dndSim::Esthetic, dndSim::RelentlessJuggernaut},
        {dndSim::Jabberwock, dndSim::Barachiel, dndSim::Zythan, dndSim::AngrySorrowsworn, dndSim::Devourer, dndSim::DireTroll, dndSim::DrowArachnomancer, dndSim::Narzugon, dndSim::Neothelid, dndSim::StarSpawnSeer, dndSim::Wastrilith, dndSim::Atropal, dndSim::AdultBrassDragon, dndSim::AdultWhiteDragon, dndSim::Beholder, dndSim::Nalfeshnee, dndSim::Rakshasa, dndSim::StormGiant, dndSim::Ultroloth, dndSim::Vampire, dndSim::YoungRedShadowDragon, dndSim::Faldorn, dndSim::Jaheira, dndSim::NaesInuus, dndSim::ViconiaDeVir, dndSim::Gravekeeper, dndSim::PaleMan, dndSim::TyreusIllusionist, dndSim::Skyswimmer, dndSim::Haugbui, dndSim::MaskWight, dndSim::NihilethAboleth, dndSim::SpinosaurusDinosaur, dndSim::SteamGolem, dndSim::Stuhac, dndSim::Sunbird, dndSim::AlyxiantheDispossessed, dndSim::Kraken, dndSim::TheAngry, dndSim::HextonModron, dndSim::KelubarDemodand, dndSim::CoreSpawnSeer, dndSim::BakMei, dndSim::CanopicGolem, dndSim::HighFaeNoble, dndSim::TarulVar, dndSim::Pari, dndSim::Criosphinx, dndSim::KingHekaton, dndSim::Zephyros, dndSim::Altisaur, dndSim::SpectralCloud, dndSim::Manshoon, dndSim::VajraSafahr, dndSim::AdultTopazDragon, dndSim::AdultLunarDragon, dndSim::LoupGarou, dndSim::Muiral, dndSim::ZorakLightdrinker},
        {dndSim::CorruptionDevillPaeliryonr, dndSim::MaelephantNomad, dndSim::Ramius, dndSim::Vorvolaka, dndSim::CadaverCollector, dndSim::DrowInquisitor, dndSim::ElderBrain, dndSim::FireGiantDreadnought, dndSim::GithyankiSupremeCommander, dndSim::Retriever, dndSim::AdultBlackDragon, dndSim::AdultCopperDragon, dndSim::DeathTyrant, dndSim::IceDevil, dndSim::AvariceSeraph, dndSim::GluttonySeraph, dndSim::LichTroll, dndSim::Lindwyrm, dndSim::Crokektoeck, dndSim::MahaditheRakshasa, dndSim::ArchonoftheTriumvirate, dndSim::DeathpactAngel, dndSim::DevkarinLich, dndSim::Wurm, dndSim::Cambium, dndSim::Gypsosphinx, dndSim::Isonade, dndSim::KrakeSpawn, dndSim::OrobasDevil, dndSim::SmaragdineGolem, dndSim::UshabtiRoyalGuard, dndSim::Thessalkraken, dndSim::AlyxiantheAbsolved, dndSim::BreathDrinker, dndSim::Hulgaz, dndSim::GreaterDeathDragon, dndSim::WerstenKern, dndSim::Shemeshka, dndSim::EmberRoc, dndSim::MagmaLandshark, dndSim::WraithrootTree, dndSim::YoungKraken, dndSim::JuvenileKraken, dndSim::FuryofKostchtchie, dndSim::Regisaur, dndSim::AdultEmeraldDragon, dndSim::AncientSeaSerpent, dndSim::AdultSolarDragon, dndSim::Shockerstomper},
        {dndSim::Sofina, dndSim::StrahdvonZarovich, dndSim::GreatKroomPurpleWorm, dndSim::AdultSapphireDragon, dndSim::GreenAbishai, dndSim::Nabassu, dndSim::SkullLord, dndSim::AsteroidSpider, dndSim::EldritchLich, dndSim::AdultBronzeDragon, dndSim::AdultGreenDragon, dndSim::MummyLord, dndSim::PurpleWorm, dndSim::VampireSpellcaster, dndSim::VampireWarrior, dndSim::BodhiIrenicus, dndSim::DemodandShator, dndSim::EdwinOdesseiron, dndSim::Phaerimm, dndSim::Doomcaller, dndSim::Knight_CaptainTheodoreMarshal, dndSim::LordCommanderEliasDrexel, dndSim::LordoftheFeast, dndSim::LucretiaMathias, dndSim::QueenofThieves, dndSim::SkitteringHorror, dndSim::Arch_DevilIaAffrat, dndSim::MordantSnare, dndSim::PactVampire, dndSim::SlowStorm, dndSim::StarDrake, dndSim::Star_SpawnofCthulhu, dndSim::Zmey, dndSim::OracleofStrixhaven, dndSim::GrimChampionofPestilence, dndSim::CoreSpawnWorm, dndSim::FungalServant, dndSim::AncientDeepCrow, dndSim::JourraeltheCaedogeist, dndSim::MageHunterGolem, dndSim::ScanlanShorthalt, dndSim::ArchonofBoundaries, dndSim::Witchkite, dndSim::RefractionofIlvaash, dndSim::Hundred_HandedOne, dndSim::Typhon, dndSim::Mordakhesh, dndSim::DeathGiantShroudedOne, dndSim::FomorianNoble, dndSim::TempestSpirit, dndSim::JarlaxleBaenre, dndSim::AdultMoonstoneDragon},
        {dndSim::Anagwendol, dndSim::Ekengarik, dndSim::Miasmorne, dndSim::WarDevil, dndSim::GithzeraiAnarch, dndSim::HellfireEngine, dndSim::Phoenix, dndSim::StarSpawnLarvaMage, dndSim::SteelPredator, dndSim::StormGiantQuintessent, dndSim::Titivilus, dndSim::NightmareBeast, dndSim::AdultBlueDragon, dndSim::AdultSilverDragon, dndSim::IronGolem, dndSim::Marilith, dndSim::Planetar, dndSim::Fzeg, dndSim::ArkhantheCruel, dndSim::Category3Krasis, dndSim::Zegana, dndSim::AdultFlameDragon, dndSim::AdultVoidDragon, dndSim::AdultWindDragon, dndSim::RiverKing, dndSim::SnowQueen, dndSim::DaemogothTitan, dndSim::Lhammaruntosz, dndSim::ShatorDemodand, dndSim::Udaak, dndSim::NintraSiotta, dndSim::StormGiantSkeleton, dndSim::ValinSarnaster, dndSim::PlatinumGolem, dndSim::AshenRider, dndSim::StoneGiantRockspeaker, dndSim::Hlam, dndSim::AdultAmethystDragon, dndSim::Zodar, dndSim::BoreWorm},
        {dndSim::Anacreda, dndSim::Jenevere, dndSim::Sarevok, dndSim::TyrantShadow, dndSim::BlueAbishai, dndSim::Nagpa, dndSim::Verminaard, dndSim::AdultBlueDracolich, dndSim::AdultGoldDragon, dndSim::AdultRedDragon, dndSim::Androsphinx, dndSim::DeathKnight, dndSim::DragonTurtle, dndSim::Goristro, dndSim::FactolSkall, dndSim::EldrickRuneweaver, dndSim::Lazav, dndSim::ElementalLocus, dndSim::MoonlitKing, dndSim::QueenofWitches, dndSim::Urochar, dndSim::HierophantMedusa, dndSim::OtherworldlyCorrupter, dndSim::AurumachRilmani, dndSim::Baernaloth, dndSim::FrostWorm, dndSim::Zikzokrishka, dndSim::PikeTrickfoot, dndSim::Hythonia, dndSim::FrostGiantIceShaper, dndSim::StormHerald, dndSim::TrollAmalgam, dndSim::LaeralSilverhand, dndSim::DraconicShard, dndSim::GhostDragon},
        {dndSim::AvatarofBaalzebul, dndSim::AwfulFisher, dndSim::Waeloquay, dndSim::Amnizu, dndSim::DrowFavoredConsort, dndSim::Sibriex, dndSim::Demilich, dndSim::Hraptnon, dndSim::Borborygmos, dndSim::Trostani, dndSim::AdultMithralDragon, dndSim::AdultSeaDragon, dndSim::LordoftheHunt, dndSim::Archaic, dndSim::Asteria, dndSim::Euryale, dndSim::Malaxxix, dndSim::AdultTimeDragon, dndSim::LichenLich, dndSim::Olhydra, dndSim::Yan_C_Bin, dndSim::CobaltGolem, dndSim::GrogStrongjaw, dndSim::KeylethVoiceoftheTempest, dndSim::PercivaldeRolo, dndSim::Vexahlia, dndSim::BeanstalkWurm, dndSim::TheLordofBlades, dndSim::FireGiantForgecaller, dndSim::WalkingStatueofWaterdeep, dndSim::AncientDeepDragon, dndSim::HollowDragon, dndSim::CosmicHorror},
        {dndSim::Bael, dndSim::RedAbishai, dndSim::Balor, dndSim::ElfVampirelAncientr, dndSim::AdultCaveDragon, dndSim::Hraesvelgr, dndSim::Shoggoth, dndSim::LordSoth, dndSim::Imix, dndSim::EnderDragon, dndSim::Polukranos, dndSim::KalaraqQuori, dndSim::CloudGiantDestinyGambler, dndSim::AncientCrystalDragon, dndSim::AncientLunarDragon, dndSim::LesserStarSpawnEmissary},
        {dndSim::IggwilvtheWitchQueen, dndSim::Devorastus, dndSim::Rimmon, dndSim::StyxDragon, dndSim::Zagum, dndSim::DrowMatronMother, dndSim::Leviathan, dndSim::Nightwalker, dndSim::AncientBrassDragon, dndSim::AncientWhiteDragon, dndSim::PitFiend, dndSim::BhaalSlayer, dndSim::HourglassWidow, dndSim::Executioner, dndSim::GrimChampionofBloodshed, dndSim::Kolyarut, dndSim::Ogrémoch, dndSim::FleshColossus, dndSim::Gigant, dndSim::StormGiantTempestCaller, dndSim::AncientTopazDragon},
    };

    std::vector<std::vector<std::shared_ptr<dndSim::npc>>> spell_monsters = {
        {dndSim::KettlesteamtheKenku, dndSim::GuardianPortrait, dndSim::FirenewtWarlockofImix, dndSim::GrungWildling, dndSim::KoboldScaleSorcerer, dndSim::Nilbog, dndSim::XvartWarlockofRaxivort, dndSim::AlbinoDwarfSpiritWarrior, dndSim::Eblis, dndSim::Dryad, dndSim::FaerieDragonlOranger, dndSim::FaerieDragonlRedr, dndSim::FaerieDragonlYellowr, dndSim::Kuo_toaWhip, dndSim::Yuan_tiPureblood, dndSim::MalikirianImp, dndSim::SkullLasherofMyrkul, dndSim::HedgeMage, dndSim::Horncaller, dndSim::ThoughtSpy, dndSim::BastetTempleCat, dndSim::Boloti, dndSim::Chernomoi, dndSim::JamnaGleamsilver, dndSim::DzaansSimulacrum, dndSim::Prisoner237, dndSim::EvilMage, dndSim::ScholarlyAgent, dndSim::FeathergaleKnight, dndSim::HedgeWitch, dndSim::SusanoftheSwamp, dndSim::FaeriePest, dndSim::Yusdrayl, dndSim::IarnoGlasstaffAlbrek, dndSim::Alseid, dndSim::Kysh, dndSim::PirateDeckWizard, dndSim::Sanbalet, dndSim::PsurlonRinger},
        {dndSim::SirTalavar, dndSim::Skylla, dndSim::Bard, dndSim::Berbalang, dndSim::DarklingElder, dndSim::HobgoblinIronShadow, dndSim::TortleDruid, dndSim::Asharra, dndSim::CultFanatic, dndSim::Druid, dndSim::FaerieDragonlBluer, dndSim::FaerieDragonlGreenr, dndSim::FaerieDragonlIndigor, dndSim::FaerieDragonlVioletr, dndSim::GithzeraiMonk, dndSim::LizardfolkShaman, dndSim::OrcEyeofGruumsh, dndSim::Priest, dndSim::SahuaginPriestess, dndSim::Droki, dndSim::DuergarDarkhaft, dndSim::DuergarKeeperoftheFlame, dndSim::Grisha, dndSim::Narrak, dndSim::VampiricIxitxachitlCleric, dndSim::Hamadryad, dndSim::EldritchPriest, dndSim::ReaperofBhaal, dndSim::WarlockoftheRatGod, dndSim::CounterfluxBlastseeker, dndSim::RakdosLampooner, dndSim::FolkofLeng, dndSim::InkDevil, dndSim::FrulamMondath, dndSim::OrcClawofLuthic, dndSim::OrcHandofYurtrus, dndSim::GrandolphaMuzgardt, dndSim::GarretLevistusson, dndSim::MaryGreymalkin, dndSim::LoreholdApprentice, dndSim::PrismariApprentice, dndSim::QuandrixApprentice, dndSim::SilverquillApprentice, dndSim::WitherbloomApprentice, dndSim::LaurinOphidas, dndSim::OccultInitiate, dndSim::Oddlewin, dndSim::BozakDraconian, dndSim::LanternArchon, dndSim::MustevalGuardinal, dndSim::KTulah, dndSim::RamSugar, dndSim::NezznartheBlackSpider, dndSim::CrushingWavePriest, dndSim::Fathomer, dndSim::HowlingHatredPriest, dndSim::Hurricane, dndSim::Oreioth, dndSim::WigganNettlebee, dndSim::AuspiciaDran, dndSim::BrahmaLutier, dndSim::PendragonBeestinger, dndSim::PhoenixAnvil, dndSim::ProphetessDran, dndSim::ArdwynElderofMeadowfen, dndSim::HaveloftheAutumnMoon, dndSim::HedgeBard, dndSim::LumaClericofArdea, dndSim::ShylaDenn, dndSim::VulpinPriestofKren, dndSim::FaeriePathlighter, dndSim::BelaktheOutcast, dndSim::Kaarghaz, dndSim::Snurrevin, dndSim::ThayanApprentice, dndSim::NezznartheSpider, dndSim::Naiad, dndSim::TritonShorestalker, dndSim::UthgardtShaman, dndSim::RipTidePriest, dndSim::Inspired, dndSim::TarkananAssassin, dndSim::BarnibusBlastwind, dndSim::FalaLefaliir, dndSim::JandarChergoba, dndSim::Kalain, dndSim::LaibaNanaRosse, dndSim::MelannorFellbranch, dndSim::TissinaKhyret, dndSim::Valetta, dndSim::CrystalDragonWyrmling, dndSim::DraconianMage, dndSim::DragonSpeaker, dndSim::EmeraldDragonWyrmling, dndSim::TopazDragonWyrmling, dndSim::AartukStarhorror, dndSim::Psurlon, dndSim::SpaceClown},
        {dndSim::Mercion, dndSim::MisterLight, dndSim::MisterWitch, dndSim::Zargash, dndSim::DankwoodHag, dndSim::Choldrith, dndSim::DeathlockWight, dndSim::DerroSavant, dndSim::IllusionistWizard, dndSim::Merrenoloth, dndSim::GithyankiWarrior, dndSim::GreenHag, dndSim::QuaggothThonot, dndSim::Yuan_tiMalisonlType1r, dndSim::Yuan_tiMalisonlType2r, dndSim::Yuan_tiMalisonlType3r, dndSim::MarkosDelphi, dndSim::Sirene, dndSim::PanjaianIlharan, dndSim::Scoundrel, dndSim::UrbanRanger, dndSim::PrecognitiveMage, dndSim::DuskthornDryad, dndSim::Greyfur, dndSim::Mirager, dndSim::DralmorrerBorngray, dndSim::PharblexSpattergoo, dndSim::Illusionist, dndSim::Yuan_tiMalisonlType4r, dndSim::Yuan_tiMalisonlType5r, dndSim::SephekKaltro, dndSim::GiantSlug, dndSim::Forlarren, dndSim::AyoJabelTier1r, dndSim::DermotWurderlTier1r, dndSim::GalsariadArdythlTier1r, dndSim::Brusipha, dndSim::LivingPortent, dndSim::BariaurWanderer, dndSim::BleakCabalVoidSoother, dndSim::GithzeraiTraveler, dndSim::SocietyofSensationMuse, dndSim::Bolbara, dndSim::SahuaginWarlockofUkotoa, dndSim::BlackEarthPriest, dndSim::EternalFlamePriest, dndSim::One_EyedShiver, dndSim::Skyweaver, dndSim::ThurlMerosska, dndSim::Windharrow, dndSim::AnchoriteofTalos, dndSim::SludgeHag, dndSim::DonaarBlitzen, dndSim::KthrissDrowb, dndSim::RosieBeestinger, dndSim::WalnutDankgrass, dndSim::KraghammerGoat_Knight, dndSim::VosskyrissSerpentfolk, dndSim::StrigTracker, dndSim::OgreChitterlord, dndSim::Siren, dndSim::Lampad, dndSim::MeletianHoplite, dndSim::LizardfolkSubchief, dndSim::SapphireDragonWyrmling, dndSim::AartukElder, dndSim::GithyankiBuccaneer, dndSim::SsurranDefiler},
        {dndSim::Strongheart, dndSim::SaleeththeCouatl, dndSim::Babau, dndSim::Barghest, dndSim::Deathlock, dndSim::Dybbuk, dndSim::HobgoblinDevastator, dndSim::NeogiMaster, dndSim::WarlockoftheArchfey, dndSim::Yuan_tiMindWhisperer, dndSim::Yuan_tiNightmareSpeaker, dndSim::Withers, dndSim::IrdaVeilKeeper, dndSim::BoneNagalGuardianr, dndSim::BoneNagalSpiritr, dndSim::Couatl, dndSim::Flameskull, dndSim::Lamia, dndSim::ThePuddingKing, dndSim::Dagryn, dndSim::MasterofSouls, dndSim::Pech, dndSim::CosmotronicBlastseeker, dndSim::KraulDeathPriest, dndSim::MindDrinkerVampire, dndSim::Reckoner, dndSim::Dau, dndSim::DeepOnePriest, dndSim::Domovoi, dndSim::Ratatosk, dndSim::AzbaraJos, dndSim::VellynneHarpell, dndSim::CogworkArchivist, dndSim::LoreholdPledgemage, dndSim::OriqRecruiter, dndSim::PrismariPledgemage, dndSim::QuandrixPledgemage, dndSim::SilverquillPledgemage, dndSim::WitherbloomPledgemage, dndSim::FateHag, dndSim::InitiateoftheComet, dndSim::HeraldsofDustRemnant, dndSim::HoundArchon, dndSim::MindsEyeMatterSmith, dndSim::MerrowShallowpriest, dndSim::ShoalarQuanderil, dndSim::Stonemelder, dndSim::Flabbergast, dndSim::Môrgæn, dndSim::GallusDruid, dndSim::RaptorRanger, dndSim::GoblinPsiCommander, dndSim::GrellPsychic, dndSim::Oracle, dndSim::Oread, dndSim::YakfolkPriest, dndSim::FirbolgPrimevalWarden, dndSim::DrowGunslinger, dndSim::SoluunXibrindas, dndSim::AmethystDragonWyrmling, dndSim::Neh_thalggu, dndSim::NeogiVoidHunter},
        {dndSim::Doric, dndSim::EdginDarvis, dndSim::SimonAumar, dndSim::Kelek, dndSim::Ringlerun, dndSim::Rictavio, dndSim::AdultOblex, dndSim::EnchanterWizard, dndSim::KrakenPriest, dndSim::SwarmofCraniumRats, dndSim::TransmuterWizard, dndSim::Yuan_tiPitMaster, dndSim::Barlgura, dndSim::Cambion, dndSim::DrowEliteWarrior, dndSim::Mezzoloth, dndSim::NightHag, dndSim::Unicorn, dndSim::MorwenaVeilmist, dndSim::Usagt, dndSim::DreadDoppelganger, dndSim::EldritchHerald, dndSim::Hollyphant, dndSim::Cavalier, dndSim::FluxBlastseeker, dndSim::GalvanicBlastseeker, dndSim::GolgariShaman, dndSim::MindMage, dndSim::Aridni, dndSim::FideleAngel, dndSim::TalistheWhite, dndSim::Enchanter, dndSim::Transmuter, dndSim::FrostDruid, dndSim::GnomeCeremorph, dndSim::VerbeegLongstrider, dndSim::XardorokSunblight, dndSim::AyoJabelTier2r, dndSim::DermotWurderlTier2r, dndSim::GalsariadArdythlTier2r, dndSim::InsightAcuere, dndSim::ScholarlyMastermind, dndSim::VerinThelyss, dndSim::CraniumRatSqueakerSwarm, dndSim::FatedShaker, dndSim::BloodHunter, dndSim::MasterSage, dndSim::ElizarDryflagon, dndSim::JimDarkmagic, dndSim::OminDran, dndSim::AshariSkydancer, dndSim::AshariWaverider, dndSim::RivermawStormborn, dndSim::DunbarrowWitch, dndSim::Snarla, dndSim::Tloques_Popolocas, dndSim::LeoninIconoclast, dndSim::SahuaginHighPriestess, dndSim::SahuaginWaveShaper, dndSim::BoneKnight, dndSim::ZakyaRakshasa, dndSim::FirbolgWanderer, dndSim::AmmaliaCassalanter, dndSim::DragonBlessed, dndSim::YoungCrystalDragon, dndSim::AstralElfStarPriest, dndSim::Mercane, dndSim::Thri_kreenMystic, dndSim::VampirateMage, dndSim::Isolde},
        {dndSim::EndelynMoongrave, dndSim::AnnisHag, dndSim::ConjurerWizard, dndSim::WarlockoftheGreatOldOne, dndSim::Malivar, dndSim::Foresworn, dndSim::Drider, dndSim::GithzeraiZerth, dndSim::Kuo_toaArchpriest, dndSim::Mage, dndSim::BlackGauntletofBane, dndSim::Krull, dndSim::HeraldsofDustExorcist, dndSim::Chaplain, dndSim::OscarYoren, dndSim::SaintGresha, dndSim::Lawmage, dndSim::UndercityMedusa, dndSim::MirrorHag, dndSim::SandHag, dndSim::Scheznyki, dndSim::WhiteApe, dndSim::Barbatos, dndSim::RathModar, dndSim::Conjurer, dndSim::Dandylion, dndSim::NassLantomirsGhost, dndSim::BraininaJar, dndSim::Galeokaerda, dndSim::MonasticInfiltrator, dndSim::OccultExtollant, dndSim::AurakDraconian, dndSim::EaterofKnowledge, dndSim::Flamewrath, dndSim::MirajVizann, dndSim::CorvaxRevayne, dndSim::CorvumDiviner, dndSim::CorvumNecromancer, dndSim::GabeWindsworth, dndSim::GallusNecromancer, dndSim::GlindaNightseed, dndSim::LumaWizard, dndSim::OdwaldEbonhart, dndSim::DuskHag, dndSim::FensirSkirmisher, dndSim::DavilStarsong, dndSim::KaevjaCynavern, dndSim::LosserMirklav, dndSim::ManafretCherryport, dndSim::RishaalthePage_Turner, dndSim::SkeemoWeirdbottle, dndSim::DraconianMastermind, dndSim::DragonbornofSardior, dndSim::PsurlonLeader},
        {dndSim::BavlornaBlightstraw, dndSim::BheurHag, dndSim::BlackAbishai, dndSim::Dhergoloth, dndSim::Draegloth, dndSim::Korred, dndSim::WarlockoftheFiend, dndSim::Dirt_Under_Nails, dndSim::RasNsi, dndSim::Xandala, dndSim::DrowMage, dndSim::MindFlayer, dndSim::Oni, dndSim::Yuan_tiAbomination, dndSim::SythianSkalderang, dndSim::TixieTockworth, dndSim::LesserAvariceSeraph, dndSim::LesserGluttonySeraph, dndSim::ShadowsteelGhast, dndSim::SmilertheDefiler, dndSim::BloodWitch, dndSim::DruidoftheOldWays, dndSim::Firefist, dndSim::Chelicerae, dndSim::DwarvenRingmage, dndSim::GildedDevil, dndSim::RedHag, dndSim::ShadowFeyEnchantress, dndSim::SpiderofLeng, dndSim::Neo_Otyugh, dndSim::SheldontheBlueberryDragon, dndSim::Avarice, dndSim::LoreholdProfessorofChaos, dndSim::LoreholdProfessorofOrder, dndSim::PrismariProfessorofExpression, dndSim::PrismariProfessorofPerfection, dndSim::QuandrixProfessorofSubstance, dndSim::QuandrixProfessorofTheory, dndSim::SilverquillProfessorofRadiance, dndSim::SilverquillProfessorofShadow, dndSim::WitherbloomProfessorofDecay, dndSim::WitherbloomProfessorofGrowth, dndSim::GithzeraiUniter, dndSim::AerisiKalinoth, dndSim::AshariFiretamer, dndSim::AshariStoneguard, dndSim::RemnantCultist, dndSim::PsionicAshenwight, dndSim::ThaneKayalithica, dndSim::TsucoraQuori, dndSim::YoungTopazDragon, dndSim::AstralElfCommander, dndSim::GithyankiStarSeer},
        {dndSim::SkabathaNightshade, dndSim::EzmereldadAvenir, dndSim::Blackguard, dndSim::DeathlockMastermind, dndSim::DivinerWizard, dndSim::KingofFeathers, dndSim::Zindar, dndSim::ForestMaster, dndSim::DrowPriestessofLolth, dndSim::GithyankiKnight, dndSim::GreenSlaad, dndSim::MindFlayerArcanist, dndSim::SpiritNaga, dndSim::XanMoonblade, dndSim::ObzedatGhost, dndSim::ArcaneGuardian, dndSim::BoneCollective, dndSim::DeepOneArchimandrite, dndSim::EmeraldOrderCultLeader, dndSim::KishiDemon, dndSim::LunarDevil, dndSim::Mallqui, dndSim::Diviner, dndSim::MindFlayerPsion, dndSim::AyoJabelTier3r, dndSim::DermotWurderlTier3r, dndSim::GalsariadArdythlTier3r, dndSim::OccultSilvertongue, dndSim::DecatonModron, dndSim::WardenArchon, dndSim::BastianThermandar, dndSim::AberrantZealot, dndSim::MindFlayerProphet, dndSim::TritonMasterofWaves, dndSim::JarlStorvald, dndSim::IstridHorn, dndSim::ManshoonSimulacrum, dndSim::ZirajtheHunter, dndSim::YoungEmeraldDragon, dndSim::YoungMoonstoneDragon, dndSim::AstralElfAristocrat, dndSim::Reigar, dndSim::InquisitoroftheMindFire, dndSim::InquisitoroftheSword, dndSim::InquisitoroftheTome},
        {dndSim::Tiax, dndSim::AbjurerWizard, dndSim::DrowHouseCaptain, dndSim::EvokerWizard, dndSim::Hydroloth, dndSim::NecromancerWizard, dndSim::Shadar_kaiGloomWeaver, dndSim::Ulitharid, dndSim::WarPriest, dndSim::CloudGiant, dndSim::Glabrezu, dndSim::GraySlaad, dndSim::Nycaloth, dndSim::Darien, dndSim::FlimpShagglecran, dndSim::Lothar, dndSim::PelyiousAvhoste, dndSim::Viktor, dndSim::HarvesterofLies, dndSim::ConclaveDryad, dndSim::MasterofCruelties, dndSim::Al_AeshmaGenie, dndSim::DevilboundGnome, dndSim::Blagothkus, dndSim::Abjurer, dndSim::Evoker, dndSim::Necromancer, dndSim::AurillFirstFormr, dndSim::EyeofFearandFlame, dndSim::GremorlysGhost, dndSim::SolarBastionKnight, dndSim::GloomWeaver, dndSim::AvoralGuardinal, dndSim::FerrumachRilmani, dndSim::FraternityofOrderLawBender, dndSim::GithzeraiFuturist, dndSim::CloudGiantGhost, dndSim::GarShatterkeel, dndSim::Vanifer, dndSim::RavagerSlaughterLord, dndSim::TaryonDarrington, dndSim::Lowarnizel, dndSim::Qunbraxel, dndSim::AbhorrentOverlord, dndSim::HashalaqQuori, dndSim::RemalliaHaventree, dndSim::YoungAmethystDragon, dndSim::YoungSapphireDragon, dndSim::Braxat, dndSim::GithyankiXenomancer},
        {dndSim::MadamEva, dndSim::Rahadin, dndSim::KohTam, dndSim::Alhoon, dndSim::AutumnEladrin, dndSim::ElderOblex, dndSim::GithyankiGish, dndSim::GithzeraiEnlightened, dndSim::SpringEladrin, dndSim::WinterEladrin, dndSim::DeathSlaad, dndSim::Deva, dndSim::GuardianNaga, dndSim::Yochlol, dndSim::CharmayneDaymore, dndSim::AribethdeTylmarande, dndSim::BorivikWindheim, dndSim::SaemonHavarian, dndSim::SuldilBaldoriel, dndSim::Biomancer, dndSim::Algorith, dndSim::FearSmith, dndSim::RubezahlDemon, dndSim::MonasticHighCurator, dndSim::ArchonofRedemption, dndSim::NonatonModron, dndSim::CyclopsStormcaller, dndSim::OozeMaster, dndSim::OshundotheAlhoon, dndSim::Amble, dndSim::MrDory, dndSim::Yarnspinner, dndSim::UndyingCouncilor, dndSim::VictoroCassalanter},
        {dndSim::BabaLysaga, dndSim::CloudGiantSmilingOne, dndSim::DrowShadowblade, dndSim::Morkoth, dndSim::Shadar_kaiSoulMonger, dndSim::Yagnoloth, dndSim::Exul, dndSim::Dao, dndSim::Djinni, dndSim::Efreeti, dndSim::Gynosphinx, dndSim::Marid, dndSim::DemodandKelubar, dndSim::EoAshmajiir, dndSim::XzartheChaosClone, dndSim::CandlelightDaemon, dndSim::DowncastApostate, dndSim::BabaYagasHorsemen, dndSim::BloodHag, dndSim::Buraq, dndSim::GrimJester, dndSim::Naina, dndSim::FogGiant, dndSim::HierophantoftheComet, dndSim::SoulMonger, dndSim::KansaldiFire_Eyes, dndSim::FarastuDemodand, dndSim::OctonModron, dndSim::ArrantQuill, dndSim::HighFaeImpostor, dndSim::Treefolk, dndSim::InfectedElderBrain, dndSim::MindFlayerClairvoyant, dndSim::NightmareShepherd, dndSim::CountessSansuri, dndSim::RadiantIdol},
        {dndSim::Archdruid, dndSim::DuergarDespot, dndSim::GithyankiKithrak, dndSim::Ki_rin, dndSim::Oinoloth, dndSim::Yuan_tiAnathema, dndSim::Arcanaloth, dndSim::Archmage, dndSim::Bebilith, dndSim::CorneliusWatson, dndSim::WerebearAscetic, dndSim::EoghanGhostweaver, dndSim::FiremaneAngel, dndSim::SireofInsanity, dndSim::BonepowderGhoul, dndSim::ChortDevil, dndSim::DemonLordAkyishigal, dndSim::Hundun, dndSim::Mavka, dndSim::Moghadam, dndSim::Thessalar, dndSim::Lohezet, dndSim::CuprilachRilmani, dndSim::SeptonModron, dndSim::AeorianNullifier, dndSim::SeaFury, dndSim::RemnantChosen, dndSim::HighFaeMage, dndSim::Riverine, dndSim::ArchonofFallingStars, dndSim::CloudGiantofEvilAir, dndSim::FomorianWarlockoftheDark, dndSim::HillGiantAvalancher, dndSim::StalkerofBaphomet, dndSim::AdultCrystalDragon},
        {dndSim::Zythan, dndSim::DrowArachnomancer, dndSim::Neothelid, dndSim::Rakshasa, dndSim::StormGiant, dndSim::Ultroloth, dndSim::Faldorn, dndSim::Jaheira, dndSim::NaesInuus, dndSim::ViconiaDeVir, dndSim::PaleMan, dndSim::TyreusIllusionist, dndSim::Haugbui, dndSim::Kraken, dndSim::HextonModron, dndSim::KelubarDemodand, dndSim::HighFaeNoble, dndSim::TarulVar, dndSim::Pari, dndSim::KingHekaton, dndSim::Zephyros, dndSim::Manshoon, dndSim::VajraSafahr, dndSim::AdultTopazDragon, dndSim::Muiral},
        {dndSim::CorruptionDevillPaeliryonr, dndSim::Ramius, dndSim::DrowInquisitor, dndSim::ElderBrain, dndSim::GithyankiSupremeCommander, dndSim::Retriever, dndSim::AvariceSeraph, dndSim::GluttonySeraph, dndSim::LichTroll, dndSim::MahaditheRakshasa, dndSim::ArchonoftheTriumvirate, dndSim::DeathpactAngel, dndSim::DevkarinLich, dndSim::Cambium, dndSim::Gypsosphinx, dndSim::OrobasDevil, dndSim::AlyxiantheAbsolved, dndSim::Hulgaz, dndSim::WerstenKern, dndSim::Shemeshka, dndSim::AdultEmeraldDragon},
        {dndSim::Sofina, dndSim::StrahdvonZarovich, dndSim::AdultSapphireDragon, dndSim::GreenAbishai, dndSim::SkullLord, dndSim::EldritchLich, dndSim::MummyLord, dndSim::VampireSpellcaster, dndSim::DemodandShator, dndSim::EdwinOdesseiron, dndSim::Phaerimm, dndSim::Doomcaller, dndSim::Knight_CaptainTheodoreMarshal, dndSim::LordCommanderEliasDrexel, dndSim::LucretiaMathias, dndSim::QueenofThieves, dndSim::OracleofStrixhaven, dndSim::GrimChampionofPestilence, dndSim::FungalServant, dndSim::JourraeltheCaedogeist, dndSim::ScanlanShorthalt, dndSim::ArchonofBoundaries, dndSim::Witchkite, dndSim::RefractionofIlvaash, dndSim::Mordakhesh, dndSim::DeathGiantShroudedOne, dndSim::FomorianNoble, dndSim::JarlaxleBaenre, dndSim::AdultMoonstoneDragon},
        {dndSim::Ekengarik, dndSim::GithzeraiAnarch, dndSim::StarSpawnLarvaMage, dndSim::SteelPredator, dndSim::Titivilus, dndSim::Planetar, dndSim::ArkhantheCruel, dndSim::Zegana, dndSim::RiverKing, dndSim::Lhammaruntosz, dndSim::ShatorDemodand, dndSim::NintraSiotta, dndSim::ValinSarnaster, dndSim::AshenRider, dndSim::Hlam, dndSim::AdultAmethystDragon},
        {dndSim::Jenevere, dndSim::Sarevok, dndSim::BlueAbishai, dndSim::Nagpa, dndSim::Verminaard, dndSim::Androsphinx, dndSim::DeathKnight, dndSim::FactolSkall, dndSim::EldrickRuneweaver, dndSim::Lazav, dndSim::MoonlitKing, dndSim::QueenofWitches, dndSim::HierophantMedusa, dndSim::AurumachRilmani, dndSim::Baernaloth, dndSim::PikeTrickfoot, dndSim::Hythonia, dndSim::StormHerald, dndSim::LaeralSilverhand, dndSim::DraconicShard},
        {dndSim::Amnizu, dndSim::DrowFavoredConsort, dndSim::Sibriex, dndSim::Trostani, dndSim::Archaic, dndSim::Asteria, dndSim::Euryale, dndSim::LichenLich, dndSim::Olhydra, dndSim::Yan_C_Bin, dndSim::KeylethVoiceoftheTempest, dndSim::Vexahlia, dndSim::TheLordofBlades},
        {dndSim::Bael, dndSim::LordSoth, dndSim::Imix, dndSim::KalaraqQuori, dndSim::CloudGiantDestinyGambler, dndSim::AncientCrystalDragon},
        {dndSim::IggwilvtheWitchQueen, dndSim::DrowMatronMother, dndSim::PitFiend, dndSim::HourglassWidow, dndSim::Ogrémoch, dndSim::StormGiantTempestCaller, dndSim::AncientTopazDragon},
    };

    std::vector<std::vector<std::shared_ptr<dndSim::npc>>> non_spell_monsters = {
        {dndSim::Homarid, dndSim::GiantSwan, dndSim::Raezil, dndSim::SwarmofCampestris, dndSim::TinSoldier, dndSim::StrahdZombie, dndSim::Choker, dndSim::ClockworkBronzeScout, dndSim::Deinonychus, dndSim::DuergarSoulblade, dndSim::FemaleSteeder, dndSim::GiantStrider, dndSim::GnollFleshGnawer, dndSim::KoboldDragonshield, dndSim::MawDemon, dndSim::Meazel, dndSim::Quickling, dndSim::SeaSpawn, dndSim::StoneCursed, dndSim::ThornyVegepygmy, dndSim::Vargouille, dndSim::AldanilLobsterfolkr, dndSim::Mantrap, dndSim::Pterafolk, dndSim::Su_monster, dndSim::TabaxiHunter, dndSim::IrdaSeeker, dndSim::ThanoiHunter, dndSim::AnimatedArmor, dndSim::BrassDragonWyrmling, dndSim::BrownBear, dndSim::Bugbear, dndSim::CopperDragonWyrmling, dndSim::DeathDog, dndSim::DireWolf, dndSim::Duergar, dndSim::FireSnake, dndSim::Ghoul, dndSim::GiantEagle, dndSim::GiantHyena, dndSim::GiantOctopus, dndSim::GiantSpider, dndSim::GiantToad, dndSim::GiantVulture, dndSim::GoblinBoss, dndSim::Half_OgrelOgrillonr, dndSim::Harpy, dndSim::Hippogriff, dndSim::Imp, dndSim::Lion, dndSim::Quadrone, dndSim::QuaggothSporeServant, dndSim::Quasit, dndSim::Scarecrow, dndSim::Specter, dndSim::Spy, dndSim::SwarmofQuippers, dndSim::Thri_kreen, dndSim::Tiger, dndSim::LordsAllianceSpy, dndSim::ClockworkDefender, dndSim::TasloiSniper, dndSim::BoneTrader, dndSim::LupiliskWhelp, dndSim::OblivionLeaper, dndSim::ShatterCorpse, dndSim::SlothGalloper, dndSim::VenomousGnoll, dndSim::BustertheBear, dndSim::LaylatheLizard, dndSim::HypnoticEldritchBlossom, dndSim::MercenaryEnvoy, dndSim::Category1Krasis, dndSim::GalvaniceWeird, dndSim::HybridPoisoner, dndSim::HybridShocker, dndSim::IndenturedSpirit, dndSim::RakdosPerformerBladeJuggler, dndSim::RakdosPerformerFireEater, dndSim::RakdosPerformerHigh_WireAcrobat, dndSim::AlehouseDrake, dndSim::Ashwalker, dndSim::Broodiken, dndSim::ChildoftheBriar, dndSim::ClockworkWeavingSpider, dndSim::CrimsonDrake, dndSim::Dogmole, dndSim::EmeraldEye, dndSim::EonicDrifter, dndSim::ErinaDefender, dndSim::Gerridae, dndSim::GlassGator, dndSim::Leshy, dndSim::MithralDragonWyrmling, dndSim::MossLurker, dndSim::NihilethicZombie, dndSim::RatfolkRogue, dndSim::RimeWormGrub, dndSim::SharkjawSkeleton, dndSim::WampusCat, dndSim::WindDragonWyrmling, dndSim::ZanskaranViper, dndSim::Two_HeadedCrocodile, dndSim::Dragonclaw, dndSim::Thorny, dndSim::HypnosMagen, dndSim::StrixhavenCampusGuide, dndSim::ScreamingDevilkin, dndSim::MerrowExtortionist, dndSim::SporeServantOctopus, dndSim::Tarak, dndSim::AnimatedGlassStatue, dndSim::HarrowHawk, dndSim::BronzeScout, dndSim::DragonArmySoldier, dndSim::RazorvineBlight, dndSim::SwarmofSunflies, dndSim::VargouilleReflection, dndSim::CoreSpawnCrawler, dndSim::HuskZombie, dndSim::Moorbounder, dndSim::SkenZabriss, dndSim::AnimatedChainedLibrary, dndSim::IceToad, dndSim::SildarHallwinter, dndSim::DankwoodGrung, dndSim::ClockworkDragon, dndSim::DemonfeedSpiderling, dndSim::FrayMerridan, dndSim::LesserDemon, dndSim::MountainLion, dndSim::VulpinCaptain, dndSim::DreadWarrior, dndSim::Durnn, dndSim::ScarletSentinel, dndSim::BronzeSable, dndSim::Nyx_FleeceRam, dndSim::ReturnedSentry, dndSim::SatyrReveler, dndSim::Krenko, dndSim::LoadingRig, dndSim::AstralBlight, dndSim::CragCat, dndSim::Zaltember, dndSim::LizardfolkScaleshield, dndSim::MerfolkSalvager, dndSim::PirateFirstMate, dndSim::SahuaginCoralSmasher, dndSim::Clawfoot, dndSim::IronDefender, dndSim::LivingBurningHands, dndSim::WarforgedSoldier, dndSim::BagJelly, dndSim::GiantRam, dndSim::GrinningCat, dndSim::DeepDragonWyrmling, dndSim::JammerLeech, dndSim::Boneless, dndSim::Carrionette, dndSim::SwarmofZombieLimbs},
        {dndSim::KavuPredator, dndSim::AgdonLongscarf, dndSim::Elkhorn, dndSim::GlassPegasus, dndSim::GlassworkGolem, dndSim::LivingDoll, dndSim::SelenelionTwin, dndSim::TreantSapling, dndSim::Zarak, dndSim::Aeshma, dndSim::AdultKruthik, dndSim::Aurochs, dndSim::DuergarHammerer, dndSim::DuergarKavalrachni, dndSim::DuergarMindMaster, dndSim::DuergarStoneGuard, dndSim::DuergarXarrorn, dndSim::GrungEliteWarrior, dndSim::GuardDrake, dndSim::Meenlock, dndSim::OgreBoltLauncher, dndSim::OgreHowdah, dndSim::Quetzalcoatlus, dndSim::Rutterkin, dndSim::ShadowMastiff, dndSim::VegepygmyChief, dndSim::Yuan_tiBroodguard, dndSim::ClockworkHorror, dndSim::StarLancer, dndSim::HewHackinstone, dndSim::YellowMuskCreeper, dndSim::NevermindGnomeInventor, dndSim::Allosaurus, dndSim::Ankheg, dndSim::AwakenedTree, dndSim::Azer, dndSim::BanditCaptain, dndSim::Berserker, dndSim::BlackDragonWyrmling, dndSim::BronzeDragonWyrmling, dndSim::CarrionCrawler, dndSim::CaveBear, dndSim::Centaur, dndSim::Ettercap, dndSim::Gargoyle, dndSim::GelatinousCube, dndSim::Ghast, dndSim::GiantBoar, dndSim::GiantConstrictorSnake, dndSim::GiantElk, dndSim::GibberingMouther, dndSim::GnollPackLord, dndSim::GreenDragonWyrmling, dndSim::Grick, dndSim::Griffon, dndSim::HunterShark, dndSim::IntellectDevourer, dndSim::Merrow, dndSim::Mimic, dndSim::MinotaurSkeleton, dndSim::MyconidSovereign, dndSim::Nothic, dndSim::OchreJelly, dndSim::Ogre, dndSim::OgreZombie, dndSim::Orog, dndSim::Pegasus, dndSim::Pentadrone, dndSim::Peryton, dndSim::Plesiosaurus, dndSim::PolarBear, dndSim::Poltergeist, dndSim::Quaggoth, dndSim::Rhinoceros, dndSim::RugofSmothering, dndSim::Saber_ToothedTiger, dndSim::SeaHag, dndSim::SilverDragonWyrmling, dndSim::SpinedDevil, dndSim::SwarmofPoisonousSnakes, dndSim::Wererat, dndSim::WhiteDragonWyrmling, dndSim::Will_o_Wisp, dndSim::AwakenedZurkhwood, dndSim::ChamberlainofZuggtmoy, dndSim::VampiricIxitxachitl, dndSim::GnollBrute, dndSim::HorrorFlitHunter, dndSim::MjorkSootlingSwarm, dndSim::OblivionWhistler, dndSim::OozingVulture, dndSim::SeaDrake, dndSim::SkeletonCannoneer, dndSim::SpythronarSwarm, dndSim::SpythronarWeb, dndSim::Vitebriate, dndSim::ThomasTToad, dndSim::IronConsul, dndSim::HybridBrute, dndSim::HybridFlier, dndSim::SkyjekRoc, dndSim::Anubian, dndSim::Behtu, dndSim::Beli, dndSim::CaveDragonWyrmling, dndSim::ClockworkHound, dndSim::Cobbleswarm, dndSim::DeepOne, dndSim::Doppelrat, dndSim::Eala, dndSim::EelHound, dndSim::Firegeist, dndSim::FlameDragonWyrmling, dndSim::GiantAnt, dndSim::GrayThirster, dndSim::KoboldAlchemist, dndSim::KoboldTrapsmith, dndSim::Myling, dndSim::Noctiny, dndSim::PaperDrake, dndSim::PutridHaunt, dndSim::RoachlingLord, dndSim::Shadhavar, dndSim::Shellycoat, dndSim::SpiderThief, dndSim::TendrilPuppet, dndSim::Uraeus, dndSim::VileBarber, dndSim::VoidDragonWyrmling, dndSim::Imelda, dndSim::Dragonwing, dndSim::BlackGuardDrake, dndSim::BlueGuardDrake, dndSim::GreenGuardDrake, dndSim::RedGuardDrake, dndSim::WhiteGuardDrake, dndSim::DemosMagen, dndSim::RelicSloth, dndSim::Blindheim, dndSim::Varnoth, dndSim::CreepyDoll, dndSim::MinotaurInfiltrator, dndSim::FewmasterGholcag, dndSim::Dabus, dndSim::Gingwatzim, dndSim::MimicChair, dndSim::BlackEarthGuard, dndSim::EternalFlameGuardian, dndSim::DankwoodDuergar, dndSim::KingRobbittheSlimy, dndSim::KegRobot, dndSim::OakTruestrike, dndSim::SplugoththeReturned, dndSim::CentaurSkeleton, dndSim::Plainscow, dndSim::BennaSeridan, dndSim::BirdfolkDockmaster, dndSim::CervanBanditGeneral, dndSim::SewerKing, dndSim::AnimatedTable, dndSim::Calcryx, dndSim::DuergarSpy, dndSim::Four_ArmedGargoyle, dndSim::GiantCrayfish, dndSim::Nereid, dndSim::ThayanWarrior, dndSim::GoblinPsiBrawler, dndSim::Aurumvorax, dndSim::BurnishedHart, dndSim::SatyrThornbearer, dndSim::Two_HeadedCerberus, dndSim::PurpleWormling, dndSim::BullywugCroaker, dndSim::DrownedBlade, dndSim::KoalinthSergeant, dndSim::LocathahHunter, dndSim::PirateCaptain, dndSim::ShellShark, dndSim::SkeletalSwarm, dndSim::UndyingSoldier, dndSim::GiantTick, dndSim::GriffonCavalryRider, dndSim::LadyGondafrey, dndSim::ShardShunner, dndSim::Thrakkus, dndSim::Dragonnel, dndSim::EggHunterHatchling, dndSim::MoonstoneDragonWyrmling, dndSim::SwarmofHoardScarabs, dndSim::AartukWeedling, dndSim::Autognome, dndSim::HadozeeExplorer, dndSim::LunarDragonWyrmling, dndSim::Thri_kreenHunter, dndSim::Vampirate, dndSim::SwarmofGremishkas, dndSim::SwarmofMaggots, dndSim::Wereraven, dndSim::AnimatedBallista, dndSim::Werebat},
        {dndSim::Alagarthas, dndSim::BullywugKnight, dndSim::Molliver, dndSim::PhantomWarrior, dndSim::BigWaterSlurpent, dndSim::Archer, dndSim::Bulezau, dndSim::CaveFisher, dndSim::DeepScion, dndSim::DolphinDelighter, dndSim::DuergarScreamer, dndSim::FlailSnail, dndSim::Giff, dndSim::Leucrotta, dndSim::MartialArtsAdept, dndSim::Neogi, dndSim::OgreChainBrute, dndSim::Redcap, dndSim::ShadowMastiffAlpha, dndSim::SlitheringTracker, dndSim::Swashbuckler, dndSim::SwordWraithWarrior, dndSim::Trapper, dndSim::VampiricMist, dndSim::PuppeteerParasite, dndSim::AnkylosaurusZombie, dndSim::AssassinVine, dndSim::GiantSnappingTurtle, dndSim::GirallonZombie, dndSim::TombDwarf, dndSim::Ankylosaurus, dndSim::Basilisk, dndSim::BeardedDevil, dndSim::BlueDragonWyrmling, dndSim::BugbearChief, dndSim::DisplacerBeast, dndSim::Doppelganger, dndSim::GiantScorpion, dndSim::GoldDragonWyrmling, dndSim::Grell, dndSim::HellHound, dndSim::HobgoblinCaptain, dndSim::HookHorror, dndSim::KillerWhale, dndSim::Knight, dndSim::Kuo_toaMonitor, dndSim::Manticore, dndSim::Minotaur, dndSim::Mummy, dndSim::Nightmare, dndSim::Owlbear, dndSim::PhaseSpider, dndSim::Spectator, dndSim::Veteran, dndSim::WaterWeird, dndSim::Werewolf, dndSim::Wight, dndSim::WinterWolf, dndSim::Yeti, dndSim::DeepkingHorgarSteelshadowV, dndSim::HookHorrorSporeServant, dndSim::TroglodyteChampionofLaogzed, dndSim::VeteranoftheGauntlet, dndSim::SwordSpider, dndSim::Lupilisk, dndSim::Mjork, dndSim::PsychicFragmentSwarm, dndSim::ScreamThief, dndSim::SkeletonCommander, dndSim::Skinweaver, dndSim::BillyBeaver, dndSim::AmrikVanthampur, dndSim::MortlockVanthampur, dndSim::RilsaRael, dndSim::AnimatedCoffin, dndSim::RatPrince, dndSim::FlyingHorror, dndSim::Amphiptere, dndSim::Bagiennik, dndSim::Bearfolk, dndSim::Cactid, dndSim::Citrullus, dndSim::ClockworkBeetleSwarm, dndSim::ClockworkHuntsman, dndSim::Darakhul, dndSim::ElvishVeteranArcher, dndSim::FarDarrig, dndSim::GnollHavocRunner, dndSim::Goat_Man, dndSim::JbaFofiSpider, dndSim::Jaculus, dndSim::KotBayun, dndSim::Mahoru, dndSim::MbieluDinosaur, dndSim::Millitaur, dndSim::MindrotThrall, dndSim::MonolithFootman, dndSim::NightScorpion, dndSim::Pombero, dndSim::RavenfolkWarrior, dndSim::SeaDragonWyrmling, dndSim::SpireWalker, dndSim::Strife, dndSim::StygianFat_TailedScorpion, dndSim::SwarmofPrismaticBeetles, dndSim::SwarmofSluaghs, dndSim::SwarmofWharflings, dndSim::Thursir, dndSim::TosculiWarrior, dndSim::VenomousMummy, dndSim::WolfReaverDwarf, dndSim::Tooth_N_Claw, dndSim::Two_HeadedOwlbear, dndSim::OrcRedFangofShargaas, dndSim::AwakenedWhiteMoose, dndSim::GalvanMagen, dndSim::GoliathWarrior, dndSim::KoboldVampireSpawn, dndSim::SnowGolem, dndSim::Chupacabra, dndSim::BrackishTrudge, dndSim::AssassinBug, dndSim::CrabFolk, dndSim::NeedleLord, dndSim::NorkerWarLeader, dndSim::Xill, dndSim::IrvanWastewalkerlTier1r, dndSim::MaggieKeeneyeslTier1r, dndSim::ScholarlyExcavator, dndSim::YoungHorizonbackTortoise, dndSim::WerewolflKrallenhorder, dndSim::HarrowHound, dndSim::DragonArmyDragonnel, dndSim::DragonArmyOfficer, dndSim::KapakDraconian, dndSim::WastelandDragonnel, dndSim::HarmoniumPeacekeeper, dndSim::TranscendentOrderInstinct, dndSim::BristledMoorbounder, dndSim::Nergaliid, dndSim::MormesktheWraith, dndSim::DarkTideKnight, dndSim::PortentiaDran, dndSim::ClaspCutthroat, dndSim::RavagerStabby_Stabber, dndSim::JerbeenSwashbuckler, dndSim::KralltheScavengerKing, dndSim::MapachBrute, dndSim::RiffintheAsh_Knight, dndSim::StrigKnight, dndSim::KnightofEldraine, dndSim::RedtoothWerefox, dndSim::GiantIceToad, dndSim::GiantLightningEel, dndSim::Kalka_Kylla, dndSim::Nahual, dndSim::EncephalonGemmule, dndSim::AkroanHoplite, dndSim::BrokenKingAntigonos, dndSim::FleecemaneLion, dndSim::FlitterstepEidolon, dndSim::ThunderbeastSkeleton, dndSim::YakfolkWarrior, dndSim::BullywugRoyal, dndSim::DrownedAscetic, dndSim::LizardfolkRender, dndSim::SahuaginChampion, dndSim::SahuaginHatchlingSwarm, dndSim::Dolgaunt, dndSim::KarrnathiUndeadSoldier, dndSim::GiantGoose, dndSim::GiantOx, dndSim::GoliathGiant_Kin, dndSim::MudHulk, dndSim::SpottedLion, dndSim::DiningTableMimic, dndSim::RenaerNeverember, dndSim::SaethCromley, dndSim::ZhentMartialArtsAdept, dndSim::DraconianInfiltrator, dndSim::DragonChosen, dndSim::DragonfleshGrafter, dndSim::AstralElfWarrior, dndSim::GiffShipmate, dndSim::NeogiHatchlingSwarm, dndSim::NeogiPirate, dndSim::PlasmoidWarrior, dndSim::SolarDragonWyrmling, dndSim::CarrionStalker, dndSim::SwarmofScarabs, dndSim::AnimatedStove, dndSim::LavaChild},
        {dndSim::SteelLeafKavu, dndSim::HillGiantBlorbo, dndSim::FiendishFormian, dndSim::ClockworkIronCobra, dndSim::ClockworkStoneDefender, dndSim::Girallon, dndSim::Merregon, dndSim::OgreBatteringRam, dndSim::Stegosaurus, dndSim::YethHound, dndSim::Kamadan, dndSim::LiaraPortyr, dndSim::Banshee, dndSim::BlackPudding, dndSim::Chuul, dndSim::Elephant, dndSim::Ettin, dndSim::Ghost, dndSim::GnollFangofYeenoghu, dndSim::HelmedHorror, dndSim::Incubus, dndSim::LizardKing, dndSim::LizardQueen, dndSim::OrcWarChief, dndSim::RedDragonWyrmling, dndSim::ShadowDemon, dndSim::Succubus, dndSim::Wereboar, dndSim::Weretiger, dndSim::ChuulSporeServant, dndSim::Yestabrod, dndSim::Wolfwere, dndSim::Bloodbonded, dndSim::ChappedBrute, dndSim::ShadowsteelGhoul, dndSim::SkyDrake, dndSim::ZombieTroll, dndSim::DukeThalamraVanthampur, dndSim::HazeHulk, dndSim::BlistercoilWeird, dndSim::AccursedDefiler, dndSim::AnglerWorm, dndSim::ArborealGrappler, dndSim::AshDrake, dndSim::BanditLord, dndSim::BeheadedVengefulSpirit, dndSim::Bereginyas, dndSim::CarrionBeetle, dndSim::CavelightMoss, dndSim::CityWatchCaptain, dndSim::DeathButterflySwarm, dndSim::DeathcapMyconid, dndSim::DerroFetalSavant, dndSim::Dorreq, dndSim::Edimmu, dndSim::Firebird, dndSim::FlabGiant, dndSim::ForestMarauder, dndSim::Frostveil, dndSim::ImperialGhoul, dndSim::LichHound, dndSim::Mngwa, dndSim::NkosiPridelord, dndSim::OculoSwarm, dndSim::Ostinato, dndSim::SapDemon, dndSim::Selang, dndSim::Serpopard, dndSim::ShadowFeyGuardian, dndSim::Skitterhaunt, dndSim::SwarmofManabaneScarabs, dndSim::TrollkinReaver, dndSim::TuskedSkyfish, dndSim::Volguloth, dndSim::Vættir, dndSim::WaterLeaper, dndSim::LangdedrosaCyanwrath, dndSim::OrcBladeofIlneval, dndSim::ChardalynBerserker, dndSim::GiantWalrus, dndSim::LivingBigbysHand, dndSim::VerbeegMarauder, dndSim::Groff, dndSim::Decapus, dndSim::Demogorgon, dndSim::Thessalhydra, dndSim::DancingFlame, dndSim::ScuttlingSerpentmaw, dndSim::Geist, dndSim::Werevulture, dndSim::IronCobra, dndSim::StoneDefender, dndSim::Leedara, dndSim::SivakDraconian, dndSim::HandsofHavocFireStarter, dndSim::GuardianWolf, dndSim::Shemshime, dndSim::Burrowshark, dndSim::FalcontheHunter, dndSim::ChaosQuadrapod, dndSim::RivermawBrawler, dndSim::VosskyrissSerpentfolkGhost, dndSim::Ashsnake, dndSim::ForestProwler, dndSim::SweettoothHorror, dndSim::GiantSubterraneanLizard, dndSim::Kelpie, dndSim::Tecuziztecatl, dndSim::HumanoidMutate, dndSim::Ebondeath, dndSim::AurumvoraxDenLeader, dndSim::SoulShaker, dndSim::ReturnedKakomantis, dndSim::ReturnedPalamnite, dndSim::SetessanHoplite, dndSim::WingedBull, dndSim::WingedLion, dndSim::DrownedAssassin, dndSim::GiantCoralSnake, dndSim::SahuaginDeepDiver, dndSim::JalesterSilvermane, dndSim::Nimblewright, dndSim::DraconianDreadnought, dndSim::DragonTurtleWyrmling, dndSim::MetallicPeacekeeper, dndSim::BrownScavver, dndSim::Gaj, dndSim::PlasmoidBoss, dndSim::Strigoi, dndSim::ZombiePlagueSpreader},
        {dndSim::HolgaKilgore, dndSim::Envy, dndSim::Warduke, dndSim::IzekStrazni, dndSim::HangryOtyugh, dndSim::Allip, dndSim::Banderhobb, dndSim::Brontosaurus, dndSim::Catoblepas, dndSim::ClockworkOakenBolter, dndSim::KruthikHiveLord, dndSim::MasterThief, dndSim::Mindwitness, dndSim::SpawnofKyuss, dndSim::StarSpawnMangler, dndSim::Tanarukk, dndSim::Tlincalli, dndSim::WoodWoad, dndSim::HamishHewland, dndSim::Rotter, dndSim::ClayGladiator, dndSim::Dragonbait, dndSim::TombGuardian, dndSim::NevermindGnomeMastermind, dndSim::TraagDraconian, dndSim::AirElemental, dndSim::BarbedDevil, dndSim::BeholderZombie, dndSim::Bulette, dndSim::EarthElemental, dndSim::FireElemental, dndSim::FleshGolem, dndSim::GiantCrocodile, dndSim::GiantShark, dndSim::Gladiator, dndSim::Gorgon, dndSim::Half_RedDragonVeteran, dndSim::HillGiant, dndSim::Otyugh, dndSim::RedSlaad, dndSim::Revenant, dndSim::Roper, dndSim::SahuaginBaron, dndSim::Salamander, dndSim::ShamblingMound, dndSim::Triceratops, dndSim::Troll, dndSim::UmberHulk, dndSim::VampireSpawn, dndSim::WaterElemental, dndSim::Werebear, dndSim::Wraith, dndSim::Xorn, dndSim::YoungRemorhaz, dndSim::Prisoner13, dndSim::MrGreystone, dndSim::Achaierai, dndSim::SkeletonWarrior, dndSim::Dawndrinker, dndSim::DowncastMercenary, dndSim::Ithjar, dndSim::Lenchtahg, dndSim::OblivionBrute, dndSim::Snapjaw, dndSim::DeathsHeadofBhaal, dndSim::Hellwasp, dndSim::Nine_FingersKeene, dndSim::UlderRavengard, dndSim::AnimatedDeleriumSludge, dndSim::EntropicFlame, dndSim::LivingDeepHaze, dndSim::WalkingDeleriumGeode, dndSim::BattleforceAngel, dndSim::Felidar, dndSim::Asanbosam, dndSim::BlackKnightCommander, dndSim::Bouda, dndSim::ClockworkAbomination, dndSim::CorruptedUshabti, dndSim::CorruptingOoze, dndSim::DerroShadowAntipaladin, dndSim::DogmoleJuggernaut, dndSim::Drakon, dndSim::DrownedMaiden, dndSim::Fellforged, dndSim::GiantAntQueen, dndSim::HoundoftheNight, dndSim::HulkingWhelp, dndSim::IronGhoul, dndSim::Kikimora, dndSim::KoboldChieftain, dndSim::Likho, dndSim::Lorelei, dndSim::Mi_go, dndSim::NgobouDinosaur, dndSim::NihilethicDominator, dndSim::OwlHarpy, dndSim::QuicksilverSiegeOrb, dndSim::RatKing, dndSim::Ravenala, dndSim::RavenfolkDoomCroaker, dndSim::RiftSwine, dndSim::Sandman, dndSim::SarcophagusSlime, dndSim::ShadowFeyForestHunter, dndSim::SpawnofAkyishigal, dndSim::SpawnofArbeyach, dndSim::Subek, dndSim::TempleDog, dndSim::TosculiEliteBowRaider, dndSim::VaporLynx, dndSim::Vila, dndSim::WormheartedSuffragan, dndSim::YoungSpinosaurusDinosaur, dndSim::Zimwi, dndSim::ZmeyHeadling, dndSim::LynxCreatlach, dndSim::SirUrsas, dndSim::CaptainOthelstan, dndSim::Rain, dndSim::BjornhildSolvigsdottir, dndSim::ColdlightWalker, dndSim::GunvaldHalraggson, dndSim::JarundElkhardt, dndSim::SpittingMimic, dndSim::MageHunter, dndSim::RuinGrinder, dndSim::AbolethSpawn, dndSim::IrvanWastewalkerlTier2r, dndSim::MaggieKeeneyeslTier2r, dndSim::MonasticOperative, dndSim::VampireNeonate, dndSim::GiantSharkSkeleton, dndSim::AmbitiousAssassin, dndSim::Riffler, dndSim::RuinSpider, dndSim::SirJared, dndSim::OakenBolter, dndSim::AtharNull, dndSim::TimeDragonWyrmling, dndSim::Shadowghast, dndSim::ImmortalLotusMonk, dndSim::LightningGolem, dndSim::Skitterwidget, dndSim::Dragonfang, dndSim::Hellenrae, dndSim::Razerblast, dndSim::Viari, dndSim::ClaspEnforcer, dndSim::ColdSnapSpirit, dndSim::Trinket, dndSim::Cobblefright, dndSim::CorvumAssassin, dndSim::GallusMonk, dndSim::DeathlessRider, dndSim::NightmareHaunt, dndSim::GreaterZombie, dndSim::SeaLion, dndSim::FeralAshenwight, dndSim::FiendishAuger, dndSim::RuxithidtheChosen, dndSim::Blaze, dndSim::Tlacatecolo, dndSim::Aphemia, dndSim::GhostbladeEidolon, dndSim::Gold_ForgedSentinel, dndSim::ManticoreHeart_Piercer, dndSim::ChiefGuh, dndSim::HulkingCrab, dndSim::HarpyMatriarch, dndSim::LivingIronStatue, dndSim::SkeletalJuggernaut, dndSim::Skum, dndSim::LivingLightningBolt, dndSim::DustHulk, dndSim::RimeHulk, dndSim::Titanothere, dndSim::BlackViper, dndSim::Hrabbaz, dndSim::Obliteros, dndSim::DragonbloodOoze, dndSim::EggHunterAdult, dndSim::GemStalker, dndSim::YoungDeepDragon, dndSim::AstralElfHonorGuard, dndSim::Feyr, dndSim::MurderComet, dndSim::NightScavver, dndSim::StarlightApparition, dndSim::Elise, dndSim::VampiricMindFlayer},
        {dndSim::StrahdsAnimatedArmor, dndSim::Bodak, dndSim::DuergarWarlord, dndSim::Gauth, dndSim::MouthofGrolantor, dndSim::WhiteAbishai, dndSim::SkeletalHorror, dndSim::SpikedTombGuardian, dndSim::Chasme, dndSim::Chimera, dndSim::Cyclops, dndSim::GalebDuhr, dndSim::HobgoblinWarlord, dndSim::InvisibleStalker, dndSim::Mammoth, dndSim::Medusa, dndSim::Vrock, dndSim::Wyvern, dndSim::YoungBrassDragon, dndSim::YoungWhiteDragon, dndSim::WolfwereAlpha, dndSim::CorpseWalker, dndSim::InfernalTormentor, dndSim::LupiliskElder, dndSim::MjorkAsher, dndSim::MjorkBurner, dndSim::GideonLightward, dndSim::ProteanAbomination, dndSim::BloodfrayGiant, dndSim::Category2Krasis, dndSim::OrzhovGiant, dndSim::Angatra, dndSim::ApauPerapeDemon, dndSim::ClockworkMyrmidon, dndSim::CrystallineDevil, dndSim::FateEater, dndSim::Fext, dndSim::Gbahali, dndSim::GearforgedTemplar, dndSim::Gnarljak, dndSim::GreaterDeathButterflySwarm, dndSim::IceMaiden, dndSim::Kongamato, dndSim::Lindwurm, dndSim::Loxoda, dndSim::Malphas, dndSim::Mamura, dndSim::Nichny, dndSim::Nightgarm, dndSim::RimeWorm, dndSim::RottingWind, dndSim::SaltDevil, dndSim::SandSilhouette, dndSim::Sandwyrm, dndSim::ShadowFeyDuelist, dndSim::SpectralGuardian, dndSim::SwarmofWolfSpirits, dndSim::WeepingTreant, dndSim::YoungWindDragon, dndSim::Trepsin, dndSim::FrostGiantSkeleton, dndSim::LightDevourer, dndSim::SwarmofSorrowfish, dndSim::IstarianDrone, dndSim::DoomguardRotBlade, dndSim::EquinalGuardinal, dndSim::CoreSpawnEmissary, dndSim::Gloomstalker, dndSim::GorthoktheThunderBoar, dndSim::DotyX, dndSim::Wakewyrm, dndSim::Witchstalker, dndSim::CentaurMummy, dndSim::OtyughMutate, dndSim::Enderman, dndSim::EaterofHope, dndSim::UnderworldCerberus, dndSim::MinotaurLivingCrystalStatue, dndSim::SahuaginBlademaster, dndSim::ThousandTeeth, dndSim::EchoofDemogorgon, dndSim::MistHulk, dndSim::AnimatedBreath, dndSim::DragonfleshAbomination, dndSim::Brohg, dndSim::GiffShockTrooper, dndSim::VampirateCaptain, dndSim::GallowsSpeaker, dndSim::PriestofOsybus, dndSim::ZombieClot},
        {dndSim::TreeBlight, dndSim::VladimirHorngaard, dndSim::Halog, dndSim::AirElementalMyrmidon, dndSim::Armanite, dndSim::EarthElementalMyrmidon, dndSim::FireElementalMyrmidon, dndSim::LostSorrowsworn, dndSim::Maurezhi, dndSim::Shadar_kaiShadowDancer, dndSim::VenomTroll, dndSim::WaterElementalMyrmidon, dndSim::Yggdrasti, dndSim::ArtusCimber, dndSim::DreamEater, dndSim::BlueSlaad, dndSim::GiantApe, dndSim::GrickAlpha, dndSim::ShieldGuardian, dndSim::StoneGiant, dndSim::YoungBlackDragon, dndSim::YoungCopperDragon, dndSim::DeepSpider, dndSim::DemodandFarastu, dndSim::Kivan, dndSim::AwakenedChappedBrute, dndSim::Fzeglaich, dndSim::MjorkCharger, dndSim::WerewolfRavager, dndSim::Fluxcharger, dndSim::CausticCharger, dndSim::CoralDrake, dndSim::Deathwisp, dndSim::Dissimortuum, dndSim::Einherjar, dndSim::ElderShadowDrake, dndSim::GhostKnight, dndSim::HeraldofDarkness, dndSim::LakeTroll, dndSim::OgreCorruptedChieftain, dndSim::PossessedPillar, dndSim::PsoglavDemon, dndSim::RisenReaver, dndSim::SandSpider, dndSim::ShadowBeast, dndSim::SoulEater, dndSim::Spark, dndSim::SwarmofFireDancers, dndSim::UmbralVampire, dndSim::YoungMithralDragon, dndSim::Rezmir, dndSim::TalonBeast, dndSim::ShadowDancer, dndSim::TheLost, dndSim::SkeletalKnight, dndSim::MercykillerBloodhound, dndSim::SwavainBasilisk, dndSim::Dragonsoul, dndSim::DranninSplithelm, dndSim::Ghald, dndSim::GooseMother, dndSim::GiantSkeleton, dndSim::FleshMeld, dndSim::Haint, dndSim::TheranChimera, dndSim::WoeStrider, dndSim::MawofSekolah, dndSim::LivingCloudkill, dndSim::Barrowghast, dndSim::CinderHulk, dndSim::TrollMutate, dndSim::DragonbornofTiamat, dndSim::Liondrake, dndSim::Kindori, dndSim::Thri_kreenGladiator, dndSim::YoungLunarDragon, dndSim::BodytakerPlant, dndSim::Necrichor},
        {dndSim::ForgeFitzwilliam, dndSim::Canoloth, dndSim::CorpseFlower, dndSim::Howler, dndSim::Shoosuva, dndSim::SwordWraithCommander, dndSim::GiantZombieConstrictorSnake, dndSim::BagofNails, dndSim::TyrannosaurusZombie, dndSim::Assassin, dndSim::ChainDevil, dndSim::Cloaker, dndSim::Fomorian, dndSim::FrostGiant, dndSim::Hezrou, dndSim::Hydra, dndSim::TyrannosaurusRex, dndSim::YoungBronzeDragon, dndSim::YoungGreenDragon, dndSim::Imoen, dndSim::OblivionJuggernaut, dndSim::Xakalonus, dndSim::YoungBlightscaleDragon, dndSim::FiendishFleshGolem, dndSim::CrimsonCountess, dndSim::BloodDrinkerVampire, dndSim::Gloamwing, dndSim::GuardianGiant, dndSim::NivixCyclops, dndSim::Ala, dndSim::Blemmyes, dndSim::ChainedAngel, dndSim::Chronalmental, dndSim::DegenerateTitan, dndSim::DragonleafTree, dndSim::DuneMimic, dndSim::FeywardTree, dndSim::IdolicDeity, dndSim::MonolithChampion, dndSim::Qwyllion, dndSim::RustDrake, dndSim::Savager, dndSim::Tophet, dndSim::Ushabti, dndSim::YoungFlameDragon, dndSim::TheDemogorgon, dndSim::Scrapper, dndSim::GnollVampire, dndSim::GoliathWerebear, dndSim::IceTroll, dndSim::IsarrKronenstrom, dndSim::LivingBladeofDisaster, dndSim::SpermWhale, dndSim::IrvanWastewalkerlTier3r, dndSim::MaggieKeeneyeslTier3r, dndSim::RuidiumElephant, dndSim::Caradoc, dndSim::HarmoniumCaptain, dndSim::TranscendentOrderConduit, dndSim::AeorianReverser, dndSim::HorizonbackTortoise, dndSim::CorruptedAvatarofLurue, dndSim::JadeTigress, dndSim::SteelCrane, dndSim::MarlosUrnrayle, dndSim::CinderslagElemental, dndSim::DemonfeedSpider, dndSim::Oakheart, dndSim::HugeGiantCrab, dndSim::IntellectSnare, dndSim::VampiricJadeStatue, dndSim::WarforgedTitan, dndSim::EttinCeremorph, dndSim::FensirDevourer, dndSim::UrstulFloxin, dndSim::DragonbornofBahamut, dndSim::Eyedrake, dndSim::HoardMimic, dndSim::YoungSeaSerpent, dndSim::Nosferatu, dndSim::RelentlessSlasher, dndSim::UnspeakableHorror, dndSim::Scaladar},
        {dndSim::DisplacerFiend, dndSim::Champion, dndSim::Flind, dndSim::FrostSalamander, dndSim::LonelySorrowsworn, dndSim::RotTroll, dndSim::Fractine, dndSim::AbominableYeti, dndSim::BoneDevil, dndSim::ClayGolem, dndSim::FireGiant, dndSim::Treant, dndSim::YoungBlueDragon, dndSim::YoungSilverDragon, dndSim::Nauk, dndSim::SkeletonLord, dndSim::TiberiusInuus, dndSim::Valygar, dndSim::VellinFarstride, dndSim::ChappedBruteAbomination, dndSim::StormbornIthjar, dndSim::BigLinda, dndSim::ShadowHorror, dndSim::Arx, dndSim::Bukavac, dndSim::DeepDrake, dndSim::DesertGiant, dndSim::EaterofDust, dndSim::GhostwalkSpider, dndSim::Horakh, dndSim::MalakbelDemon, dndSim::Necrohydra, dndSim::Oozasis, dndSim::VineLord, dndSim::VineTrollSkeleton, dndSim::Xhkarsh, dndSim::YoungCaveDragon, dndSim::YoungSeaDragon, dndSim::YoungVoidDragon, dndSim::Coral, dndSim::Murgaxor, dndSim::OriqBloodMage, dndSim::Ydemi, dndSim::CorruptedGiantShark, dndSim::SlitheringBloodfin, dndSim::BossAugustus, dndSim::BossDelour, dndSim::TheLonely, dndSim::Anhkolox, dndSim::FrostGiantZombie, dndSim::Neronvain, dndSim::DeepCrow, dndSim::YoungMagmaLandshark, dndSim::Oculorb, dndSim::Whistler, dndSim::Phylaskia, dndSim::DukeZalto, dndSim::Harshnag, dndSim::DrownedMaster, dndSim::Cairnwight, dndSim::Ceratops, dndSim::LightningHulk, dndSim::StoneGiantofEvilEarth, dndSim::Ahmaergo, dndSim::Durnan, dndSim::MeloonWardragon, dndSim::Mirt, dndSim::TashlynYafeera, dndSim::YoungSolarDragon, dndSim::Jiangshi, dndSim::ShadowAssassin},
        {dndSim::XenkYendar, dndSim::AfflictionDevillKocrachonr, dndSim::HellcatlBezekirar, dndSim::LesserTyrantShadow, dndSim::DeathKiss, dndSim::Froghemoth, dndSim::Orthon, dndSim::StarSpawnHulk, dndSim::StoneGiantDreamwalker, dndSim::SummerEladrin, dndSim::KyrillaAccursedGorgon, dndSim::GiantFour_ArmedGargoyle, dndSim::Aboleth, dndSim::StoneGolem, dndSim::YoungGoldDragon, dndSim::YoungRedDragon, dndSim::MinscandBoo, dndSim::AncientCorpseWalker, dndSim::EmpyreanBrazenBull, dndSim::NightveilSpecter, dndSim::SunderShaman, dndSim::AutomataDevil, dndSim::BoneSwarm, dndSim::Liosalfar, dndSim::Planewatcher, dndSim::SaltGolem, dndSim::SathaqWorm, dndSim::StatueofTalos, dndSim::SeththeShapeshiftingDragon, dndSim::AurillSecondFormr, dndSim::TombTapper, dndSim::ClockworkKraken, dndSim::GishathSunsAvatar, dndSim::Daemogoth, dndSim::AlyxiantheHunter, dndSim::SkyLeviathan, dndSim::LesserDeathDragon, dndSim::RedRuin, dndSim::Darkweaver, dndSim::Maelephant, dndSim::AeorianAbsorber, dndSim::GearkeeperConstruct, dndSim::SapphireSentinel, dndSim::MalformedKraken, dndSim::WhiteMaw, dndSim::CloakerMutate, dndSim::EncephalonCluster, dndSim::Tlexolotl, dndSim::Aerosaur, dndSim::FireGiantofEvilFire, dndSim::FomorianDeepCrawler, dndSim::Frostmourn, dndSim::MawofYeenoghu, dndSim::YoungDragonTurtle, dndSim::EyeMonger, dndSim::GiffWarlord},
        {dndSim::BabaLysagasCreepingHut, dndSim::Oneirovore, dndSim::Alkilith, dndSim::Balhannoth, dndSim::HungrySorrowsworn, dndSim::SpiritTroll, dndSim::Behir, dndSim::HornedDevil, dndSim::Remorhaz, dndSim::Roc, dndSim::Kagain, dndSim::MontaronandtheLaughingSkull, dndSim::TorogarSteelfist, dndSim::AbominableBeauty, dndSim::BerstucDemon, dndSim::CorpseMound, dndSim::Dullahan, dndSim::EyeGolem, dndSim::KoralkDevil, dndSim::Valkyrie, dndSim::Vesiculosa, dndSim::Voidling, dndSim::YchenBannog, dndSim::AurillThirdFormr, dndSim::ChardalynDragon, dndSim::AlyxiantheTormented, dndSim::DeathEmbrace, dndSim::EnchantingInfiltrator, dndSim::TheHungry, dndSim::YoungTimeDragon, dndSim::Parasite_infestedBehir, dndSim::NaergothBladelord, dndSim::Severin, dndSim::SnappingHydra, dndSim::TempestHart, dndSim::DoomwakeGiant, dndSim::MonstrousPeryton, dndSim::FireHellion, dndSim::Firegaunt, dndSim::FrostGiantofEvilWater, dndSim::StormCrab, dndSim::AdultDeepDragon, dndSim::Dracohydra, dndSim::DragonboneGolem, dndSim::Megapede, dndSim::VoidScavver},
        {dndSim::AyperoboSwarm, dndSim::PainDevillExcruciarchr, dndSim::Shredwing, dndSim::Slayer, dndSim::Boneclaw, dndSim::Eidolon, dndSim::FrostGiantEverlastingOne, dndSim::GrayRender, dndSim::Warlord, dndSim::StoneJuggernaut, dndSim::Erinyes, dndSim::GreaterShadowHorror, dndSim::OrdealTree, dndSim::ArclightPhoenix, dndSim::AncientTitan, dndSim::Annelidast, dndSim::BearKing, dndSim::DragonEel, dndSim::Flutterflesh, dndSim::Gug, dndSim::HeraldofBlood, dndSim::HoardGolem, dndSim::SkeinWitch, dndSim::SonofFenris, dndSim::Thuellai, dndSim::Titanoboa, dndSim::TosculiHiveQueen, dndSim::AlyxianAboleth, dndSim::AlyxiantheCallous, dndSim::DoomguardDoomLord, dndSim::Adranach, dndSim::AspectofFire, dndSim::HighFaeKindguard, dndSim::SpecterofNight, dndSim::Bakunawa, dndSim::IronscaleHydra, dndSim::DeathGiantReaper, dndSim::Esthetic, dndSim::RelentlessJuggernaut},
        {dndSim::Jabberwock, dndSim::Barachiel, dndSim::AngrySorrowsworn, dndSim::Devourer, dndSim::DireTroll, dndSim::Narzugon, dndSim::StarSpawnSeer, dndSim::Wastrilith, dndSim::Atropal, dndSim::AdultBrassDragon, dndSim::AdultWhiteDragon, dndSim::Beholder, dndSim::Nalfeshnee, dndSim::Vampire, dndSim::YoungRedShadowDragon, dndSim::Gravekeeper, dndSim::Skyswimmer, dndSim::MaskWight, dndSim::NihilethAboleth, dndSim::SpinosaurusDinosaur, dndSim::SteamGolem, dndSim::Stuhac, dndSim::Sunbird, dndSim::AlyxiantheDispossessed, dndSim::TheAngry, dndSim::CoreSpawnSeer, dndSim::BakMei, dndSim::CanopicGolem, dndSim::Criosphinx, dndSim::Altisaur, dndSim::SpectralCloud, dndSim::AdultLunarDragon, dndSim::LoupGarou, dndSim::ZorakLightdrinker},
        {dndSim::MaelephantNomad, dndSim::Vorvolaka, dndSim::CadaverCollector, dndSim::FireGiantDreadnought, dndSim::AdultBlackDragon, dndSim::AdultCopperDragon, dndSim::DeathTyrant, dndSim::IceDevil, dndSim::Lindwyrm, dndSim::Crokektoeck, dndSim::Wurm, dndSim::Isonade, dndSim::KrakeSpawn, dndSim::SmaragdineGolem, dndSim::UshabtiRoyalGuard, dndSim::Thessalkraken, dndSim::BreathDrinker, dndSim::GreaterDeathDragon, dndSim::EmberRoc, dndSim::MagmaLandshark, dndSim::WraithrootTree, dndSim::YoungKraken, dndSim::JuvenileKraken, dndSim::FuryofKostchtchie, dndSim::Regisaur, dndSim::AncientSeaSerpent, dndSim::AdultSolarDragon, dndSim::Shockerstomper},
        {dndSim::GreatKroomPurpleWorm, dndSim::Nabassu, dndSim::AsteroidSpider, dndSim::AdultBronzeDragon, dndSim::AdultGreenDragon, dndSim::PurpleWorm, dndSim::VampireWarrior, dndSim::BodhiIrenicus, dndSim::LordoftheFeast, dndSim::SkitteringHorror, dndSim::Arch_DevilIaAffrat, dndSim::MordantSnare, dndSim::PactVampire, dndSim::SlowStorm, dndSim::StarDrake, dndSim::Star_SpawnofCthulhu, dndSim::Zmey, dndSim::CoreSpawnWorm, dndSim::AncientDeepCrow, dndSim::MageHunterGolem, dndSim::Hundred_HandedOne, dndSim::Typhon, dndSim::TempestSpirit},
        {dndSim::Anagwendol, dndSim::Miasmorne, dndSim::WarDevil, dndSim::HellfireEngine, dndSim::Phoenix, dndSim::StormGiantQuintessent, dndSim::NightmareBeast, dndSim::AdultBlueDragon, dndSim::AdultSilverDragon, dndSim::IronGolem, dndSim::Marilith, dndSim::Fzeg, dndSim::Category3Krasis, dndSim::AdultFlameDragon, dndSim::AdultVoidDragon, dndSim::AdultWindDragon, dndSim::SnowQueen, dndSim::DaemogothTitan, dndSim::Udaak, dndSim::StormGiantSkeleton, dndSim::PlatinumGolem, dndSim::StoneGiantRockspeaker, dndSim::Zodar, dndSim::BoreWorm},
        {dndSim::Anacreda, dndSim::TyrantShadow, dndSim::AdultBlueDracolich, dndSim::AdultGoldDragon, dndSim::AdultRedDragon, dndSim::DragonTurtle, dndSim::Goristro, dndSim::ElementalLocus, dndSim::Urochar, dndSim::OtherworldlyCorrupter, dndSim::FrostWorm, dndSim::Zikzokrishka, dndSim::FrostGiantIceShaper, dndSim::TrollAmalgam, dndSim::GhostDragon},
        {dndSim::AvatarofBaalzebul, dndSim::AwfulFisher, dndSim::Waeloquay, dndSim::Demilich, dndSim::Hraptnon, dndSim::Borborygmos, dndSim::AdultMithralDragon, dndSim::AdultSeaDragon, dndSim::LordoftheHunt, dndSim::Malaxxix, dndSim::AdultTimeDragon, dndSim::CobaltGolem, dndSim::GrogStrongjaw, dndSim::PercivaldeRolo, dndSim::BeanstalkWurm, dndSim::FireGiantForgecaller, dndSim::WalkingStatueofWaterdeep, dndSim::AncientDeepDragon, dndSim::HollowDragon, dndSim::CosmicHorror},
        {dndSim::RedAbishai, dndSim::Balor, dndSim::ElfVampirelAncientr, dndSim::AdultCaveDragon, dndSim::Hraesvelgr, dndSim::Shoggoth, dndSim::EnderDragon, dndSim::Polukranos, dndSim::AncientLunarDragon, dndSim::LesserStarSpawnEmissary},
        {dndSim::Devorastus, dndSim::Rimmon, dndSim::StyxDragon, dndSim::Zagum, dndSim::Leviathan, dndSim::Nightwalker, dndSim::AncientBrassDragon, dndSim::AncientWhiteDragon, dndSim::BhaalSlayer, dndSim::Executioner, dndSim::GrimChampionofBloodshed, dndSim::Kolyarut, dndSim::FleshColossus, dndSim::Gigant},
    };

